(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    264383,       5140]
NotebookOptionsPosition[    263590,       5115]
NotebookOutlinePosition[    263929,       5130]
CellTagsIndexPosition[    263886,       5127]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sVars", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<k\>\"", ",", "\"\<l\>\""}], 
     "}"}]}], ";", 
   RowBox[{"tVars", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<m\>\"", ",", "\"\<n\>\""}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Phi", "[", "x_", "]"}], "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox["x", 
         SqrtBox["2"]], "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Averages", " ", "in", " ", "case", " ", "of", " ", "an", " ", "Erf", " ", 
    "teacher", " ", "and", " ", "student", " ", "needed", " ", "in", " ", 
    "order", " ", "to", " ", "formulate", " ", "the", " ", "dynamics", " ", 
    "and", " ", "compute", " ", "the", " ", "generalization", " ", "error"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I2Erf", "[", "C2_", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"ArcSin", "[", 
      FractionBox[
       RowBox[{"C2", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]], "]"}]}], 
    "\[Pi]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I3Erf", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}]}], ")"}]}], 
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
       SuperscriptBox[
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"C3", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"I4Erf", "[", "C4_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[CapitalLambda]0", ",", "\[CapitalLambda]1", ",", 
        "\[CapitalLambda]2", ",", "\[CapitalLambda]4"}], "}"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalLambda]4", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         SuperscriptBox[
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}]}], ";", 
       RowBox[{"\[CapitalLambda]0", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]}], "-", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}], "+", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"\[CapitalLambda]1", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"\[CapitalLambda]2", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"Return", "[", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"ArcSin", "[", 
           FractionBox["\[CapitalLambda]0", 
            RowBox[{
             SqrtBox["\[CapitalLambda]1"], " ", 
             SqrtBox["\[CapitalLambda]2"]}]], "]"}]}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", 
          SqrtBox["\[CapitalLambda]4"]}]], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Averages", " ", "in", " ", "case", " ", "of", " ", "a", " ", "ReLU", " ", 
    "teacher", " ", "and", " ", "student"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I2ReLU", "[", "C2_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"C2", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
    FractionBox[
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "-", 
       SuperscriptBox[
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}]], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ReLU", "[", "C3_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"]}]]}], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}]]], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"C3", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"positionDuplicates", "[", "list_", "]"}], ":=", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"Range", "@", 
       RowBox[{"Length", "[", "list", "]"}]}], ",", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"NOT", " ", "IMPORTANT", " ", "FOR", " ", 
     RowBox[{"NOW", ":", " ", 
      RowBox[{"Ignore", " ", "the", " ", "following", " ", "averages"}]}]}], 
    ",", " ", "experimental"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I4ReLU11", "[", "C2_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "-", "2"}],
        ")"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "-", 
        SuperscriptBox[
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "2"]}]]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ")"}], 
      " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{
           "C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
          RowBox[{
           RowBox[{
           "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]]], 
       "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I2ErfReLU", "[", "C2_", "]"}], ":=", 
   FractionBox[
    RowBox[{"C2", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"C2", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ErfReLU", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{"C3", "\[LeftDoubleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"C3", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ReLUErf", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     SqrtBox[
      FractionBox["2", "\[Pi]"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}], ")"}]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HelperReLU", "[", "varList_", "]"}], ":=", 
    RowBox[{"Return", "[", "0", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Not", " ", 
    RowBox[{"important", ":", " ", 
     RowBox[{
     "This", " ", "section", " ", "deals", " ", "with", " ", "returning", " ",
       "the", " ", "correct", " ", "symbol", " ", 
      RowBox[{"(", 
       RowBox[{"order", " ", "parameter"}], ")"}], " ", "for", " ", "a", " ", 
      "covariance", " ", "between", " ", "two", " ", "variables"}]}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getCovar", "[", 
     RowBox[{"var1_", ",", "var2_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"sVars", ",", 
          RowBox[{"First", "[", "var1", "]"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"sVars", ",", 
            RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "var1", "]"}], "\[LessEqual]", 
             RowBox[{"Last", "[", "var2", "]"}]}], ",", 
            RowBox[{"Return", "[", 
             RowBox[{
              SubscriptBox["Q", 
               RowBox[{
                RowBox[{"Last", "[", "var1", "]"}], ",", 
                RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}],
              "]"}], ",", 
            RowBox[{"Return", "[", 
             RowBox[{
              SubscriptBox["Q", 
               RowBox[{
                RowBox[{"Last", "[", "var2", "]"}], ",", 
                RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}],
              "]"}]}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{
            SubscriptBox["R", 
             RowBox[{
              RowBox[{"Last", "[", "var1", "]"}], ",", 
              RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"sVars", ",", 
            RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{
            SubscriptBox["R", 
             RowBox[{
              RowBox[{"Last", "[", "var2", "]"}], ",", 
              RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
           "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"T", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"Last", "[", "var1", "]"}], ",", 
             RowBox[{"Last", "[", "var2", "]"}]}], "\[RightDoubleBracket]"}], 
           "]"}]}], "]"}]}], "]"}], ";"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createCoVar", "[", "varList_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"returnMat", ",", "r", ",", "c"}], "}"}], ",", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Length", "[", "varList", "]"}]}], ";", 
       RowBox[{"returnMat", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"r", "=", "1"}], ",", 
         RowBox[{"r", "\[LessEqual]", "d"}], ",", 
         RowBox[{"r", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "r"}], ",", 
           RowBox[{"c", "\[LessEqual]", "d"}], ",", 
           RowBox[{"c", "++"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"d", "\[Equal]", "2"}], ",", 
               RowBox[{"getCovar", "[", 
                RowBox[{
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "c", 
                  "\[RightDoubleBracket]"}]}], "]"}], ",", 
               RowBox[{"getCovar", "[", 
                RowBox[{
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "c", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"c", ",", "r"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}]}], ";"}]}], 
          "]"}]}], "]"}], ";", "returnMat"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"IMPORTANT", ":", " ", 
    RowBox[{
    "This", " ", "function", " ", "formulates", " ", "the", " ", "dynamical", 
     " ", "equations", " ", "for", " ", "the", " ", "desired", " ", 
     "system"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{"Simplify", " ", "significantly"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FormulateDynamics", "[", 
     RowBox[{"actTeach_", ",", "actStud_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqnsR", ",", " ", "eqnsQ", ",", " ", "eg"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Switch", "[", 
        RowBox[{"actStud", ",", "\[IndentingNewLine]", "\"\<ReLU\>\"", ",", 
         RowBox[{
          RowBox[{"I2Stud", "=", "I2ReLU"}], ";", 
          RowBox[{"I3Stud", "=", "I3ReLU"}], ";", 
          RowBox[{"I4", "=", "HelperReLU"}], ";", 
          RowBox[{"assumps", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"RAssumptionsReLU", ",", "QAssumptionsReLU"}], "}"}], 
            "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"actTeach", "\[Equal]", "\"\<ReLU\>\""}], ",", 
            RowBox[{
             RowBox[{"I2Teach", "=", "I2ReLU"}], ";", 
             RowBox[{"I2Cross", "=", "I2ReLU"}], ";", 
             RowBox[{"I3Teach", "=", "I3ReLU"}], ";", 
             RowBox[{"I4Teach", "=", "I4ReLU"}], ";"}], ",", 
            RowBox[{
             RowBox[{"I2Teach", "=", "I2Erf"}], ";", 
             RowBox[{"I2Cross", "=", "I2ErfReLU"}], ";", 
             RowBox[{"I3Teach", "=", "I3ErfReLU"}], ";"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\"\<Erf\>\"", ",", 
         RowBox[{
          RowBox[{"I2Stud", "=", "I2Erf"}], ";", 
          RowBox[{"I3Stud", "=", "I3Erf"}], ";", 
          RowBox[{"I4Stud", "=", "I4Erf"}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"actTeach", "\[Equal]", "\"\<ReLU\>\""}], ",", 
            RowBox[{
             RowBox[{"I2Teach", "=", "I2ReLU"}], ";", 
             RowBox[{"I2Cross", "=", "I2ErfReLU"}], ";", 
             RowBox[{"I3Teach", "=", "I3ReLUErf"}], ";", 
             RowBox[{"assumps", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"RAssumptionsReLU", ",", "QAssumptionsReLU"}], "}"}], 
               "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"I2Teach", "=", "I2Erf"}], ";", 
             RowBox[{"I2Cross", "=", "I2Erf"}], ";", 
             RowBox[{"I3Teach", "=", "I3Erf"}], ";", 
             RowBox[{"I4Teach", "=", "I4Erf"}]}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Here", " ", "the", " ", "equations", " ", "are", " ", "formulated", 
          " ", "using", " ", "the", " ", "correct", " ", "averages", " ", 
          "I2"}], ",", " ", 
         RowBox[{"I3", " ", "and", " ", "I4"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eqnsR", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["R", 
               RowBox[{"i", ",", "n"}]], "\[Prime]",
              MultilineFunction->None], "[", "\[Alpha]", "]"}], "\[Equal]", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"\[Eta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "m", "M"], 
                  RowBox[{"I3Teach", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}], "-", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "j", "K"], 
                  RowBox[{"I3Stud", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}]}], ")"}]}], ",", "assumps"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}]}], ";", 
       RowBox[{"eqnsQ", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "K"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "i"}], ",", 
           RowBox[{"k", "\[LessEqual]", "K"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"eqnsQ", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"eqnsQ", ",", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["Q", 
                  RowBox[{"i", ",", "k"}]], "\[Prime]",
                 MultilineFunction->None], "[", "\[Alpha]", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{"\[Eta]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "m", "M"], 
                    RowBox[{"I3Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}], "-", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "j", "K"], 
                    RowBox[{"I3Stud", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "m", "M"], 
                    RowBox[{"I3Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}], "-", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "j", "K"], 
                    RowBox[{"I3Stud", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}], ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[Eta]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "m", "M"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "n", "M"], 
                    RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "n", "M"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "j", "K"], 
                    RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}]}], "+", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "l", "K"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "j", "K"], 
                    RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<l\>\"", ",", "l"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}]}], ")"}]}]}]}]}], "]"}]}]}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Onderstaand", " ", "stuk", " ", "is", " ", "gebruikt", " ", "voor",
            " ", "de", " ", "single"}], "-", 
          RowBox[{"layer", " ", "ReLU", " ", "perceptron"}]}], ",", " ", 
         RowBox[{"omdat", " ", "hiervoor", " ", "de", " ", 
          RowBox[{"eta", "^", "2"}], " ", "term", " ", "hoogstens", " ", "2", 
          "d", " ", "averages", " ", 
          RowBox[{"bevat", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], " ", 
         RowBox[{"I4ReLU11", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["Q", 
                RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}], ",", 
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}], ",", 
              RowBox[{
               RowBox[{
               "T", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], "]"}]}], "*)"}], " ", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Side", " ", "effect", " ", "of", " ", "this", " ", 
         RowBox[{"function", ":", " ", 
          RowBox[{
          "the", " ", "generalization", " ", "error", " ", "for", " ", "this",
            " ", "architecture", " ", "is", " ", "globally", " ", 
           "defined"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eg", "[", "\[Alpha]_", "]"}], ":=", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"i", "=", "1"}], "K"], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "K"], 
             RowBox[{"I2Stud", "[", 
              RowBox[{"createCoVar", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
              "]"}]}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "K"], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"m", "=", "1"}], "M"], 
              RowBox[{"I2Cross", "[", 
               RowBox[{"createCoVar", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
               "]"}]}]}]}], "+", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"m", "=", "1"}], "M"], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"n", "=", "1"}], "M"], 
             RowBox[{"I2Teach", "[", 
              RowBox[{"createCoVar", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<m\>\"", ",", "m"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
              "]"}]}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"R", "\[Rule]", "eqnsR"}], ",", 
          RowBox[{"Q", "\[Rule]", "eqnsQ"}], ",", 
          RowBox[{"generr", "\[Rule]", 
           RowBox[{"eg", "[", "\[Alpha]", "]"}]}]}], "|>"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"solveEqns", "[", 
      RowBox[{
      "Rinit_", ",", "Qinit_", ",", "vinit_", ",", "winit_", ",", "Rs_", ",", 
       "Qs_", ",", "vs_", ",", "ws_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"solutions", "=", 
        RowBox[{"First", "[", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "eqnsR", "]"}], ",", 
             RowBox[{"ReleaseHold", "[", "eqnsQ", "]"}], ",", 
             RowBox[{"Flatten", "[", "Rinit", "]"}], ",", "Qinit"}], "]"}], 
           ",", 
           RowBox[{"Join", "[", 
            RowBox[{"Rs", ",", "Qs"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}]}], "]"}], 
         "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "K"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"n", "=", "1"}], ",", 
           RowBox[{"n", "\[LessEqual]", "M"}], ",", 
           RowBox[{"n", "++"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["r", 
              RowBox[{"i", ",", "n"}]], "=", 
             RowBox[{
              SubscriptBox["R", 
               RowBox[{"i", ",", "n"}]], "/.", "\[VeryThinSpace]", 
              RowBox[{"solutions", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], " ", "M"}], "+", "n"}], 
               "\[RightDoubleBracket]"}]}]}], ";"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"count", "=", "1"}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "K"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "i"}], ",", 
           RowBox[{"k", "\[LessEqual]", "K"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["q", 
              RowBox[{"i", ",", "k"}]], "=", 
             RowBox[{
              SubscriptBox["Q", 
               RowBox[{"i", ",", "k"}]], "/.", "\[VeryThinSpace]", 
              RowBox[{"solutions", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"K", " ", "M"}], "+", "count"}], 
               "\[RightDoubleBracket]"}]}]}], ";", 
            RowBox[{"count", "++"}], ";"}]}], "]"}]}], "]"}], ";"}], ")"}]}], 
    ";"}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"createReLUAssumptions", "[", 
    RowBox[{"M_", ",", "K_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RAssumptionsReLU", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"i", ",", "m"}]], "[", "\[Alpha]", "]"}], "2"], 
          "\[LessEqual]", 
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], " ", 
           RowBox[{
            RowBox[{
            "T", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}]}]}], "&&", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"i", ",", "m"}]], "[", "\[Alpha]", "]"}], "\[Element]", 
          TemplateBox[{},
           "Reals"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"QAssumptionsReLU", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], "^", "2"}], 
          "\[LessEqual]", 
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], " ", 
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"j", ",", "j"}]], "[", "\[Alpha]", "]"}]}]}], "&&", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], "\[Element]", 
          TemplateBox[{},
           "Reals"]}], "&&", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], 
            "\[GreaterEqual]", "0"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "K"}], "}"}]}], "]"}]}], ";"}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.741417766878932*^9, {3.7414178136520367`*^9, 3.7414180323196106`*^9}, {
   3.741418142753128*^9, 3.74141815001657*^9}, 3.7414182048818393`*^9, {
   3.7414182358432536`*^9, 3.7414182458582172`*^9}, {3.7414182977674656`*^9, 
   3.74141831268191*^9}, {3.7414183901056585`*^9, 3.74141844976068*^9}, {
   3.7414189240340323`*^9, 3.7414189244879293`*^9}, {3.741419034744487*^9, 
   3.741419064069398*^9}, {3.7414199155727577`*^9, 3.7414199343095922`*^9}, {
   3.7414201853626537`*^9, 3.7414201938868337`*^9}, {3.7414204760219955`*^9, 
   3.7414204767838383`*^9}, {3.7414206419819975`*^9, 3.741420645659052*^9}, {
   3.7414207844977446`*^9, 3.741420787426893*^9}, {3.7414209502462*^9, 
   3.741420962017806*^9}, {3.7414210298122873`*^9, 3.7414210307675047`*^9}, {
   3.750233686238963*^9, 3.750233693208152*^9}, {3.750233744011318*^9, 
   3.7502338611876497`*^9}, {3.750233931543561*^9, 3.750233932956682*^9}, {
   3.7502339647219677`*^9, 3.750233984490898*^9}, 3.7502340155118923`*^9, {
   3.7502340696610394`*^9, 3.75023407004464*^9}, {3.750234180166548*^9, 
   3.750234206541513*^9}, {3.750234351033214*^9, 3.7502343689279537`*^9}, 
   3.750234431183111*^9, {3.750234468880437*^9, 3.750234581377149*^9}, {
   3.750234632542137*^9, 3.750234725987009*^9}, {3.750234835330235*^9, 
   3.7502348783881397`*^9}, {3.750234946788145*^9, 3.750234952926354*^9}, {
   3.750235105701767*^9, 3.7502351080687847`*^9}, {3.750235161362995*^9, 
   3.750235161597478*^9}, 3.750235244810684*^9, 3.750235468043602*^9, {
   3.7502357595485077`*^9, 3.750235761095175*^9}, {3.750235953627931*^9, 
   3.750235957834675*^9}, {3.750236057193761*^9, 3.7502360589194937`*^9}, {
   3.7502361403698387`*^9, 3.750236199570587*^9}, {3.750236241341853*^9, 
   3.750236246498494*^9}, {3.7502362968827753`*^9, 3.750236335843343*^9}, {
   3.7502365748320837`*^9, 3.750236576099577*^9}, {3.750236620474616*^9, 
   3.750236623663641*^9}, {3.750237145933381*^9, 3.7502371464062767`*^9}, {
   3.750237179776636*^9, 3.750237212157707*^9}, {3.75023726716984*^9, 
   3.750237313316041*^9}, 3.750237521793502*^9, {3.750237671692642*^9, 
   3.7502376740262527`*^9}, {3.7502390880620832`*^9, 
   3.7502390891382313`*^9}, {3.750239161467984*^9, 3.750239170586404*^9}, {
   3.750239225900345*^9, 3.750239229673628*^9}, {3.7502395849365387`*^9, 
   3.750239593891245*^9}, {3.750239692082035*^9, 3.7502396949416656`*^9}, {
   3.7502400878657207`*^9, 3.750240115816914*^9}, {3.750343822940446*^9, 
   3.750343854139063*^9}, {3.75053509605019*^9, 3.750535116236343*^9}, {
   3.750535598429101*^9, 3.750535626850296*^9}, {3.750535803136817*^9, 
   3.75053580697675*^9}, {3.750536183866181*^9, 3.750536214823339*^9}, {
   3.751119216669256*^9, 3.75111922152325*^9}, 3.751119488392544*^9, {
   3.7511196132043543`*^9, 3.751119622434835*^9}, {3.7511197314622517`*^9, 
   3.751119768188106*^9}, {3.751119798899342*^9, 3.751119801285493*^9}, 
   3.751119844861784*^9, {3.751119998587184*^9, 3.7511201169329042`*^9}, {
   3.751120161941452*^9, 3.751120185319826*^9}, {3.751120231299284*^9, 
   3.751120240130343*^9}, {3.751120335718725*^9, 3.751120380054914*^9}, {
   3.751120762828732*^9, 3.751120817490088*^9}, {3.751125494245812*^9, 
   3.751125497101141*^9}, {3.7511309419541817`*^9, 3.7511310168167887`*^9}, {
   3.75118471253514*^9, 3.751184779562503*^9}, {3.7511850342742043`*^9, 
   3.751185049632537*^9}, {3.751186112153719*^9, 3.7511861336690474`*^9}, 
   3.751186188856037*^9, {3.751186312944566*^9, 3.7511863735717382`*^9}, {
   3.751188113902042*^9, 3.751188168244383*^9}, {3.751188528348846*^9, 
   3.751188555708354*^9}, {3.751192812793318*^9, 3.751192889718573*^9}, {
   3.751192931419243*^9, 3.751192946504442*^9}, {3.7511932201126623`*^9, 
   3.751193470598133*^9}, {3.7511935263014*^9, 3.751193624942418*^9}, {
   3.751193665271614*^9, 3.751193762787752*^9}, {3.7511938334549417`*^9, 
   3.751193881841576*^9}, {3.751193940677477*^9, 3.751194056532219*^9}, {
   3.751194106191081*^9, 3.7511941103505287`*^9}, {3.7511946158974524`*^9, 
   3.7511947003175173`*^9}, {3.751194885596794*^9, 3.751194904656308*^9}, {
   3.75119494427013*^9, 3.751194979908992*^9}, {3.7511950474280233`*^9, 
   3.7511951866339006`*^9}, {3.751195267299939*^9, 3.751195414641423*^9}, {
   3.75119562993139*^9, 3.751195632553495*^9}, {3.7511956820338793`*^9, 
   3.751195693614752*^9}, {3.751195835559074*^9, 3.751195850923327*^9}, {
   3.7511959452239037`*^9, 3.751195968931778*^9}, {3.751196047711643*^9, 
   3.751196065256418*^9}, {3.751196342320488*^9, 3.751196489154274*^9}, {
   3.751196557182372*^9, 3.751196558307073*^9}, {3.751196682816697*^9, 
   3.7511967012791843`*^9}, {3.751196849185783*^9, 3.751196861601388*^9}, {
   3.751197032824609*^9, 3.7511970620088787`*^9}, {3.751201134614414*^9, 
   3.7512012404661903`*^9}, {3.751201615293879*^9, 3.751201625241371*^9}, {
   3.751201783072228*^9, 3.751201802219425*^9}, {3.7512018553740063`*^9, 
   3.751201863910933*^9}, {3.751201896949523*^9, 3.751201922981914*^9}, {
   3.751201976010841*^9, 3.7512020470475492`*^9}, {3.7512020942174587`*^9, 
   3.751202133354364*^9}, {3.751202183292495*^9, 3.751202247759165*^9}, {
   3.7512022942999773`*^9, 3.751202304681945*^9}, {3.7512023471295652`*^9, 
   3.751202362632728*^9}, 3.751202593807638*^9, {3.751203300326034*^9, 
   3.7512033094270277`*^9}, {3.7512046249907627`*^9, 3.751204629568754*^9}, 
   3.751219147292221*^9, {3.7512192122672033`*^9, 3.751219216063034*^9}, {
   3.751791084867567*^9, 3.7517910858455*^9}, 3.756118470256916*^9, {
   3.7561191767052727`*^9, 3.756119203333642*^9}, {3.756119294841609*^9, 
   3.7561192993192377`*^9}, {3.7561196892988787`*^9, 3.756119705335794*^9}, {
   3.756122639304627*^9, 3.7561226447107363`*^9}, 3.7561262862188673`*^9, {
   3.776967298975525*^9, 3.776967305803451*^9}, {3.776967370043006*^9, 
   3.776967426462866*^9}, {3.776967543709426*^9, 3.776967569964859*^9}, {
   3.776972206620562*^9, 3.776972209756263*^9}, {3.7769722681434193`*^9, 
   3.776972352952694*^9}, {3.7832733662171087`*^9, 3.783273400921067*^9}, {
   3.7832734931761436`*^9, 3.783273533590084*^9}, {3.7832735747553587`*^9, 
   3.783273574856215*^9}, {3.7833237946105423`*^9, 3.783323828555252*^9}, {
   3.7833238718919907`*^9, 3.783323893867065*^9}, {3.783323986880889*^9, 
   3.78332400818547*^9}, {3.783324053097563*^9, 3.783324057616997*^9}, {
   3.783324093907634*^9, 3.783324122768189*^9}, {3.7833248021533003`*^9, 
   3.78332480244671*^9}, {3.7839287774795847`*^9, 3.783928800324915*^9}, {
   3.7839289281291513`*^9, 3.783928930950879*^9}, {3.7839305627185802`*^9, 
   3.783930573394693*^9}, {3.783930821346698*^9, 3.7839308370224733`*^9}, {
   3.783930871828518*^9, 3.783930902582807*^9}, {3.783931126849189*^9, 
   3.783931171186699*^9}, {3.783931540259975*^9, 3.783931578856503*^9}, {
   3.783931715546001*^9, 3.783931722027491*^9}, {3.7839321773952723`*^9, 
   3.783932209975486*^9}, 3.783932280655952*^9, {3.783934523527701*^9, 
   3.783934526273881*^9}, {3.7839345739276648`*^9, 3.783934578103239*^9}, {
   3.783942579403412*^9, 3.783942583861369*^9}, {3.783942840992546*^9, 
   3.7839428763617992`*^9}, {3.783942993490288*^9, 3.7839429938814173`*^9}, {
   3.783943055609294*^9, 3.783943133608246*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"79a0b15f-563c-4433-a51c-12e5182b8e9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Parameters", " ", "like", " ", "for", " ", "example", " ", "weight", " ",
      "decay", " ", "\[Gamma]", " ", "and", " ", "drift", " ", "paramater", 
     " ", "\[Delta]", " ", "can", " ", "be", " ", "assigned", " ", "before", 
     " ", "the", " ", "call", " ", "to", " ", "FormulateDynamics", " ", "in", 
     " ", "which", " ", "they", " ", "are", " ", "used"}], ",", " ", 
    RowBox[{"just", " ", "like", " ", "\[Eta]"}], ",", " ", 
    RowBox[{
    "K", " ", "and", " ", "M", " ", "are", " ", "assigned", " ", "here", " ", 
     "and", " ", "used", " ", "in", " ", "FormulateDynamics"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Test", " ", "met", " ", "second", " ", "layer", " ", "weights"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Specifies", " ", "properties", " ", "of", " ", "the", " ", 
      RowBox[{"teacher", ".", " ", "Here"}]}], ",", " ", 
     RowBox[{
     "the", " ", "weight", " ", "vectors", " ", "are", " ", "orthonormal"}]}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"IdentityMatrix", "[", "M", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"K", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"createReLUAssumptions", "[", 
      RowBox[{"M", ",", "K"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Formulates", " ", "the", " ", "dynamical", " ", "equations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ODEsys", "=", 
     RowBox[{"FormulateDynamics", "[", 
      RowBox[{"\"\<Erf\>\"", ",", "\"\<Erf\>\""}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "matrix", " ", "of", " ", "initial", " ", "conditions", " ", 
     "for", " ", "the", " ", "differential", " ", "equations", " ", 
     RowBox[{"(", 
      RowBox[{"Macroscopic", " ", "parameters"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"First", " ", "layer", " ", 
      RowBox[{"macroscopics", ".", " ", "Student"}]}], "-", 
     RowBox[{"teacher", " ", "overlaps", " ", "and", " ", "student"}], "-", 
     RowBox[{"student", " ", "overlaps", " ", "respectively"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rinit", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"1", ",", "1"}]], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}], ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"1", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"2", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0"}], 
          ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"2", ",", "2"}]], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qinit", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "k"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "k"}]], "[", "0", "]"}], "\[Equal]", "0.2"}], 
         ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "k"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", " ", "layer", " ", 
     RowBox[{"macroscopisc", ".", " ", "Student"}], " ", "second", " ", 
     "layer", " ", "weights", " ", "and", " ", "teacher", " ", "second", " ", 
     "layer", " ", "weights"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vinit", "=", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "1.0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"winit", "=", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", 
       RowBox[{"-", "3.0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Symbols", " ", "of", " ", "functions", " ", "that", " ", "need", " ", 
     "to", " ", "be", " ", "solved", " ", "for"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["R", 
         RowBox[{"i", ",", "n"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["Q", 
         RowBox[{"i", ",", "k"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vs", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["v", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "K"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ws", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["w", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "M"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxAlpha", "=", "1200"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Numerically", " ", "solve", " ", "the", " ", "system", " ", 
     "ODEsystem"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"solveEqns", "[", 
      RowBox[{
      "Rinit", ",", "Qinit", ",", "vinit", ",", "winit", ",", "Rs", ",", "Qs",
        ",", "vs", ",", "ws"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{"First", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ODEsys", "[", "R", "]"}], ",", 
          RowBox[{"ODEsys", "[", "Q", "]"}], ",", "Rinit", ",", "Qinit"}], 
         "]"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"Rs", ",", "Qs"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}]}], "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot", " ", "all", " ", 
      SubscriptBox["R", 
       RowBox[{"i", ",", "n"}]], " ", "in", " ", "one", " ", "plot"}], ",", 
     " ", 
     RowBox[{
      SubscriptBox["Q", 
       RowBox[{"i", ",", "k"}]], " ", "in", " ", "another", " ", "plot", " ", 
      "and", " ", "a", " ", "plot", " ", "for", " ", "the", " ", 
      "generalization", " ", "error"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rplot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"i", ",", "n"}]], "[", "\[Alpha]", "]"}], "/.", "s"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "K"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", "Rs", "]"}], ",", "Below"}], "]"}]}], 
       ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-teacher overlap R\>\""}], 
       ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rhoplot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"i", ",", "n"}]], "[", "\[Alpha]", "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["Q", 
                RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], "*", 
              RowBox[{
               RowBox[{"T", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], "/.", "s"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "K"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", "Rs", "]"}], ",", "Below"}], "]"}]}], 
       ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Student-teacher alignments \[Rho]\>\""}], 
       ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{"Rplot", ",", "Rhoplot"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "k"}]], "[", "\[Alpha]", "]"}], "/.", "s"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "K"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "K"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "0", ",", " ", "maxAlpha"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", "Qs", "]"}], ",", "Below"}], "]"}]}], 
       ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-student overlap Q\>\""}], 
       ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"egPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"ODEsys", "[", "generr", "]"}], "/.", "s"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Generalization error\>\""}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", 
          RowBox[{
           SubscriptBox["\[Epsilon]", "g"], "[", "\[Alpha]", "]"}]}], "}"}]}],
        ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{"QPlot", ",", "egPlot"}], "}"}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.783928946221654*^9, 3.78392905514447*^9}, {
   3.783929089951602*^9, 3.783929097705386*^9}, {3.783929212948328*^9, 
   3.783929226530526*^9}, 3.783929305863309*^9, {3.783929340327816*^9, 
   3.783929487390088*^9}, {3.783929533029995*^9, 3.783929773107997*^9}, {
   3.783930103399129*^9, 3.7839301039097967`*^9}, {3.783930510588759*^9, 
   3.783930527099484*^9}, 3.783930700862974*^9, {3.783931203212075*^9, 
   3.783931208463441*^9}, {3.783931286486561*^9, 3.783931295272094*^9}, {
   3.783931341449727*^9, 3.78393134770855*^9}, {3.783931407601878*^9, 
   3.7839314100318937`*^9}, {3.783931589218872*^9, 3.7839316203043537`*^9}, {
   3.783931747789929*^9, 3.783931768775062*^9}, {3.78393185103165*^9, 
   3.783931863129115*^9}, {3.7839319034547443`*^9, 3.783931929342375*^9}, 
   3.783932030756983*^9, {3.783932074280501*^9, 3.783932086722609*^9}, {
   3.783933844804768*^9, 3.783933881887485*^9}, 3.783934138058104*^9, {
   3.783934286458748*^9, 3.783934299978558*^9}, {3.783934366262844*^9, 
   3.783934403652355*^9}, 3.783934444718034*^9, {3.783934505734742*^9, 
   3.783934507851097*^9}, {3.783934585543914*^9, 3.783934589494697*^9}, {
   3.7839348388446093`*^9, 3.783934904019827*^9}, {3.783935556259182*^9, 
   3.783935572712967*^9}, {3.783935868518417*^9, 3.7839358721900177`*^9}, {
   3.783936108772415*^9, 3.783936133520348*^9}, {3.7839396564892483`*^9, 
   3.783939821357316*^9}, {3.783939897010662*^9, 3.783939953960458*^9}, {
   3.783940167595892*^9, 3.783940171179132*^9}, {3.783940202264798*^9, 
   3.783940233966826*^9}, {3.78394029217568*^9, 3.783940296622942*^9}, {
   3.783940532685646*^9, 3.783940538109899*^9}, {3.78394207974426*^9, 
   3.783942161215807*^9}, {3.783942314541795*^9, 3.783942338263179*^9}, {
   3.783942420203046*^9, 3.7839424948978853`*^9}, 3.783942604575313*^9, {
   3.7839427119207153`*^9, 3.783942769816744*^9}, {3.783942803439938*^9, 
   3.783942819042193*^9}, {3.783942902135064*^9, 3.783942905911462*^9}, {
   3.7839432068646097`*^9, 3.783943274517672*^9}, {3.783943451463459*^9, 
   3.783943497311248*^9}, {3.7839435509202967`*^9, 
   3.7839435746433353`*^9}},ExpressionUUID->"469333fc-2708-4162-a393-\
a1a5e59d2638"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$38255#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
uwl9iIpO/7XaSkWjqfVRT/r04X8jQ9f2
              "]]}, Annotation[#, "Charting`Private`Tag$38255#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
P2YMsXFZv1faaGi8li32Ua8x/A+g2twC
              "]]}, Annotation[#, "Charting`Private`Tag$38255#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$38255#2"]& ]}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
            TagBox["\[Alpha]", HoldForm], TraditionalForm], 
           FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
         BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 500, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Student-teacher overlap R\"", TraditionalForm], 
         PlotRange -> {{0, 1200}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           SubscriptBox["R", 
            RowBox[{"1", ",", "1"}]], 
           SubscriptBox["R", 
            RowBox[{"1", ",", "2"}]], 
           SubscriptBox["R", 
            RowBox[{"2", ",", "1"}]], 
           SubscriptBox["R", 
            RowBox[{"2", ",", "2"}]]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {192., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$38325#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
CQc3
              "]]}, Annotation[#, "Charting`Private`Tag$38325#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
6Qnc1TcOVciPxEGFHvLJ3moYO0vyje+NRJmQe8bj3o+B03fRoGIgEvOtT556
euUxqN7Xk+0bjsTzZaT79zUeQynD7p/8E5FIq7eqfCvwGAJe3vd89CUSeYP/
FYt3VgHPqUaXoc1R6H6/Xe6QRBXoHP5uJXIiCoUeb+4P/FsJ7eOdfNzyUTjW
raOqPVsJSinFfQwQhXkHvrvIDFUS87XF2UmVKNRIEMqWfloJ3LVdYlnaUbjx
TYU1g3cljKqWLXHaR2F4pBPz0GIF2Js6hKzdiMJC3yd8D7+UwwSrqtyXjCgk
O8g5+b8vB+NGgaWRzCisP6uXb1tZDuf2DVo+y4/CCwnnlO5cLYfDn8+c8S6L
wm+6ebc91svgh7cwy+zrKJTiMGyr5imDkITx230/onCofKdznXkp3HdWrqX/
HYX+1FW1z8ql0KFZOHT0bxR6/eN5LytSCjwsbjyJdNHouckUJBdK4BFpLf0M
azTOiXTn3goqAWrinpSnItGIjvNOe/OLQSPlcnSGcTTyxZ7SYKF7AO4eDfff
mEbj+7hPebPTRXBDZ1/LT/NoZFJnOU3pLAIKxxyDrl00Khre6NufVQSBZP8w
Ju9oXDXgGp4/WQTlqRlBAaRojHTPabANKIQdNwa8TBujUWtGfESG7T5c/13l
fLE5Gs0ro+5Ur9yDOeNkm/Mt0ZhjzjyuPnUPmvaqGyp0RKORJqSXP78H7g9q
T+4ZjEa/Q2LqLi734G19Ft3Hr9EoPEArye66C2EUqySTvTG4Xr+8R/VeASyo
Yoy+UAxqGYrGiKcWwKUivlDN/TEYE/+ob19oAUi69HnKi8dgT2/mO3XTAhhb
PmPAdzwG+3x5BRy4C+AEk9ieUa0YFM9MrKHG58Oi5GLx5eAY/ETWO6Qdnge7
LmiUqoTGoIDo1Yc5Xnmg5HL3oUREDO5vb5Bas8qD1AdGFeuxMXixvodjRiUP
ZIVeVhekx6CB9pCTy5Y8CNxObpwrjUG7wsrvkkm5sGX5WH/ASAzGyuSz2+nm
gOSOxAHrsRj0STfdRpLNASOpmcHzEzH4b9nJ+t3uHCh2zRzZO03kZzrQlEnJ
Bs1phonmbzE4J2Uh4eWTDeTBvrltTLH4aalVeDo3C/jrfOky5WLxUSD9jhOM
mfBji7HDq1OxyH7Y7I3plzvQri/fPa8Yixu445uyPtwB34UNeQqqsRh+xI7H
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

              "]]}, Annotation[#, "Charting`Private`Tag$38325#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
7g==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$38325#2"]& ]}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
            TagBox["\[Alpha]", HoldForm], TraditionalForm], 
           FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
         BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 500, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Student-teacher alignments \[Rho]\"", TraditionalForm], 
         PlotRange -> {{0, 1200}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           SubscriptBox["R", 
            RowBox[{"1", ",", "1"}]], 
           SubscriptBox["R", 
            RowBox[{"1", ",", "2"}]], 
           SubscriptBox["R", 
            RowBox[{"2", ",", "1"}]], 
           SubscriptBox["R", 
            RowBox[{"2", ",", "2"}]]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {576., -189.}, {
     Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.783942796245357*^9, 3.7839428202710342`*^9}, 
   3.7839429084551373`*^9, 3.783943209273478*^9, {3.7839432423148537`*^9, 
   3.78394325632653*^9}, 3.783943288414885*^9, {3.783943457278391*^9, 
   3.783943502327763*^9}},
 CellLabel->
  "Out[222]=",ExpressionUUID->"7837855d-25b1-4041-b6a6-cdd247aa23f1"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
V1/Q4JwqF+MT9n9khtHB
              "]]}, Annotation[#, "Charting`Private`Tag$38462#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$38462#1"]& ], {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
9ZcUcFXhpH3C/g+X7tAT
              "]]}, 
            Annotation[#, "Charting`Private`Tag$38462#2"]& ]}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
            TagBox["\[Alpha]", HoldForm], TraditionalForm], 
           FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
         BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 500, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Student-student overlap Q\"", TraditionalForm], 
         PlotRange -> {{0, 1200}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           SubscriptBox["Q", 
            RowBox[{"1", ",", "1"}]], 
           SubscriptBox["Q", 
            RowBox[{"1", ",", "2"}]], 
           SubscriptBox["Q", 
            RowBox[{"2", ",", "2"}]]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {266.6666666666667, -162.23392204684737}, {
     Center, Center}, {500.00000000000006, 309.0169943749474}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
N4LF8cl+PlHYJdtSCq4AyJfYe9Ocjm0Yv5SpdASSl8uvn23Apj/+VsF2BE6Z
xlw5+YrYT0eQc/AwrBfWPa/+Djt9wfBu8GHonPf8sGAfsY9wyGL3Ifi25j7T
px/EvmIGD8JVYdCXy7fNhCn4/At6+wWU4YwWopwRxVZN30tZUoIXcgUC9cWx
0eMIwU4lKHej21VtL7bdjRO/aUrw86L2OQEVbHLv2et/FeEhdhnBQQNsti3z
M9MH4azcbP5Ff2ypXXfRgjzccUrvsWYgdu7p6L898lDjRlahbAhxHiV/okoe
xueZlPyjYvObGBmQ5aGy6MvKzARsw5hHiEse+vLG0aceY3+/kBikJAdZFw/2
+Axgz3Zl7TsmC+X4onttPmOnLz46zysLTRS+950cIfY3Qm1f9sF8x9QB4W/Y
bSPnc0P3Qf1vLCMNP7G5AzZ/e7cX/z7RPbWJnYrfL22vsr0MFKr2YEpVxS7p
0tTtkYQLrKb2jUewDVdzSI8lYcsZtfZpQOQcvMxBktBjhpShrkX0a3z7ul8S
tu2moSEjIle7uitSAgZTUgNEr2G3FfyoMBaH38++/Jt7n6hPfx3DKwZrH2Ze
aU/HJonz358ThQk/Qlt/Z2LTO99//SAKNah69/XysUUcuRSiROG9mk616SfY
lnt2ZbOLQgOxrz4H2oict6qHazcsn2VfqVxHw/dxVI8WIgTf1105krsemx6z
s9tICE5G031T2LBFqLvdhIWgiKz7P39OIg9NL6gWhNH2Iyw6O7GH2+emlwSg
w+hTrn55bEvrIMOAXXB3l434miWRa941fcUP1TLrbGcvY5P5nkrc54cmrjtz
R20JPxBQceOH0dxtMq+vE+ed+iMqxg9X9Y/IxXgS8xq1d4Vsh31NW46IxhDn
N/3Ye3obvP201lC7jpjvNby0iw+aVGYse9QT9fzvipd4oWh5SHpeE2Haq9xO
XlhRpDfL8Y6wjLZZJC/sy+653dlH9Pv1viDxQpE7M+8tf2KTzn7f9GsLLHEW
OukjHoH3S+TauJEbejky/XoshU1iylTp44Ia18dSP+8lvPzhVRoX7LqaP31U
gXD7oJAsF1y+pBzJBgkv5D8w4IRHTxq8TTAhnLX7bBYH7JD21y2JIKysmpew
EQ7nfWwpiMamm9vnOmyEM9JK+o9iifP3f5mBGyG7zLRB2l1s1MlyaooNHpMx
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
           "]]},
         Annotation[#, "Charting`Private`Tag$38523#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         TagBox["\[Alpha]", HoldForm], TraditionalForm], 
        FormBox[
         RowBox[{
           SubscriptBox["\[Epsilon]", "g"], "(", 
           TagBox["\[Alpha]", HoldForm], ")"}], TraditionalForm]},
      AxesOrigin->{0., 0.},
      BaseStyle->{FontSize -> 14},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->500,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Generalization error\"", TraditionalForm],
      PlotRange->{{0, 1200}, {0., 0.03179333720811671}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {800., -162.23392204684737}, 
     ImageScaled[{0.5, 0.5}], {500, 309.0169943749474}]}, {}},
  ContentSelectable->True,
  ImageSize->{1078.6666666666667`, 336.46784409369474`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.783942796245357*^9, 3.7839428202710342`*^9}, 
   3.7839429084551373`*^9, 3.783943209273478*^9, {3.7839432423148537`*^9, 
   3.78394325632653*^9}, 3.783943288414885*^9, {3.783943457278391*^9, 
   3.783943502550871*^9}},
 CellLabel->
  "Out[225]=",ExpressionUUID->"d0017a10-03f8-4b0c-8099-b633cd693bdc"]
}, Open  ]]
},
WindowSize->{1680, 1001},
WindowMargins->{{-1679, Automatic}, {30, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 50507, 1199, 2808, "Input",ExpressionUUID->"79a0b15f-563c-4433-a51c-12e5182b8e9d"],
Cell[CellGroupData[{
Cell[50932, 1216, 16120, 414, 929, "Input",ExpressionUUID->"469333fc-2708-4162-a393-a1a5e59d2638"],
Cell[67055, 1632, 132088, 2331, 831, "Output",ExpressionUUID->"7837855d-25b1-4041-b6a6-cdd247aa23f1"],
Cell[199146, 3965, 64428, 1147, 353, "Output",ExpressionUUID->"d0017a10-03f8-4b0c-8099-b633cd693bdc"]
}, Open  ]]
}
]
*)

