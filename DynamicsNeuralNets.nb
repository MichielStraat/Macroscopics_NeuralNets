(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    522459,       9677]
NotebookOptionsPosition[    520522,       9638]
NotebookOutlinePosition[    520875,       9654]
CellTagsIndexPosition[    520832,       9651]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sVars", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<k\>\"", ",", "\"\<l\>\""}], 
     "}"}]}], ";", 
   RowBox[{"tVars", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<m\>\"", ",", "\"\<n\>\""}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Phi", "[", "x_", "]"}], "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox["x", 
         SqrtBox["2"]], "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Averages", " ", "in", " ", "case", " ", "of", " ", "an", " ", "Erf", " ", 
    "teacher", " ", "and", " ", "student", " ", "needed", " ", "in", " ", 
    "order", " ", "to", " ", "formulate", " ", "the", " ", "dynamics", " ", 
    "and", " ", "compute", " ", "the", " ", "generalization", " ", "error"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I2Erf", "[", "C2_", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"ArcSin", "[", 
      FractionBox[
       RowBox[{"C2", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]], "]"}]}], 
    "\[Pi]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I3Erf", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}]}], ")"}]}], 
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
       SuperscriptBox[
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"C3", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"I4Erf", "[", "C4_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[CapitalLambda]0", ",", "\[CapitalLambda]1", ",", 
        "\[CapitalLambda]2", ",", "\[CapitalLambda]4"}], "}"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalLambda]4", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         SuperscriptBox[
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}]}], ";", 
       RowBox[{"\[CapitalLambda]0", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]}], "-", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}], "+", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"\[CapitalLambda]1", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"\[CapitalLambda]2", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"Return", "[", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"ArcSin", "[", 
           FractionBox["\[CapitalLambda]0", 
            RowBox[{
             SqrtBox["\[CapitalLambda]1"], " ", 
             SqrtBox["\[CapitalLambda]2"]}]], "]"}]}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", 
          SqrtBox["\[CapitalLambda]4"]}]], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Averages", " ", "in", " ", "case", " ", "of", " ", "a", " ", "ReLU", " ", 
    "teacher", " ", "and", " ", "student"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I2ReLU", "[", "C2_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"C2", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
    FractionBox[
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "-", 
       SuperscriptBox[
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}]], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ReLU", "[", "C3_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"]}]]}], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}]]], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"C3", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"positionDuplicates", "[", "list_", "]"}], ":=", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"Range", "@", 
       RowBox[{"Length", "[", "list", "]"}]}], ",", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"NOT", " ", "IMPORTANT", " ", "FOR", " ", 
     RowBox[{"NOW", ":", " ", 
      RowBox[{"Ignore", " ", "the", " ", "following", " ", "averages"}]}]}], 
    ",", " ", "experimental"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I4ReLU11", "[", "C2_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "-", "2"}],
        ")"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "-", 
        SuperscriptBox[
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "2"]}]]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ")"}], 
      " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{
           "C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
          RowBox[{
           RowBox[{
           "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]]], 
       "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I2ErfReLU", "[", "C2_", "]"}], ":=", 
   FractionBox[
    RowBox[{"C2", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"C2", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ErfReLU", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{"C3", "\[LeftDoubleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"C3", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ReLUErf", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     SqrtBox[
      FractionBox["2", "\[Pi]"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}], ")"}]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HelperReLU", "[", "varList_", "]"}], ":=", 
    RowBox[{"Return", "[", "0", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Not", " ", 
    RowBox[{"important", ":", " ", 
     RowBox[{
     "This", " ", "section", " ", "deals", " ", "with", " ", "returning", " ",
       "the", " ", "correct", " ", "symbol", " ", 
      RowBox[{"(", 
       RowBox[{"order", " ", "parameter"}], ")"}], " ", "for", " ", "a", " ", 
      "covariance", " ", "between", " ", "two", " ", "variables"}]}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getCovar", "[", 
    RowBox[{"var1_", ",", "var2_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"sVars", ",", 
         RowBox[{"First", "[", "var1", "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"sVars", ",", 
           RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "var1", "]"}], "\[LessEqual]", 
            RowBox[{"Last", "[", "var2", "]"}]}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{
               RowBox[{"Last", "[", "var1", "]"}], ",", 
               RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
            "]"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{
               RowBox[{"Last", "[", "var2", "]"}], ",", 
               RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           SubscriptBox["R", 
            RowBox[{
             RowBox[{"Last", "[", "var1", "]"}], ",", 
             RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"sVars", ",", 
           RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           SubscriptBox["R", 
            RowBox[{
             RowBox[{"Last", "[", "var2", "]"}], ",", 
             RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
          "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"T", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"Last", "[", "var1", "]"}], ",", 
            RowBox[{"Last", "[", "var2", "]"}]}], "\[RightDoubleBracket]"}], 
          "]"}]}], "]"}]}], "]"}], ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getCovarSmall", "[", 
    RowBox[{"var1_", ",", "var2_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"sVars", ",", 
         RowBox[{"First", "[", "var1", "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"sVars", ",", 
           RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "var1", "]"}], "\[LessEqual]", 
            RowBox[{"Last", "[", "var2", "]"}]}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
             SubscriptBox["q", 
              RowBox[{
               RowBox[{"Last", "[", "var1", "]"}], ",", 
               RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
            "]"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
             SubscriptBox["q", 
              RowBox[{
               RowBox[{"Last", "[", "var2", "]"}], ",", 
               RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           SubscriptBox["r", 
            RowBox[{
             RowBox[{"Last", "[", "var1", "]"}], ",", 
             RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"sVars", ",", 
           RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           SubscriptBox["r", 
            RowBox[{
             RowBox[{"Last", "[", "var2", "]"}], ",", 
             RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
          "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"T", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"Last", "[", "var1", "]"}], ",", 
            RowBox[{"Last", "[", "var2", "]"}]}], "\[RightDoubleBracket]"}], 
          "]"}]}], "]"}]}], "]"}], ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createCoVar", "[", "varList_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"returnMat", ",", "r", ",", "c"}], "}"}], ",", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Length", "[", "varList", "]"}]}], ";", 
       RowBox[{"returnMat", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"r", "=", "1"}], ",", 
         RowBox[{"r", "\[LessEqual]", "d"}], ",", 
         RowBox[{"r", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "r"}], ",", 
           RowBox[{"c", "\[LessEqual]", "d"}], ",", 
           RowBox[{"c", "++"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"d", "\[Equal]", "2"}], ",", 
               RowBox[{"getCovarSmall", "[", 
                RowBox[{
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "c", 
                  "\[RightDoubleBracket]"}]}], "]"}], ",", 
               RowBox[{"getCovar", "[", 
                RowBox[{
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "c", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"c", ",", "r"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}]}], ";"}]}], 
          "]"}]}], "]"}], ";", "returnMat"}]}], "]"}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "formulates", " ", "the", " ", "dynamical", 
    " ", "equations", " ", "for", " ", "the", " ", "desired", " ", "system"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FormulateDynamics", "[", 
     RowBox[{"actTeach_", ",", "actStud_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{"actStud", ",", "\[IndentingNewLine]", "\"\<ReLU\>\"", ",", 
        RowBox[{
         RowBox[{"I2Stud", "=", "I2ReLU"}], ";", 
         RowBox[{"I3Stud", "=", "I3ReLU"}], ";", 
         RowBox[{"I4", "=", "HelperReLU"}], ";", 
         RowBox[{"assumps", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"RAssumptionsReLU", ",", "QAssumptionsReLU"}], "}"}], 
           "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"actTeach", "\[Equal]", "\"\<ReLU\>\""}], ",", 
           RowBox[{
            RowBox[{"I2Teach", "=", "I2ReLU"}], ";", 
            RowBox[{"I2Cross", "=", "I2ReLU"}], ";", 
            RowBox[{"I3Teach", "=", "I3ReLU"}], ";", 
            RowBox[{"I4Teach", "=", "I4ReLU"}], ";"}], ",", 
           RowBox[{
            RowBox[{"I2Teach", "=", "I2Erf"}], ";", 
            RowBox[{"I2Cross", "=", "I2ErfReLU"}], ";", 
            RowBox[{"I3Teach", "=", "I3ErfReLU"}], ";"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<Erf\>\"", ",", 
        RowBox[{
         RowBox[{"I2Stud", "=", "I2Erf"}], ";", 
         RowBox[{"I3Stud", "=", "I3Erf"}], ";", 
         RowBox[{"I4Stud", "=", "I4Erf"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"actTeach", "\[Equal]", "\"\<ReLU\>\""}], ",", 
           RowBox[{
            RowBox[{"I2Teach", "=", "I2ReLU"}], ";", 
            RowBox[{"I2Cross", "=", "I2ErfReLU"}], ";", 
            RowBox[{"I3Teach", "=", "I3ReLUErf"}], ";", 
            RowBox[{"assumps", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"RAssumptionsReLU", ",", "QAssumptionsReLU"}], "}"}], 
              "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"I2Teach", "=", "I2Erf"}], ";", 
            RowBox[{"I2Cross", "=", "I2Erf"}], ";", 
            RowBox[{"I3Teach", "=", "I3Erf"}], ";", 
            RowBox[{"I4Teach", "=", "I4Erf"}]}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Here", " ", "the", " ", "equations", " ", "are", " ", "formulated", 
         " ", "using", " ", "the", " ", "correct", " ", "averages", " ", 
         "I2"}], ",", " ", 
        RowBox[{"I3", " ", "and", " ", "I4"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"eqnsR", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox[
            SubscriptBox["R", 
             RowBox[{"i", ",", "n"}]], "\[Prime]",
            MultilineFunction->None], "[", "\[Alpha]", "]"}], "\[Equal]", 
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{"\[Eta]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                UnderoverscriptBox["\[Sum]", "m", "M"], 
                RowBox[{"I3Teach", "[", 
                 RowBox[{"createCoVar", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                 "]"}]}], "-", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", "j", "K"], 
                RowBox[{"I3Stud", "[", 
                 RowBox[{"createCoVar", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                 "]"}]}]}], ")"}]}], ",", "assumps"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"eqnsQ", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "K"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "i"}], ",", 
          RowBox[{"k", "\[LessEqual]", "K"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"eqnsQ", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"eqnsQ", ",", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["Q", 
                 RowBox[{"i", ",", "k"}]], "\[Prime]",
                MultilineFunction->None], "[", "\[Alpha]", "]"}], "\[Equal]", 
              RowBox[{
               RowBox[{"\[Eta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "m", "M"], 
                   RowBox[{"I3Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}], "-", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "j", "K"], 
                   RowBox[{"I3Stud", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "m", "M"], 
                   RowBox[{"I3Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}], "-", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "j", "K"], 
                   RowBox[{"I3Stud", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Eta]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "m", "M"], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "n", "M"], 
                    RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "n", "M"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "j", "K"], 
                    RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "l", "K"], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "j", "K"], 
                    RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<l\>\"", ",", "l"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}]}], ")"}]}]}]}]}], "]"}]}]}], "]"}]}], "]"}], 
      ";", 
      RowBox[{"Clear", "[", "eg", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Onderstaand", " ", "stuk", " ", "is", " ", "gebruikt", " ", "voor", 
          " ", "de", " ", "single"}], "-", 
         RowBox[{"layer", " ", "ReLU", " ", "perceptron"}]}], ",", " ", 
        RowBox[{"omdat", " ", "hiervoor", " ", "de", " ", 
         RowBox[{"eta", "^", "2"}], " ", "term", " ", "hoogstens", " ", "2", 
         "d", " ", "averages", " ", 
         RowBox[{"bevat", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        SuperscriptBox["\[Eta]", "2"], " ", 
        RowBox[{"I4ReLU11", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["Q", 
               RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}], ",", 
             RowBox[{
              SubscriptBox["R", 
               RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["R", 
               RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}], ",", 
             RowBox[{
              RowBox[{
              "T", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "}"}], "]"}]}], "*)"}], " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"eg", "[", "\[Alpha]_", "]"}], ":=", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i", "=", "1"}], "K"], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"j", "=", "1"}], "K"], 
            RowBox[{"I2Stud", "[", 
             RowBox[{"createCoVar", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
             "]"}]}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"i", "=", "1"}], "K"], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"m", "=", "1"}], "M"], 
             RowBox[{"I2Cross", "[", 
              RowBox[{"createCoVar", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
              "]"}]}]}]}], "+", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"m", "=", "1"}], "M"], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"n", "=", "1"}], "M"], 
            RowBox[{"I2Teach", "[", 
             RowBox[{"createCoVar", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<m\>\"", ",", "m"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
             "]"}]}]}]}], ")"}]}]}], ";"}], ")"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"solveEqns", "[", 
     RowBox[{"Rinit_", ",", "Qinit_", ",", "Rs_", ",", "Qs_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"solutions", "=", 
       RowBox[{"First", "[", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "eqnsR", "]"}], ",", 
            RowBox[{"ReleaseHold", "[", "eqnsQ", "]"}], ",", 
            RowBox[{"Flatten", "[", "Rinit", "]"}], ",", "Qinit"}], "]"}], 
          ",", 
          RowBox[{"Join", "[", 
           RowBox[{"Rs", ",", "Qs"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}]}], "]"}], 
        "]"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "K"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"n", "=", "1"}], ",", 
          RowBox[{"n", "\[LessEqual]", "M"}], ",", 
          RowBox[{"n", "++"}], ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["r", 
             RowBox[{"i", ",", "n"}]], "=", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"i", ",", "n"}]], "/.", "\[VeryThinSpace]", 
             RowBox[{"solutions", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], " ", "M"}], "+", "n"}], 
              "\[RightDoubleBracket]"}]}]}], ";"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"count", "=", "1"}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "K"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "i"}], ",", 
          RowBox[{"k", "\[LessEqual]", "K"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["q", 
             RowBox[{"i", ",", "k"}]], "=", 
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{"i", ",", "k"}]], "/.", "\[VeryThinSpace]", 
             RowBox[{"solutions", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"K", " ", "M"}], "+", "count"}], 
              "\[RightDoubleBracket]"}]}]}], ";", 
           RowBox[{"count", "++"}], ";"}]}], "]"}]}], "]"}], ";"}], ")"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"createReLUAssumptions", "[", 
    RowBox[{"M_", ",", "K_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RAssumptionsReLU", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"i", ",", "m"}]], "[", "\[Alpha]", "]"}], "2"], 
          "\[LessEqual]", 
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], " ", 
           RowBox[{
            RowBox[{
            "T", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}]}]}], "&&", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"i", ",", "m"}]], "[", "\[Alpha]", "]"}], "\[Element]", 
          TemplateBox[{},
           "Reals"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"QAssumptionsReLU", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], "^", "2"}], 
          "\[LessEqual]", 
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], " ", 
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"j", ",", "j"}]], "[", "\[Alpha]", "]"}]}]}], "&&", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], "\[Element]", 
          TemplateBox[{},
           "Reals"]}], "&&", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], 
            "\[GreaterEqual]", "0"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "K"}], "}"}]}], "]"}]}], ";"}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.741417766878932*^9, {3.7414178136520367`*^9, 3.7414180323196106`*^9}, {
   3.741418142753128*^9, 3.74141815001657*^9}, 3.7414182048818393`*^9, {
   3.7414182358432536`*^9, 3.7414182458582172`*^9}, {3.7414182977674656`*^9, 
   3.74141831268191*^9}, {3.7414183901056585`*^9, 3.74141844976068*^9}, {
   3.7414189240340323`*^9, 3.7414189244879293`*^9}, {3.741419034744487*^9, 
   3.741419064069398*^9}, {3.7414199155727577`*^9, 3.7414199343095922`*^9}, {
   3.7414201853626537`*^9, 3.7414201938868337`*^9}, {3.7414204760219955`*^9, 
   3.7414204767838383`*^9}, {3.7414206419819975`*^9, 3.741420645659052*^9}, {
   3.7414207844977446`*^9, 3.741420787426893*^9}, {3.7414209502462*^9, 
   3.741420962017806*^9}, {3.7414210298122873`*^9, 3.7414210307675047`*^9}, {
   3.750233686238963*^9, 3.750233693208152*^9}, {3.750233744011318*^9, 
   3.7502338611876497`*^9}, {3.750233931543561*^9, 3.750233932956682*^9}, {
   3.7502339647219677`*^9, 3.750233984490898*^9}, 3.7502340155118923`*^9, {
   3.7502340696610394`*^9, 3.75023407004464*^9}, {3.750234180166548*^9, 
   3.750234206541513*^9}, {3.750234351033214*^9, 3.7502343689279537`*^9}, 
   3.750234431183111*^9, {3.750234468880437*^9, 3.750234581377149*^9}, {
   3.750234632542137*^9, 3.750234725987009*^9}, {3.750234835330235*^9, 
   3.7502348783881397`*^9}, {3.750234946788145*^9, 3.750234952926354*^9}, {
   3.750235105701767*^9, 3.7502351080687847`*^9}, {3.750235161362995*^9, 
   3.750235161597478*^9}, 3.750235244810684*^9, 3.750235468043602*^9, {
   3.7502357595485077`*^9, 3.750235761095175*^9}, {3.750235953627931*^9, 
   3.750235957834675*^9}, {3.750236057193761*^9, 3.7502360589194937`*^9}, {
   3.7502361403698387`*^9, 3.750236199570587*^9}, {3.750236241341853*^9, 
   3.750236246498494*^9}, {3.7502362968827753`*^9, 3.750236335843343*^9}, {
   3.7502365748320837`*^9, 3.750236576099577*^9}, {3.750236620474616*^9, 
   3.750236623663641*^9}, {3.750237145933381*^9, 3.7502371464062767`*^9}, {
   3.750237179776636*^9, 3.750237212157707*^9}, {3.75023726716984*^9, 
   3.750237313316041*^9}, 3.750237521793502*^9, {3.750237671692642*^9, 
   3.7502376740262527`*^9}, {3.7502390880620832`*^9, 
   3.7502390891382313`*^9}, {3.750239161467984*^9, 3.750239170586404*^9}, {
   3.750239225900345*^9, 3.750239229673628*^9}, {3.7502395849365387`*^9, 
   3.750239593891245*^9}, {3.750239692082035*^9, 3.7502396949416656`*^9}, {
   3.7502400878657207`*^9, 3.750240115816914*^9}, {3.750343822940446*^9, 
   3.750343854139063*^9}, {3.75053509605019*^9, 3.750535116236343*^9}, {
   3.750535598429101*^9, 3.750535626850296*^9}, {3.750535803136817*^9, 
   3.75053580697675*^9}, {3.750536183866181*^9, 3.750536214823339*^9}, {
   3.751119216669256*^9, 3.75111922152325*^9}, 3.751119488392544*^9, {
   3.7511196132043543`*^9, 3.751119622434835*^9}, {3.7511197314622517`*^9, 
   3.751119768188106*^9}, {3.751119798899342*^9, 3.751119801285493*^9}, 
   3.751119844861784*^9, {3.751119998587184*^9, 3.7511201169329042`*^9}, {
   3.751120161941452*^9, 3.751120185319826*^9}, {3.751120231299284*^9, 
   3.751120240130343*^9}, {3.751120335718725*^9, 3.751120380054914*^9}, {
   3.751120762828732*^9, 3.751120817490088*^9}, {3.751125494245812*^9, 
   3.751125497101141*^9}, {3.7511309419541817`*^9, 3.7511310168167887`*^9}, {
   3.75118471253514*^9, 3.751184779562503*^9}, {3.7511850342742043`*^9, 
   3.751185049632537*^9}, {3.751186112153719*^9, 3.7511861336690474`*^9}, 
   3.751186188856037*^9, {3.751186312944566*^9, 3.7511863735717382`*^9}, {
   3.751188113902042*^9, 3.751188168244383*^9}, {3.751188528348846*^9, 
   3.751188555708354*^9}, {3.751192812793318*^9, 3.751192889718573*^9}, {
   3.751192931419243*^9, 3.751192946504442*^9}, {3.7511932201126623`*^9, 
   3.751193470598133*^9}, {3.7511935263014*^9, 3.751193624942418*^9}, {
   3.751193665271614*^9, 3.751193762787752*^9}, {3.7511938334549417`*^9, 
   3.751193881841576*^9}, {3.751193940677477*^9, 3.751194056532219*^9}, {
   3.751194106191081*^9, 3.7511941103505287`*^9}, {3.7511946158974524`*^9, 
   3.7511947003175173`*^9}, {3.751194885596794*^9, 3.751194904656308*^9}, {
   3.75119494427013*^9, 3.751194979908992*^9}, {3.7511950474280233`*^9, 
   3.7511951866339006`*^9}, {3.751195267299939*^9, 3.751195414641423*^9}, {
   3.75119562993139*^9, 3.751195632553495*^9}, {3.7511956820338793`*^9, 
   3.751195693614752*^9}, {3.751195835559074*^9, 3.751195850923327*^9}, {
   3.7511959452239037`*^9, 3.751195968931778*^9}, {3.751196047711643*^9, 
   3.751196065256418*^9}, {3.751196342320488*^9, 3.751196489154274*^9}, {
   3.751196557182372*^9, 3.751196558307073*^9}, {3.751196682816697*^9, 
   3.7511967012791843`*^9}, {3.751196849185783*^9, 3.751196861601388*^9}, {
   3.751197032824609*^9, 3.7511970620088787`*^9}, {3.751201134614414*^9, 
   3.7512012404661903`*^9}, {3.751201615293879*^9, 3.751201625241371*^9}, {
   3.751201783072228*^9, 3.751201802219425*^9}, {3.7512018553740063`*^9, 
   3.751201863910933*^9}, {3.751201896949523*^9, 3.751201922981914*^9}, {
   3.751201976010841*^9, 3.7512020470475492`*^9}, {3.7512020942174587`*^9, 
   3.751202133354364*^9}, {3.751202183292495*^9, 3.751202247759165*^9}, {
   3.7512022942999773`*^9, 3.751202304681945*^9}, {3.7512023471295652`*^9, 
   3.751202362632728*^9}, 3.751202593807638*^9, {3.751203300326034*^9, 
   3.7512033094270277`*^9}, {3.7512046249907627`*^9, 3.751204629568754*^9}, 
   3.751219147292221*^9, {3.7512192122672033`*^9, 3.751219216063034*^9}, {
   3.751791084867567*^9, 3.7517910858455*^9}, 3.756118470256916*^9, {
   3.7561191767052727`*^9, 3.756119203333642*^9}, {3.756119294841609*^9, 
   3.7561192993192377`*^9}, {3.7561196892988787`*^9, 3.756119705335794*^9}, {
   3.756122639304627*^9, 3.7561226447107363`*^9}, 3.7561262862188673`*^9, {
   3.776967298975525*^9, 3.776967305803451*^9}, {3.776967370043006*^9, 
   3.776967426462866*^9}, {3.776967543709426*^9, 3.776967569964859*^9}, {
   3.776972206620562*^9, 3.776972209756263*^9}, {3.7769722681434193`*^9, 
   3.776972352952694*^9}, {3.7832733662171087`*^9, 3.783273400921067*^9}, {
   3.7832734931761436`*^9, 3.783273533590084*^9}, {3.7832735747553587`*^9, 
   3.783273574856215*^9}, {3.7833237946105423`*^9, 3.783323828555252*^9}, {
   3.7833238718919907`*^9, 3.783323893867065*^9}, {3.783323986880889*^9, 
   3.78332400818547*^9}, {3.783324053097563*^9, 3.783324057616997*^9}, {
   3.783324093907634*^9, 3.783324122768189*^9}, {3.7833248021533003`*^9, 
   3.78332480244671*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"79a0b15f-563c-4433-a51c-12e5182b8e9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Everything", " ", "is", " ", "global"}], ",", " ", 
    RowBox[{
    "so", " ", "parameters", " ", "like", " ", "for", " ", "example", " ", 
     "weight", " ", "decay", " ", "\[Gamma]", " ", "and", " ", "drift", " ", 
     "paramater", " ", "\[Delta]", " ", "can", " ", "be", " ", "assigned", 
     " ", "before", " ", "the", " ", "call", " ", "to", " ", 
     "FormulateDynamics", " ", "in", " ", "which", " ", "they", " ", "are", 
     " ", "used"}], ",", " ", 
    RowBox[{"just", " ", "like", " ", "\[Eta]"}], ",", " ", 
    RowBox[{
    "K", " ", "and", " ", "M", " ", "are", " ", "assigned", " ", "here", " ", 
     "and", " ", "used", " ", "in", " ", "FormulateDynamics"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"IdentityMatrix", "[", "M", "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Specifies", " ", "properties", " ", "of", " ", "the", " ", "rule"}], 
      ",", " ", 
      RowBox[{"here", " ", "orthonormal", " ", "vectors"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"K", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"createReLUAssumptions", "[", 
      RowBox[{"M", ",", "K"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Formulates", " ", "the", " ", "dynamical", " ", "equations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FormulateDynamics", "[", 
     RowBox[{"\"\<Erf\>\"", ",", "\"\<Erf\>\""}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "matrix", " ", "of", " ", "initial", " ", "conditions", " ", 
     "for", " ", "the", " ", "differential", " ", "equations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Rinit", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"1", ",", "1"}]], "[", "0", "]"}], "\[Equal]", 
          RowBox[{"10", "^", 
           RowBox[{"-", "3"}]}]}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"1", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"2", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"2", ",", "2"}]], "[", "0", "]"}], "\[Equal]", 
          RowBox[{"10", "^", 
           RowBox[{"-", "3"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"3", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"3", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"4", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"4", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qinit", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "k"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "k"}]], "[", "0", "]"}], "\[Equal]", "0.2"}], 
         ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "k"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Symbols", " ", "of", " ", "functions", " ", "that", " ", "need", " ", 
     "to", " ", "be", " ", "solved", " ", "for"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["R", 
         RowBox[{"i", ",", "n"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["Q", 
         RowBox[{"i", ",", "k"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxAlpha", "=", "4000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Solve", " ", "the", " ", "system"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"solveEqns", "[", 
    RowBox[{"Rinit", ",", "Qinit", ",", "Rs", ",", "Qs"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot", " ", "all", " ", 
      SubscriptBox["R", 
       RowBox[{"i", ",", "n"}]], " ", "in", " ", "one", " ", "plot"}], ",", 
     " ", 
     RowBox[{
      SubscriptBox["Q", 
       RowBox[{"i", ",", "k"}]], " ", "in", " ", "another", " ", "plot", " ", 
      "and", " ", "a", " ", "plot", " ", "for", " ", "the", " ", 
      "generalization", " ", "error"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", 
          RowBox[{"i", ",", "n"}]], "[", "\[Alpha]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{"{", "Rs", "}"}], "]"}], ",", "Below"}], "]"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-teacher overlap R\>\""}], 
     ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["q", 
          RowBox[{"i", ",", "k"}]], "[", "\[Alpha]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", " ", "maxAlpha"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{"{", "Qs", "}"}], "]"}], ",", "Below"}], "]"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-student overlap Q\>\""}], 
     ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"eg", "[", "\[Alpha]", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Generalization error\>\""}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{
         SubscriptBox["\[Epsilon]", "g"], "[", "\[Alpha]", "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.751790427585691*^9, {3.751790519775064*^9, 3.751790548756453*^9}, {
   3.751790644350432*^9, 3.751790778178891*^9}, {3.7517909062391243`*^9, 
   3.751791012036779*^9}, {3.75179104396347*^9, 3.751791044161004*^9}, {
   3.7517910979449472`*^9, 3.7517911155012493`*^9}, {3.7518074812023706`*^9, 
   3.751807484572044*^9}, {3.751807586573185*^9, 3.751807594662463*^9}, {
   3.751807630797845*^9, 3.751807630869211*^9}, {3.751808975468176*^9, 
   3.751809030586831*^9}, {3.756118566892975*^9, 3.756118727855835*^9}, {
   3.7561187844663277`*^9, 3.7561188016727858`*^9}, {3.7561190286985826`*^9, 
   3.756119035039877*^9}, {3.7561190893633213`*^9, 3.7561191256224947`*^9}, {
   3.756119394745219*^9, 3.7561194059396667`*^9}, 3.7561195096334543`*^9, {
   3.756119723760763*^9, 3.756119754559186*^9}, {3.756120082289119*^9, 
   3.756120179674521*^9}, {3.756120234030286*^9, 3.756120264697023*^9}, {
   3.7561212986825123`*^9, 3.7561213958839283`*^9}, {3.756121729707534*^9, 
   3.7561217439534473`*^9}, {3.7561217890187187`*^9, 
   3.7561217918749723`*^9}, {3.756123390743887*^9, 3.75612339184375*^9}, {
   3.756123477649233*^9, 3.7561234840793943`*^9}, {3.756125604831215*^9, 
   3.756125615435869*^9}, {3.776966994401659*^9, 3.7769670220078506`*^9}, 
   3.7833247553808107`*^9, 3.783324839057375*^9, {3.783325024399953*^9, 
   3.783325029207447*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"54ef461b-8990-4310-abc8-1f127de3f3aa"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwd1nc8lV8YAPAiIkrDKqtQSZIkoTiPErIqqZC99yYrKxE/SfZ2bWW0UNlF
uLaMMhOVhHvLFul33v7h8/28533Pc895zvOcAyaOmuY0mzZtqsR/iP/Tc+tq
ihZsyDFIx87a7zJyyfU6qZA5jwY3Uif2upYiT6ZZi72ZtCDdRbrGLF6HTivw
lEY5b4eQ3RK9HyrqkU9N3qYtmXtgN03javPAOzQ4KJePwjhhyU9GUF+wCcks
96v7OPMAb7iRC/PPJtQedtp7SOQA+KqrvCc5NKM/CXfUV0kCMNfs8K68uhmJ
5HXu52A7BLclx67LUZuRXinXgkSYEOzZeNEgu4OMIt5aNmn+EYbkfcZTkQfI
qKrrRbKT8zHgUfgt5XuMjGZG/9pHfj0OfNq7J15LkFHkUu7+fpETYO3kHvtH
iozy/qhu+2ohDq5P9gjpnyGjmi1z8/Okk8BvYMYQdpaM+pkSR2iGJGB/wOew
X9iU3XJNu9gkwfbdMaVRbPp9X57uv3Qami4Vtfti8x4ITz4eJgXtNQ3CP/D3
JIXEguXqpWFlN0xLYWsc77dX/yMDPdZvhtxkyOi2LL+8rbMs3F/c+6wTxxOr
0CzsXSgHT9x3uC6dJqMiVQfWsK8IbgY6lXFhU0RGXHtE5OHqpA6yOIXnO3NE
6RfpPOjkJp5hFCejx3LrlSuyCnBedmmb5Ak8/7lOsU1DCtAp/THVTAzPf9F9
HwubIly2UtjfJEpGfjfezIqEKUM111Bl5lEyGnHVibVyVgc3VwPBooN4fH/D
TyrpKhw66m1Gz0VG/p/0dXYsXYWb2/++19tHRk+/L70RUdUCN6+q/WV7yWjX
mlCM9aIWrNa91bTlJKNevvunJi5eh3aayP5ZNjLStb7m3T+nDTzyHV8v7iKj
/1wo4wtKOnAi945z9U68fz6hqnvSdODsm9Q34tg8ka+5LyvpQqed0mN+FjIa
e85TS065CbxWzHc4tpOR5fpX2moFA1goMhbXYiSjRDp/u6EkA5jsWPGdYCCj
5h2cfasUAyAbLfm6YQsfUMmTTDIEmwtG8SlbyWiZ/4bgRw8jYJY4zLVBR0ZR
+dnalplGEHH44GIytpDIz4ilViOY+f7MTxpb+1TYIusBY6i8qZHus4WMKpQq
G6+0GsOu1uK/e2jJSLNt69rYojFo0V5QrKEho+nLWsed9puAmco1aRtsbt3Z
hEh3E2hxzBVq2oz3347PupXPFH6+09kTt4mM2H/ZpumqmEL03MNKNewS91fd
U26msH9XJAs99qjfFRmGFlM4LlpScftvM4KHd5guuJnBnka3A4EbzahplF2O
JtUMbgjd266CrSHy2Km23gwWyeG2rNj6TV190nvMIajnfWjxn2b0hdWMYVnG
HKKUwy/6YtuZLMuUmphDD7NLkBq29x8ekuhzc1hn0NH7td6MNqs+ez89YA7b
hY9vvMO+l6hA92izBVRfkNqbip1w0tZG4IoFlH0brFLD5g3cSB3ztIDeEBfF
w9h5HQ8700gW0P9BSZUWu9T6lQTnTws4cOVXc+1aMzrzUtWyj8MS6O2Wz5Gw
3275lBSNLGGXdJZMELaKpkvbJUtLSL3g99QcuzuD7i/zA0tg3lyco4KtPZt4
oqUcv88QxnkCe0xGxCx01BKaXQ9u34tN6dMkbxa1Anr5ae/Z383IXeDbWs01
KyAJay8OYK87eYn63rYCBVH++Sbs4BpmY+lcK3g5fcD9JTYTMylmqc0KamjE
fAuwo3VONr5YsILyeG/GFOx9+Y0rTtzW4PNrnO8BduaCzlFRBWswSKGrDcYW
OjerP21rDdVHZr76YD95EBBVEGMNyYWs8W7YkiN76s0rrWHhvdh7B+wa4fxF
/glrOOKfmGyDfcFTRmhsmw3sShH/aYnd9q5dN00cO06i1wJba4/xfV1dG+D6
U6tEPB8yWqjlCLKB22GTqtbYJiWhc72PbOBZyfpnO+yptX0Ho7ttwK9YlckF
2+liyY1LqzZQ2Lif7Im9Ei8fznzAFuBQFXcgtv+X3iqysi1sqntL/x82vbgV
NcTJFsY83O/FY0f6rx1QSLQFx+sD2dnYbO2RWpvrbMH057zuc+zUffyhNZO2
IMHwtOQttoBV2WsfFjvIdinK6MV+XKY8I3XaDlylp45/xxanHeZdMrAD97MU
oz/Yry87XnkRYgdOjQckWPF+QjpNsFOJHRgc+/RYBLt5Oq78WL8d/LxZ26iI
3R9SxVVw0B5esHgt+GMb9F7SMFe3hyrWFMYM7K8HJgL43e1h41dpC5F/C1WM
31Ib7GHJc0KbHuenz7Y0Tt0Ze7j04ayQCDaNtpgqB6sDPFJLfHQVe9f89acP
TR3gzYRcWz6R7/oHtELDHcC0uTSiB1ukaXrZ95kDHCreWNyEz5NySgCy+usA
W63OthhhX6dTndA/5Ah3ytukYrBNHdlCr6o7wuT7RzeasP3OP+6QS3EECZVr
JRL4/EYUu7lIvHWEMTHGH/bYSRyIXXjKEYR5NUYKsAcXp0rCuZygsElvXgDX
hyWy35K7tRPcDtDgPY7rx58N0+afvk5QLXJfywN7i8TFZNsoJwg61Hu1FntX
+h4545dOMLFBLruO65OIS8FdNTpnWF2XUknB9ct033tWgUxn6Kf1H7qN66HN
pZff0kqdIbfpZt04tlNw6ivOZmd4724Rd5Ee9xeKhd4OqjOMvWzg4sH1Nvnt
WvbqWRfYkTDxYwjX48zlMXe3yy5wWjoz8zKu3wUijUpUUxf42Rtp2IRdFh81
/SXcBVr0NjYqtpFRl83Bk10fXSBpVZ6rkpmMPmRso1OdcYHXTXdMAPeD0V5q
/7u/LuB+LInchD0jV+FdecgVnrltpxvB94Wtey69zXNzhSx27pgDuP/IVXpe
ub3TDbyPi25nZyej/e+nOtIPuoE4R4ZhO/bmKV21Ohk3UOwNcA/lIKMGdlkl
WnM3qGu6vmkL7ncqLptlw1674f73hYuPm4yuHwkXijNxBw/1XzvG+clICtZy
y2+5A8+hy4zNAmS094adwMcId9i8xYjnmSAZDQdr8HK9dAcfE8/CiENkZDK2
mzWTyQMMR+7/tRYmI8eElL9FpR6glm5NX4/7++US5tsdZA9IFZQMGDlJRuLv
bv+mjnpAbOyc5xq+3yzNGS6KM94CUqwR3Tl8X/DVEJx+pX8LdlOktX7j+8c9
uuL+BnpPULv0XpJXEe8fN6/WNy5P4FZS2eumREaqJx90bz3hCZNM2vPtymS0
w9i5TeWmJ5TlBz2/r4rvJ1Wn3nY98QS6vX7n5K6QEcm1pnhY2wu8Il5r2uqT
0SpFUzjOzguC/3uiMWWA+6HNZJ56gBeEpCfL2BrhfDPeSarJx+O7/Gl9TMnI
SsMkmrTkBfM8PhKt1mQkdoT+llmsNwRyLDufukVGYTnJ89wF3pAzsqq+5ElG
43zHnfoqvWFN2y+z0hvHw65trTjhDaPqOu+v+pHRCu3jm0LiPpAU2m9QeZeM
akfVYabTBwI0vEod48iIU3e8KmfCBzQt1f19E3C+9nlI6y/7wOz8VYPIJDLi
b8sQ7+D1BdW1gwFv0sgo5PUvwaf2vsCsMBthkYfvQ7FxjG5Mt8Hnt1th2Suc
bxdH3q8p+sHHB9pjlZ/JaHf+n9+6en4w1DXsW/2FjBS38ApUOPvBLnGO0cZJ
MiquMXD1TPUD3+XMM79m8f6cHNuz+MsP5tAJt7zfOD94JrQoqf7wrmolMput
Bal5095Wf+4Pa1tibgnvbUEBHwRyi5r8ocwq07iCuwV9f2i2aDPnD5aGXyMW
BVrQTdr5lnmBAMg9O58yJN6ChD3dbJ28AqBtOt3GW7MFNeQF/+ULDoAEOeWe
lOstyKAvNqYzMgD2iiUUN+m2oGjxskrRnADYI7GZE5m2oNWZRabZjgB4L7Yn
+YlbC2o2vlVkLRgIq7xPo0qSWpC5qvesSWcg7DzaZkaZaUH75T+mjQ0EwrWF
XHOvuRY0LCmpYfAlEJquVtPtXmlBmvxzJTqrgVDyaTrLjrYVwaq102WBIPCo
uT7Tsq8VcefrzMveCoKUIx21Kmqt6GPqy+zKwCBglintqNVsRTHRbFrSEUGw
T96/QkGnFW3z6y6VyAyCwqRTeX4WrWhF66LH0dYgCHg7PVIe2Ip6aKRXOfnu
wLvOPBGDylYUuRL/KP7IHZBb+h4w8bYVqVAWdFgl7uB8UAOfllZUN/C0guXi
HQhJON44PtCKSp4K+dK73oG3O1S+xa+2onADzr/zjXeg817uRPXZNiRfsbyl
0yEYBGZQjXNPG5IymZRI9AyGq3HRPxaH25DYtg9mxkHB0PuN+uXBtzbEq1ve
MB8XDAp8vXvof7eh36tuwZzVwXAqa1flJv52VCo9R2vCdBcUBw6OGXi0o8LP
n08eZbsL9oYMNdqB7SgrrNt0gfcukB4N19tGtKOogaf1IeJ3gb/NSWc0qx3Z
ezneKdS5C14/W1PWutrRodczNIv5d4Hz86NYDfEOxGM8LF7z7C4sxmdwrch1
IFbGNpPQSjxeSfVNjWoHotEpfLu38y54XGe3zjHvQJ9WrIPklu7CA56Cno/J
HShRanLzPYUQyHUszhdk6kRMrz5v4vocAoNJx8tKaLrQz8sJIS+nQ+Ca5IG2
HqYu1Dulxqy1FAJubltfsLB1oTSuVxz3mUKBcwmttR3uQsf9I0X/ngqF0nkv
P1ONLnRV8YzeRHgo/NSRZpAgdSGpTz8/+8eFwm/Td/vHH3chbs88S25SKBgp
7/7wuKwLfX20y/VaWShkRm7dfb+1C93a/j2s6VMoXL7vuiV1pQul9Ma+LJS4
B/GtQtJ82t0owF5FVhndg/E5o2vxZt3IjH5T/ZeL9yBnx4KaiHM3OiZl28Fj
eA8yf9dylId3o9oU+a8Pwu6BtfhGp3JtN5owoex2G70HZ/U2NheJvkdHfyk5
nL0XBjq0PDbhQj1I7ewDV8HoMGD6+ffNZakeZBfa78mcGgbyrxMCZZR7UBGP
+Z3hJ2FAoeWU87LqQSIqQYm+H8Jgom0bY+HjHiSaXfW26lA4CLNcUdwn2Ys0
KLTNOWLhEEE6pSep3IscpFXbI2TCITtEgMZbtxc96Rz4oKcRDpZi56ie/r1I
bH1pZt09HOozL1fotfYi8WsnOGTfhcP8I4Ud8zZ9SJPkyX2wMxzeaGlN5fr3
IZfp2gPbB8JBdiBbJji2D70I1BAZmQkHpoWnPA01fUiixFb+Nut/4M0su3Sd
rR9Jbs2zrTb9D17cNONcbulHMq/31cnSRMBWbb4mTZ2PyLf1yed5pgg4Xl7f
etH1I6oZUaB9zBYB2lOz1x3vf0TyNI6K7EcigH9qECm+/YiUVevbKJciIO6l
tpCg6AC6MWI7kJEWAQsqI9akHYPIbXP13Gbp+yC4NnmeZ24IPbloeLDRMRLW
VqmHabnG0KhaReol70igTLz3qBMdQzsus7EOBEdCptiPwshzY8jueivNTFIk
lFzw269nM4aETE+P7WqIhAQ9XsYnFWMoy5clRZ/zAZzgPUrq0P+MYp/U7lys
ewDrIndq/R6Po+ptOzd2hUVBnZ5JG4KvyMU8xGv9fhQ0XxV2WdX8ioTq1he+
RUdBFqVLMc/8K4p2n5quTI2Cj4G2Rz+Gf0VWY28HzJ9GQdLHFabY3q+Itdy9
7PWHKIjJYvITMv+G7IyH7IwPPQTVXPNDq56TiL/qynfVow9hf/Dfvgdhk+gD
e7OppNhDKBxr+boreRKdayvVZZJ5CAopC0kfKiYR5+lI5TL1h2BUkeJtvjaJ
6pnlBRndH8Jw8PssZ8/vaN+rvKGn9Q9B/+eP/xqMp5Ai0yYaOjKez153qc5p
CrkY6AjpdDwEj1mTlCz/KdSyhdl988BDGDugmcGWNoV8rjjv0KQ8BJ3ycY7K
/ik0/OOM/DxnNBh/43rOdOEHYpCLs1TijQaB0ZfKhpo/kMRDyv0UgWigcEW8
STT8gSJOZw6eF40GPnGWomqvH0g2mN4t9nw0XCiWS+4u+oHSebrzTjlEw6Jn
tLnkjmnU4iTcHuYaDbVOv57M7Z1GS/V35kc8oyE0QM0k/uA00rCRhJA70TD4
gs8j9uw0+lueMtCfGA2dsy8fOVhPI6PLFsye9dEQEVQj8rJmGvHfWXOu4IyB
pqobqqHaM+jTa5+8RZ4YONqs9FrReAal/lwbFBOIgUWe4Ptz1jOI3WD9fP6x
GLCbdlpj8ZlB26T/sMWei4HP9ZNR5qkz6Bdl47W9XQy8OlM2mDQ0g0oO+lMK
nGNg2I9m9PjEDLLR+8v/xSMGgl0UnEt/zKAv5L//6Qbi8dt2NYetzqCPOZsM
lOJjoKth8KsV+yyq06WhOVAXA8I6ufTs6rPo9sMgSb13MRAgxvMw5+oskmmm
sU1oiYGg2LAKAd1ZVHqKtnd7XwyofRp0WLCYRQU7t+T9noqBTouSxnH/WfSg
kU6ld08slOlHaOx4MosMxBmjQy1jQc2u/6kzLQVJn9MMsbKLhYVDYa5rWymI
VTPF+6JzLMyXWW71YaYgsvMxUyafWPgQtrByk42CJJ5dkXgQGQvUjbdX8w9R
EJNYcn98WSzoiLd8cleioG9oouVWRSwYXNf2tFCloLpLIrXatbHgeTtHSOMS
BXk41uTvI8eCwrPtvLQ3KGi8ZNwzfTgWKvmHzOksKOjVsaNcebRx0Np1It8n
iIJiZN1YQhnigMsq0O3bXQpyUK+mtdoeh+PZuH0xjIIE7C/NHOHA4+N/3V15
QEGRRa7VxcJx8Gp6BdZTKcjsaJVh2ZU4eH5RPbegjIJ2HVHPaciIgw7P+fFN
4xRkcsLrPEtuHFT0zdGRv1Bwv80d13kcB5tmLsiHT1LQdZU/+6mlcSDJx6iw
MkNBqbbFaXtb4sDBO0wpeJmChEq2JzgsxEHNvq7dNkxU5F0uLfl6NQ42a+5S
bt1ORa015n20f+MgIP7Dw0M7qcihs3pPEmM8SN6jSWplpaLSn/ZR9bzxoLU7
fXs3DxXByY4wzovxoLlbvLBPlIqiz/wWMtWIhyC+B4WjYlQ0cf5Qc/HVeEgw
W08cF6eiEC0/+vMG8SDPO2g9JElFbe6id+xd4+EWnduZaDkq0n4V6fs2LR6u
xG914lOnIkfZS452c/GwfcS4aoslFY3yKnToLceDPvfzK1ZWVKSxSfqY+no8
OC+detxsTUUi9fzTx+gT4PXXr7X+dlT0Q3nJgro3AXxrE3WbnanITCvNwEU+
AZ5rnosg+1BR76noahPFBOh5+Or1ui8VnecI5b6qmgCs27S5j/lREf+g0+DJ
awkwkvop7m4AFX0yVLi+aJUAV1IstrPfpSJd22l1z6gEcMn7ebfiPhWR1caK
rOISoFrn8qf6SCqSEu1j0klOgA3zIx0tD6iI41cNWTonAVyHRAO7H+L5PaIv
rL3E8zFc6HsbR0WXgqRl/T7heNWKWGXSqEghKVQkWDQRWPb1RaU9piJhV0PJ
0ZOJwM7UtMOtkIp2qp8GKelEkND56qhcREXDmyavzpxPBGOL19QfxVTkZqXo
o6WTCFMLNW4cz6go5zRdi2BwIsRXWbPseUlF4btGevzCEsHm7zxvC7bTdOnI
x8hEKL/4zsj/FRWdzTD7FZGEn6+HRn15jeOlb+BcLEmEm9sbdyVXUdGW/iDL
dwOJMODYd77sDV7vJ7rOfJ8SYUJkJejKWyrqChP38fqSCHyVIlIz2Kmy45HH
qIlQ5GPPxtNARRK58uVxW5Jgm588rX0j3h+3TXQWx5PgBl33UHMLFTXs9sui
v5sEEvxH7e+9p6IzXb4VSuFJsDSqIrOC/fy+z/t7D5JgMuX7nEUPFWUweNEw
JSfBO5Ev4vK9OL83XE1YniSBp8zGyak+Kjrxw5qfcyAJcpqkPRkHqKgg30pG
ZzQJnqkXn7LG5jW31EyewM9P1G5pxmYeMwvipiTBqNiXb0GDVPS9z3B8P20y
FPlRf88OUVH6m2tZR44lw+Cl53Ipo1TE5q9VYSOeDOEbs9Kz2BFnr74vPJ0M
7iFrNnKfqMjr5WUa0XPJ0F/NfmsUW6tY1UT8RjJEvayzYvtMRduS5PnPBCbD
WUOuy0YTVHTL6ViWWl8ymP8ulvSYxPFsXfQ6OYjf97qmXYJNSqu6su9TMjBe
p658xW5pUd38/Xsy8CWnV179TkXcB22M7qzjeI3/WhyZoqK3A3m8FQIpoAUs
ajU/qOi6k8MSSSgFnJnZxynY0/SSHaHHUgAt+TDwTVMRq8S729dOp8Dhp4vb
/LAtIyeGf6qkQDxDM83pGRzP+f0ph11S4IFNQ2jcLI5nYNJlx60UCFp5nFiL
fcrpicqiTwpIUdaUp7AN0uR+v72bAldbUiPOUKjo2bKejkFSCty8uvhsCPt6
URJHXF0KBAoPiDH9pKJMtj2xNCypsBjEqycyR0VFOdXsV1lTQVeEMVwD+9VJ
q6TsvakgoHnF1Am740p1uoJgKgzYGXK9wF6/b/koRDoV2u6eK5eYx9+nr6rZ
ZpYK3oXOUkcWqMgkzkL+pnUq3OOUuKWIbS+4q6HQIRVO0SvYm2IHn7Mgq3ml
wqCSYVAq9jO/nb2RkalgKxtozrSIf/+y2dTu16nw4vJCxjA2ZwiLnWlNKrjK
1+ctYguwVVBe1KdCeWGR444lKpI5ybKg1ZEKnddDLyJsS8fXG/ETqXCRjeNY
Ovbbye2sXDvSIP1Dzckry3j/P5bLCZimQbDz8r6oFby+IBy41yoNClQPyGRi
txSk1bPYp8F55+wTz7G5vYKV1z2wZ1BhD3bdXk3NvvA0MHt7vId1FefXzVnz
0OdpMLx8SD4K+2S9UcHtl2nQ9FdwZwa23tHeH65VaRDxga66GPvJWoWjUWMa
LMoaPmvB1kq95yU9mAZRkRRm2t84/0cE7k9vTodNZv+12mM3XUjo/EyfDuW2
tMne2D+Lt+3+yJQOqd1bVEOxz/v9im9gSwdxnalrJOzvvLWktCPpwBFqytaN
fcJIt/TSlXRQNn3rcmwNn//xqKEXpHQYVjM+14PtJ3pU5GFuOmztrCgYxpby
fufr8DgdrpX0rH7FLtr1m+dIaTrIKNDpr2DHgqlRelM6+OcziHKv4/qSfurr
PUo6dDKYcRth8/7oPGUxnw5jIkjBCvvjKZuQ8yvp8EgjX8cJW609/fDG5gwI
WODWCMCWWN9q48qWAa+0DhpnYG/RHaTon80AOjHhK4PYNblu6Ix8BjAvzZp9
xvb8tSOKUzEDVr6WWX3Hnrl3/kTPpQxo+DoHS9i9L4tclU0z4HjfXaldf3B9
ZvNfEQ/PgKM/BQ0UsBW6BWgYPmbAacoxWxK2O1vmH42RDKhiPHgyDztPh3c1
bjwDel7+mCnE3jrO+VNgNgNKnX0lX2Kbr9JT+TaTwMlD9FA7ttC29eEz7CSg
8aiKX8KGogrdT5wk6FG8GrGGra3h9TGIiwQnLre6b9qgorDopR7yfhLsre8V
3Ib9Y9+vlhtHSWAzHL/EjV189NsrVyBBhbPYXcBubM+R5DhPglyyRaMC9qij
aWnFBRKEvWb+o4y9o3TsyWZVEtj7+6hewXY6O5T34BoJ/HdnOhpji6t3xRba
kOBLvtmMP/YrhwqniVj8vFVQsxzb8LZ+h04CCUpmpOReY9NHbBLpSsLxNT8V
qMK+9khxsiqdBJb91ME32HMT7/XjC0ggFaCz3oYtojOtcrGKBIccFDjGsXss
Iwtqa0hA61SZ8QXb2+MEveQbEsQJm/NPYpNjbr3hbySBHXM1+wy2RQet1Hon
Hv8ytWoRm3Se++CTCRIYNWhtZfhLRUqatUEHv5GgsviW9DZsipHJWMp3EnBM
pVgwY8v6FaTcmyWBQ8e+5zuxB19J7DZZJsGw6VWWvdisoup/WZkyIW359g8h
7DBOvwFv8UwoFLRwvIBtlx3NfOhUJgTkGkorYWuI5qPu05nwzPnHhjLxvkJX
7mHZTBB1/OKrhp3uyO/Sq5QJ5zR3Kl7Fft7YuE1UPxNcFaxYjbBjrwzJDhhm
Arr3PNUY+9Yw1SnYJBPuRJ4+YIp9do7zw6BlJjTY7+azwG7isc0OdcmEjR4e
qi32sBvL2c+hmdCjIPvdA7vmr4BjRHgmrD83kvLEzgyXyjp9PxNap1TuemFb
kIwZIqPx/Juj2Hyxf7W+6JVJy4SzHwt3BmLTC2jbxz7PhLrRyVvh2GLdpHSl
kUwwfOByJgV7qL1Z+9sn/H7k8LFU7JCWn7vvjmdCKXmRJ42Ipx5C305mgheL
/HI69r3yMUfZuUy4Lr0emYU9lrJf/uTWLDDbuVPnEfZ/icpr3YxZ4L5+48hj
bMk4pzIn5izg8ClbJhwRWXekZFcW2L7ziSzClgo02n2EOwvo7epynmBHWZAm
eE9kAd9ueu8y7DOmzWnVJ7PgAh3tsXLsb4Y/b+hJZgHzpPEo4bM60JZ0JgtK
6I+ffYX9XXWslFUxC547ZE5UYMOJ/SHbbmZB+2H2yVrsn2sZQkvBWRB2Ynak
GVvYvOitZWgW3BRR0yFjm3W80hsIywI69owewh9J3VFVkVlQb3HiXQt23QXa
1aDELBD/u5DShv3ggQWZpSgLLJPLOLuwm1dcTANLsqAczdwhTGPi/2fuaRa0
CohTCHtIJJ7oL8uCwrbF2m5sgwFyUmptFoiSsrV7sEUFjtkc6cHxDn0w6se2
ipDektKXBc+SRWoIZy1eSGf+mAXkmy/2fcBmbzZ4Tx3OAsXLN7sJb9hFyZR/
y4KrCydPDWC3l89vO/87CzJe/v0wROS7SkWh3oFs2G0amzCG/fm4FBetYDZU
cq5NEL7OVh7+6FA2jC1lH/+MLT/2zHrpaDa4BdU2EGb3eHQ4SjIbTE2lv40T
65GZmF2vmg0l94DxK/apUPY9NhrZ0CXVqEL4sV1s0M4r2XDtVdF/hONORxnr
X88GfS4S0zdsm/ZQvmWjbNgpfHbLJHHeVj1ShD2y4cB5w4HvxHkdXdjW7ZkN
2ov3dk0Rv6/exfuWTzbMfhS+SHgq0kGnISAb6guHygnXCFpwGPyXDXve7Yz4
Qazf5WsxD0nZ8H32Le8MdnX+yf9WWrLhNEPwLAX77WrcoHN7NuwTFmKlYjeq
rhyZ7swGDx03GcId1Krmkd5suEnDEEJ49LQiff1oNmxYie/9ib2pWTvw/lw2
bHZWFPuFvWVfZRf9YjbsKmm7QpjBjmd/wHI22IgzuBLetXO8xmU9GzoEMksJ
82vbrt+gzwG9Y9YSc9gK32/f4t+XA2pr7w7NYyvLjDWmcOeAx/joecJqEefY
2fhyQFOvzIjwNbGtZVsFc+D3vrQkwhaeUXMzx3JgQ8mCYQE7lCHb/qV8Du6f
DoOEW4SaTdWsc0Bf5JPWEnb8jKzMa9sc8P+hY0PY9OmLnYcccoCHPcef8Prp
jOq/LjlgOpf/iPBxJQ+OF745IG7psUY41lywdW8U9p7S+GVsoyPJmSHROXDd
zPgR4WOzLJ7zsTnw5sy3SsKNbmuC7Uk5oKR/a4zw6p33fgHZObA7vPrwCnEe
sgLEJ8tzIDNo2xPCwhZLDFqvc+C7q0ot4eUjdp/qKnPgi415J+GoZzcikuty
oOfiMSrh+jrRb+otORDzY9uxVWyhT8NJpSM5QMr2zSL8i0t6c9CWXHjq6ePx
G3vl5v5iga258ICt8w7hTalbdd4x5kJt5+aHhHdy9z9lYMmFoRC6QsJi3K5G
D/bmgn5B5AhhJ+7i2lTRXJDrPCu7hu2pF2srdyIXtP8rVyYckOrDMXYyF8Qv
smkRjuJWcRSQxuO9gmwIP+We5H18Phcs3fbHE6ZyH/B7qZ0LsYIPvxNe0mMQ
1rmZC1mBjnOEN1Kpfb/1c6Ev9dQ64R08NcfkTHPhXZUXyzpRP3hujjTY54Kf
3TcJwg48cWffB+UCLV2cD+FZHsa1maJc4NOx+U04uKU3xPhJLgR8l938B3vf
LdLu/me5EPl5MwNh5a7TwrXluWBhcJONcE6Qhc7Dulygy75+nPDNyfqXp3pz
YeGGvxHhuZgH5x/358LWRhMLwvfgZifvQC6kP5G2I1yeNPdt62guLN2tv0V4
t9oB9sHJXDhkqhxJmPzUz81vLRd0NvheEzbSV9k0/ycXWLcp1RBeYmSPsNyU
BzVPTOoJC5oWZ1+my4OIuVvthAPYht/zs+TBLy+uz4RPe0ufaOLPg6KSS/Qb
2LnnF2ZZVPIg6OKKMmFPuxOXXqvlAa+jsDphlTiHpyaX8sDgk+YVwpRv313K
tPLAvzFEh7Bk+MiyrmEecNX4WBNu7mrcnOeWB/fIWaGEk1dpTS/dyoMz/HL/
Ebbjl29Y8coDbaOuSMK73CpDVP3zIPjFQBxhXY6nTL/C8uAWLmKEZ/ST2M5m
5EFphHg14ZqQfo+vmXkQHqJYRzjqyZ6PkTl58Er7aj3hU5sjkz8/ygPB/Btk
wn45QXyhpXng28PUR5hl2vbIe3Ie7Mw5Mk1Y3FNO1mohD77Nu+3+ix2z3cjv
y1IeaFpHshJeyAqsNVrNg4an2eyEy9sb5HU28uDj5zf7CJ8RUFVUYciHbsF2
fsIKHTcuiXDnQz/lgDhh+tXkbsED+fDsRucpws0Co1d5DuVDJoO9NGF1LzPt
HWL54JLvBYSvCzob/zyfD6SkQXXCnJdKJ74r58MC7fYrhAe9ls0/q+dDtb+Y
FmHDzts272/kg95OVV3CVt7hrqW2+ZB1vducsE9X9l3PmHzY3+TuTbhjdDu7
dmI+BD3v8iXMP3sr73RaPuiK8/v/i49RrWkpLx/0JwvuEGY9v8DgXpEP/BSF
CMKWVwyStGrzoVRBK5JwhWHzEYmGfEjg040ibOSbqjLfng9ndC/GEi4qU4hw
/pwPbo/LUghrvucsFpvOh6oM8QzCK5SZdupCPiTph2X9Wz+hOBYHhgLgCest
IDyS/DXa5ngB6OVZlRJ2KvBn/CNdAHVnLr8kvKV8b8ADhQI4fJingvDRbnX7
Up0C4PxlVku4ZnRyQtGsAMSaR9/8m38mUHfAoQDMv51pIOy1tVxp404B/LeU
0UyYxP9DQiCpAPb6lbURbpLl5VcuKQD1/eFdhNncQtYffiwAMybbD4RL50e+
q88UwLbec4P/vu96qo9x0yNgPTsyTPjnXMSbd3segcrOC58IP3D5Uhx4+BGo
a4R9JtzmHBOyqvEItDnzvhJmdD5n6OzxCG5YnJgivH6S8YFk5iPYO+0xQ5iy
1Fmz1voIlj+bUAmPvY6n1C09glNrc78Iv/fV5w058BjOVPEtEG44o2MU6P4Y
7qrrLhMu+62V5Ut+DDtld/wmHKw6OtbDUQg82xvWCF9NteQ7alEID/K2/CF8
320/M09lIVQfFtz4tx5qAys7dhYBj3H5P4+W843rGRbBZ12Rv4SX9lu0Pi4p
goUEl3/e17AvwXq9CFIskv4ZWXaaCKkUg5nCq3/uePhiODC9GBSVWv/ZoCrh
+tBcMZBYP/xzqydje5R8CSxGffpnqVM+5xWjSqAffftnRkYzboHvJfCCe+qf
B4fVFv+iJ6BfMfPP/wN21Hkc
          "]]}, Annotation[#, "Charting`Private`Tag$68036#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$68036#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$68036#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nPzn/i9qi5voKahXTP/z/6xjfEs=
          "]]}, Annotation[#, "Charting`Private`Tag$68036#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OjQrO9fFpdGVTfmDiJIIiObzB1CXQqMKZ3qrqIiQ3Sv//AC7FLoZLvRYkIYI
Z6Z0+0RnJZEtP8P2AUYiXPylZ5PgI4kC1adn3nEQYU4uWKy5UwLRJg6lqnAR
gWD1nC46RQLFzHTqNXITgY8qO1/ITgJluleSMvmJYHPlyIMCZgnUkOVbZSNK
hBUqTOZy/RxaXBXw/YeIEOJtnpj88Qy6mm51VPQOEbrliYlG30QRq0VfxZA1
EaQdJFYOhIiiUWEJ5HWXCH8t+lfUjosio2d/jbudiLBFP6tbbSmCzIcSUq0e
EKHUgyr9yLeTSChlR5jJhwjHv5eKP4g4uff/fKux3pcI81TlSi/PnkQ2P8TG
9gft+S13tGP2PoGcDrSz5UcTwXbMrZmK7zg6NyBcoB5HBP7GcN/I3mNoLSFK
cjWBCFMnNQsveRxD9wVvXFVMI4LZSftw9xEh5INWomcKiMDRWzn4LksQwX4D
vpBiIrCoxr78rS+IyN+8rDxNJMJbWesfOQyCKMgwtN+nirh3v4h7nOwngCLc
+Oh5nu/FW5wK5Lz5kZZ8UFr7SyKIHXB/dh/4ETP5oohdCxE2Sp59D9jPj+Kj
nl1+3kGEHccMkbMJfOjaNZ5xcxIRCjUP/Zgz5UOcPAHWtL1EaNiyU4gR40Pp
pVrBhoNE+Hh1lnc+6Sgyca5l3/eOCHTvJv28CEcR33muwuIRIrQN/begtsCL
8jrm2jcniPBcNih96RIvKp15SJ44R4TLk6Tj00d5kF3RbAzhKxEY2vy+FAxz
o1MOqvxz34ggf8SBZyWEG1XvHALJZSJY6Z7Ykl0+ghrYid5Dv4lw5wI1q3sT
F+rSGN9iZC4DV+qxXaqLnIjTV9A6lKUMOIqemGnvcCDrGvv3FGxloDWxeiC3
mgPRcpHXbx0uA/pSx14/Xg6ksSDiOitYBqpNa1GL22xoyO/hjzqZMhD4eW7a
6+UhJFjXaXxGrgwqNXue5d8/hNy+Mr8pvVAGLrsalpfOHUJs2gWlWQpl8Hk7
Z5ylhAUZcPdbhaqXwXlkWxGQcRBN1x+dNTbdq//oS2S1NhM6/c1G5/2tMtDV
fbqWMs6IfHlqW3Qs9+K4nVvnNiPiD1TNUrEpg8COgd/m/gzIUsfZ+IxrGZBx
XJxJGqZDdYHPe0vdy4BWa/WypwMdomrYL3/MowzabnBTJtPSoSLe1MNc3mXQ
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
Ev4HaOI7Lg==
          "]]}, Annotation[#, "Charting`Private`Tag$68036#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vJzOdia3BGr2XrqLxR+gtvDBG7P5JdCWwLBBvZaK4qsPDcUVlcBfa2kG7cep
SHZPXMZUeQmcO/nfOyOdVBRYFMIX0VACVP5fvTVupiCmhWuib/tLwG9zSEV2
OglJ+SKC088SmL5LFGFiTkBJB6wDP2/s+jV5um35LR79LAhut94qAYpCjad/
O+NR48tuZdO/JaCyyq0vfjMeKQlpqWnSlsII8wsV69776OzAJT0J7lJ4qR07
pZkUi4rt/OLLeEtBa9GnKV4vFtFsZbwRFiiFVanx/msMsYgsNG7II1IKWOe7
3EREDNLxszdhPFkKLiO81yvu3kPGwp42K6qlwBigbaadFYUeNScWuKjt8l1g
3M62iUKceg0zXzVKYV70tPKt/6LQiN/mlSmdUjAJDTAZbIhEVq8Crr69VAoM
v6aW/nyIQE7+0d4N10rhMSMxJuZUOLr1uvCub1IphCXelqKHUFT0cUjna0op
NJIzwvtZQ9HA+AF2k7RSuOB5suXTtxAkuHSzRD67FGSerezfSg5BZDrtvo2S
UmhzYXA//D0Ysar+pL3eUgr6VHNje+qDENIUffP5SSkw0f1k/xUThBz1LdON
2kvBSUXGWsUxCLVYkUVlukvhxz8/93fcQcj6dpbm2stS2PejU+Idxx1U+fBs
jOfUrp+xKqultdto8Imf0dRMKdhV7Kl3rbuN/nWRuPXnSqHX+kRkmudtZPCW
s+rkQinUfLt+YfnHLfRrefHl95+lcJaZEJrz2x+dPZbC5EZbBsay7wVYjvmh
sYzZxKsnykB6ItH73JvrSIU35iSTVBkIGPwu4Mi8jkrypQbqZcog2G7JyuHK
deRRdofuj0IZtL0JW/Df9kF7Gw8H3T9bBgUrY8eiJX2Q+Bsd1wbTMng5aCMf
X+6F4o1+0ptalAGltcz9i7e80M+PGWV/LMvg4/kXnNk6Xqht/MuMmn0ZJFeb
iTWseSKDxWCzYbcyePzRWIRBzRP57WtU/xtaBnHb48q8VB5oPNpitiC8DAQn
TcYZmt2RCiNVqHpUGdwzeZ5+zcUdMbBdaIuPK4Pbj1lsBt+7oTzBeRmh9DJw
qZD08qh0RX0EXkENUhkMiZaWnLx5DbH5hO8kDJVBWRqk1wY6Ilr7g/50n8qg
pb4MK2k4oh3DrM2gsTLocMhiucDiiD5L1626T5eB+aFKKp4yB9SwNvZVZ7EM
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
cW6Q8D9kOSw4
          "]]}, Annotation[#, "Charting`Private`Tag$68036#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vtxP+B8IxDqE
          "]]}, Annotation[#, "Charting`Private`Tag$68036#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3gHC/wCPEi4l
          "]]}, Annotation[#, "Charting`Private`Tag$68036#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[Alpha]", HoldForm], TraditionalForm], 
       FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Student-teacher overlap R\"", TraditionalForm], 
     PlotRange -> {{0, 4000}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SubscriptBox["R", 
        RowBox[{"1", ",", "1"}]], 
       SubscriptBox["R", 
        RowBox[{"1", ",", "2"}]], 
       SubscriptBox["R", 
        RowBox[{"2", ",", "1"}]], 
       SubscriptBox["R", 
        RowBox[{"2", ",", "2"}]], 
       SubscriptBox["R", 
        RowBox[{"3", ",", "1"}]], 
       SubscriptBox["R", 
        RowBox[{"3", ",", "2"}]], 
       SubscriptBox["R", 
        RowBox[{"4", ",", "1"}]], 
       SubscriptBox["R", 
        RowBox[{"4", ",", "2"}]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756123955374552*^9, 3.756125630269268*^9, 
  3.7769667474377413`*^9, 3.776967007744855*^9, 3.783324146739813*^9, 
  3.783324821157423*^9, 3.7833250413036222`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"648f9650-5b39-42cf-be57-b9d68f210b8f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9A==
          "]]}, Annotation[#, "Charting`Private`Tag$68166#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DQk/Tu2pVZpGSieCBJrDqyFJdTr2StIUyrkk/XRvRjX4R91t7z49iZxkiyri
s6pBbGposefgJFL8zh3yJ6caSl0uFvAxTaKHAevSzwurASf89x+1/SNaixmK
iKyqhuDP/PmFBz4ih8pI5c9t9Pwzgg2YDkwgucvL7Nb36PV/13R4MD2OVmS9
P3Tdp+tjqD0iXDmOMm7bpBR1VYNXxWuLOPFx1Nt1aPb0k2oY79gvIiX9Hsl8
eF/YMl4NxyKkNagGY+jXPg3G6G1EePsGTShNDaPVc+JUKTYidJP7k0n1w4ih
hM3uAQcRBkSfj9QGDiMe4eEmdm4idL4KLD60fRgdFvZ3St9LhEUZJR6942+Q
rzAVLzlEhJzx1YfQ8gqFnM/x0jlChLnjdXXH4l6hyJIwgY8qdPsXRkwlZ1+h
DGGjq1IaRLARkzhD/juEmoQ/i5L1iUAQEth6fGII/RCWiGi3JUJYsWlO6NIL
tHyeXc7uHN3eoTl88dkLtFny483fC0Q4Ef7l/svqF2inCFLUcSHCtFlUUNOZ
F+iQyLnxPh8iDKv19w0HD6IrIrnHh6Lp9hJFfgXKz9F3EY71eQoRhMq3XleL
PkaxT17HX2wkwgKJGusx24+Eggm7h28TgcITcYTa0I9Ovjgmh7cRgVR/ca0B
+lF19GW7zC4iDCmpRSd7PkLnPve2H31NhDiF/SF73jxAv7PT9cnDRNieoEO9
Xv0AJcK5QdFRIoRQe6xOBjxAbYW/Z9kmiHDZOLiOk+8B2m0iwT/2mQgyd2ZS
JM71ocdNEQER60S4be8mfWqtBzldMGL4848Ioh255W0DPWiZgz/FjaEGLoQn
G0RV9yBpF2qVOUsNGOwXrlSw6EGRfO+HJLlr4MAP5f6XDd3o2HWNI48ka6Aj
60Ela1gXIuovfuc2qoEnD41RALEThXgfMbtnUgMzk5SBOcdOZJR7pcnZrAZU
y/u//hPqRAuzc9darWugjcGxjD37PlJLHl+xd6wBTRfz86nJHaj/xUPGmoAa
ePgg9QaedxcVrTG7mAXXQN2efeWL9neRt6Ru32poDXxlEVPsEruLdgXcjze+
WQPbRu7NCtS3I3uBpu2/kmrgr1qsRnt/G5q/UMh3vJyevzz/IT/RVoTih4M+
VdRA14P+K1bfWlBG456RtOoaEDflfll3twUdZUwrmiTVgNPqjzGydQuKqI4W
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
Oam/SPsfzILLKw==
          "]]}, Annotation[#, "Charting`Private`Tag$68166#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D+5J1cM=
          "]]}, Annotation[#, "Charting`Private`Tag$68166#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wMVmL6f
          "]]}, Annotation[#, "Charting`Private`Tag$68166#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$68166#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$68166#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Orm8iStghYNfkFu0l/A/aY7brw==
          "]]}, Annotation[#, "Charting`Private`Tag$68166#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1nc4lW8YB/DslZJNqEgpIyGb5w6VrEqlSGQmM6GsRNl7czhLHCSUUdkj
skdKiqxQKiWllIjf+/r9c871ue7nPPf3uc/zXufssvUwdaDftGmTLfaCv8/9
WDU66siHcporaxIJnegazU9RL2cRHbF+Xf5iUyfy5fjqKJTDALws8RUXn3Qi
FT3RykRPTvidHOHCQOxCAQ35mxhzeED8RoTUK/NuNDKiXYCiBCH/JUwPTnUj
9d9DxgGeorCXYKgM2j2oN0rF/63MLjh7shO53OhB/zLuGC9TJaDIqLHaM7MH
yeT37xTg2wNr6l4/Oe71IMvK7T+VoqTg8L1e/urSHhT79HK76b/9UEy1ztIq
6UF1zyuyrnrKQozJgZM7CnrQl/F1t/j3ByDtubUzK7kHxS/Rdg7JHISJJ8IH
tqb0oPx/huzvHRWgwkFK72N4D2pg/LG4SFWEcJ3E3az+PWiII3OM/q0SHPhS
31Dt2oPmubXbt/Epw+576ztlrXuQ2K7orANRqtC2l/ipQ7cH3dQSP+ziqQUr
HV/m5Tixusa+Y9+purC9gO6Ja243KtJerf2jpQe2j3cWJ6Z3I2WdfvlNb/Ug
bNh3qiOqG5kc9xHeyncUFj9vcfG52o2CzjV/lYnSh/2f8o/WaHejMS/zVCdP
Y1h/wDXaN96FTIZaF75RT0OS6c8fbDJd6NbERfMtS6dhaz3XqTs7u9DDj0vN
MoZnoOH41/4tfF1o24pUypVfmAsKsy6sdaLBHXGHpo+bATlJJLV9oBNZXDnr
P/TjPJCG43zaAzrR5dX3DPV6VnB++MZT97cdKJPplutbghVo9nxSmRnoQB1b
BF8tz1vBjrO1Lpc7OtD+XQb5ygRruHKWJTv9UQf6LX5u95vrl6BMg1swLbED
1RyrbTvVbQO0q1KWK/odCJLucBzxtod7i+LSNU/bUfs4vzY90R42LbRUata2
IxOZoquNLfaQ0Nyb3FHRji62P3+lxuMAj2KTf67ktSP/f6JUuXIHmPI+adkf
0Y4qr1QpCS44Qq+3b53wiXYkpfP14pzLFVBOEtg7Mt2GHiQEJxamXAHHggp6
p7E2pDzG0+JQewVkavqN/g21oSO+6lKT7M5AeSW6rtXVhmxLI34M3nOGTLqi
MP6yNkQUFo9omHUBKRuOM0LBbWjbotnDJDt3eGXqSscv0YbELu46ExHtDpmZ
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

          "]]}, Annotation[#, "Charting`Private`Tag$68166#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$68166#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl13c8Ve8fAPDMjJTsXZG+ElJGIZ5PKLIqSZG9siWUlVH2Hte47nXvNS4S
GlSyRXY0pBQqispIg7LyO8fvn3te79fznM/n83ye57zuObscfEydGTdt2uSA
/eDX6Z+rRsdd+FFBa01dGrEbXaYHKekW/ELHbV/fe7GpGwVyzroIFzAB/+aU
auuH3eiQrnhNmi8XLGTEejCRe1BIU8km5gJe2HU1VuaVRS96+1arFMULAf0l
TAyO9yL1P0PGIb7isJtoqApafehp/KHgd3K7wPRUN/K42ofWcm4YL9GkoMSo
+ZFvbh+SKxnYKci/B1bU/X5z3uxDVjWiv5XjZUDr5lOBR1V9KOnxxU7TNVko
p9nmaVb2oYZn1XmXfOUh3mT/qR2lfWhmbN0r5fN+yHhm685G6UMpi/SdQ3IH
YPShyP5tmX2oZM2Q47PLQbjrLKP7JaYPNTH//PWLpgTR2mm72YL70BBn7ijj
O2XYP9PY9MizD83xaHVu51cFqZvrO+Vt+5DEroS8/fGHoe0/8tcunT50TVPy
qIevJqx2zcwpcGHjGnv1ftB0QKKU4aFnUS8q11qt/6upC04PdlakZfciVe0B
xU3vdCFuOHC8K74XmZwIENnGfxwWv231CLjUi8LOtc7KxevDvq8lx+u0etGo
nwXB1dcYWO5wj/SP9SCTofb577QzQDD9/ZNdrgeFv7e22Lp4BrY3cp++sbMH
3fmy2CpnaAYtJ2YHtvL3oO0rMpluC2bwsLQs78K/bjS4I1ll4oQ5uKeLETqf
dyNLt7PBQz/PQ85wckBnSDe6uPqZqVHXBi4MX33s/a4L5bKEe74j2gD0fT30
6XkX6toq9GppzgZ2n633uNjVhWR3GZSoEm3B++xmUvb9LvRH8tzuN1fsoFqD
RygrrQvV6dV3nO61B+olGasV/S4E6Tc4j/k7wYtfkvvqHneizjEBLUayE4jN
t9Ucqe9EJnLll5rbnKC49WlGV3Unsu589kqN1xnakjJ+rxR3ouA1cZrCPWeY
8z9lNRDbiWrcapWF5l1g1j+wQeRkJ5LRnrWe9nAD83TB/95OdKDbqRFpZZlu
EF1azeg62oFUR3nbnOvdQL9uwGhtqAMdC1SX+cDhDrWvxNc1ezqQQ1Xsz8Gb
7nCToTxa4G4HIotIxjZNeYCKPaeZcEQH2v7L/E66oze8MfVkEJDqQBLWu8xi
E7whP/e8fI54B5LrnP4TetcbZERjpCWEOpA+KQK5rntDtaTwOU2uDhSmU96v
RfKBSL6XLc1/nqDF7rDFALdL8DpLrqvv6RPkKPKCT6rAF3ZupiY+vfYEadUH
nr7G7Q8K0fX2ndPtaOeLr/0UaX+w+CzJtHOqHTF8tTRqUfeHjgRBw2vj7ahd
QFOPydkfDq4rVx0bbkcGlxk04x/5Q/eu5rUtne3IfG+CTJZDANDYFBN9itqR
Tw5pvaLmCpQKxZ48a9uOaH5NlSPng4CWt15vPN6GluZMZbM8g+DbduvNI2Nt
yNR9qsQ4Ighq/Iy4vd61IWZ7blpTaRD4SoJezmAbcjVxyKAtBoHe8L73nJ1t
SHEv61UnQjBkcUUcuVzRhprHjGFmIASkaHWXhIPa0NiJ0Rcrx8NgoKZXgFO4
DTkbBs86DEQCkpBsPW33GB2t+8M84B0FW98SF0waWtFhhynl3MAoqGfINvrx
qBUpcrx2sr8eBZPEjFOZD1uRhOWD9l9ZUSCqo64zdK8VLS/5Rwk1RgGHicae
czdbUY3aTyYHzmhQIntFaWW3oj2PZhgXSqNBjJsS5OXTisTtRw423Y2GeSrH
v0XPVsTH3ucQWx8Na8I75MPdWxGjxa3HwgPRQFuQ9Eh0bkXv/7pd11qMhjvh
PMYZF1pR7uEphjjdGDBkkdE+pdeKOGs/bhL9GAPhJ7q1NcRb0fypnJiH0zGg
knJn/oRIKxr8arTFbDEGRqwbDc4KtqJ80VrBZM5Y+OfuVWq/vRXtD09RWFeJ
hQMvZKZNWFrRmeMaVhMJscA+S/zjNtOCSIOEh7eU40CnTtic4WELivAy0NRH
cTDqufwmuLoFObFuavt0Ig5CBJ4JzN1uQfKHPfrFbeOAN6hAqbWsBTWTjn5O
jY8DbgP7lwJ5LWjCYY7HfywOxhxOfXEKaUH7fuh5H4mLB8PlmFjqoRZkdCTV
b3dGPEhb7iu1UWpBnrFDgVvI8aC47Voi3/4WVCHufGPkdjx8zx5UcdrTguQM
rueGvsbuzzp3LJWvBSkUNTxu2JMAKmwymrOjzchkjqmrWDEBdh+5xyU92Iy8
1QyfJqknQPh9HoXjPc3o9sDwayuTBPh8TNBd50EzUlxdnFkNSADD0SfRu5Kb
0cGzBwQ1nyTAmGVfo4JqMzKlBYpJDyQAP4sl7a1sM7o83byLazgBUg9WOHrs
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
sf/3/wBG3+xf
          "]]}, Annotation[#, "Charting`Private`Tag$68166#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[Alpha]", HoldForm], TraditionalForm], 
       FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Student-student overlap Q\"", TraditionalForm], 
     PlotRange -> {{0, 4000}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SubscriptBox["Q", 
        RowBox[{"1", ",", "1"}]], 
       SubscriptBox["Q", 
        RowBox[{"1", ",", "2"}]], 
       SubscriptBox["Q", 
        RowBox[{"1", ",", "3"}]], 
       SubscriptBox["Q", 
        RowBox[{"1", ",", "4"}]], 
       SubscriptBox["Q", 
        RowBox[{"2", ",", "2"}]], 
       SubscriptBox["Q", 
        RowBox[{"2", ",", "3"}]], 
       SubscriptBox["Q", 
        RowBox[{"2", ",", "4"}]], 
       SubscriptBox["Q", 
        RowBox[{"3", ",", "3"}]], 
       SubscriptBox["Q", 
        RowBox[{"3", ",", "4"}]], 
       SubscriptBox["Q", 
        RowBox[{"4", ",", "4"}]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756123955374552*^9, 3.756125630269268*^9, 
  3.7769667474377413`*^9, 3.776967007744855*^9, 3.783324146739813*^9, 
  3.783324821157423*^9, 3.7833250415357237`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"267f34fc-0041-4bd4-b99e-6c75e1af4127"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw013k8VG0bB/ChSAiJQpIiSciWJc59juWRkCRrIdlSCWVJlC17YmYskSXZ
CVEqyUwTKilZkih7QhFCosR75tzev57P9/O77utez+jZ4ehp5sJKIpE+riOR
mP+9wZ3uI9rJjxkJqqdxbS1AA+kFpLV3NmHkM+nmLKQ89NMnUIjGCGGtbo8f
nLbKQA/87jwceGEbNiD39kKS4E20OUYt4LPsDmzgwPv3WveT0H83rx1ezJbA
GPsdX4TfSkRlC1rEtwhKYdh3Q/GTwomobdXWOZUYaSxbmAMZ76GicXWnX5n9
k8Gw2RDNuWdUtLb1wS2vC3IYpj5CDa2kohN9K+fjv+7DSOFiQ2+LqWj8fL54
p6wiJr63y1Qnn4oW/DPi/OqqhJGybvlp5FBR+tqZ2dlsZSy7JzB34jYV7eRK
7WX9rII5+BQdWs6kopP84NVGQVWMEenxGsugomI7Ym/ti1HHSBlvTm5Io6JX
kZ3a5y4gGCNtrkA4Ec819xz8ma2LhYwd374mmoqWgKWnC4geJu7J338vkoqq
6rQokD7rYQwnzsGTEVTU5JCvCK+gPiYu8yX9dRgVDbJ6/kM2xgAbUFe4X3eV
ivZ62yS5XTiMkWzsDmE+eH1nw/RU9jEMy3BgVXWiosH9djY888ew7OJ11yUd
qWjF2PxzWSNzjCH/ulLwFBXd+Fc68cwvcyybj6d+xZ6Kdmy/sf/LIUvM4d8z
9ZnjVPT4GYuAzhlrjGH8WdLgGBW9fnFyaO6gDTZwy5bFzgw/38Aoo02ZNpjD
b3Zhn6NUdFv8E1HTg8cxh0DNu0VHqOjA/W3PXqefwAaaWaqljano6aWva2h6
9tjA2/DL1/+joqlswe6f0+wxhs7KF4YeFW3kEfqwOGmPhZjoXvutS0VldhgW
qKadxLD11O4zOlT0904ryS4/BwxL8lBzQqlozcGnL4++OYVl+/12z9Wgohjl
Gtd/Ps6YQ84jY/19VPRV32bAmuGMYc6Cvg/k8fORLfF6Vu+MkQR2kiVw271q
/aCxyQXDJq+Wc8hR0YB/27Ll77tg2ePtb/tkqGjVmWoVoWlXbMAk6mytFBWV
1vlhN37uDBaCTFTs3U5F7yWEkIsSz2AM0zWgRgy/v95N9S5Pz2DYypTxIdz/
+R+QHuA8i2EH1DvPbKOijuVRMx3FZ7Hsb5PeVVupaIbIzij66DmM4XhEwkMI
v49ZywqKkwf+fi03nObH34vdDvOoWA/MQUCvYwNu2Vfjv69UemCk+a+qDzdS
UYP0ENRtBbe66SM23EG6Je9Auic+3xW1Ml4qOv86aN73jBcmzjHovmUDFXUS
aReQuHMBC/F2GDbioKJnjzweyay6gJF4WaTW4PYKz6gWasS9FNtZsw7vN+lq
yzN1AXOw+HVpL+5bdX9zF7UuYgPv7r/YyE5FW8/uUm7tuogp8Dwwn11DRcFT
/6NX+XwwB5GrM8srFFS8/du7rF24rRYSaLhZvh03ZhzwwcQVl2Ov4G7YjBxc
4+KDVYz9vvF3mYIaXmRBYp74YNl1w4dW/lFQyz2x0smOvlh2xOOJzUsU1PNm
+kpplR8mbjz1IGKBgmZ708t6rC9jDtxaCyozFHRx0kwm2f0ypvAn8x8HbrOz
owWHQy5jJK3Lbr0/KejaU3zZ9MLLGHZZrDgSt5uJIzV7/jImfsl1w+dpCqqw
h/2Sc1IAFlIqsDt2ioI+6zuMTbQEYuKJfR7LExS071Bv+1/9ICy7/slNwTEK
yl/4789x2yAMc1XYNz5KQfXXiknUXAjCKsgmLxi4y+j23v4ZQRg53n/uHO4r
ygObfv0Mwkz/G41njFBQ4W1fzCczgjE+nT2trl8pqIy/zzmvyyEYZrFSljqE
n09B+Mr28BBM4dKuLWdx239ISmyJD8HIYoOfDuCmKj18Kp8Xgk3L6mzuGcT3
P/GL68e7EExcp4Mkirvx1KXSM5Kh+HupvBzXT0FdjAJ+OLaEYgoPxFi29+D3
o92VOdAdimHHFHS/fqagPaqqJvbDoZjX8JcbJbjNds6U2yyGYiEpUVnKuLHF
M16mEmGYwu8LRuATBRUttJlFLoVh4pFhQipdFLQr43Hu09AwrOI3m9PURwqa
SBU014gLwxjj6R+LcXMGtVWp3AnDQnaeVhPFvWB+yG/vmzCMJLKu/9cHCvqe
VWNRaPs1LKRXdCTkPQWNX0gpTtlzDRNP+btDFrfh5JyNgMo1jCH3SLyrnYIy
uitqeA/h+VxAzF7c5RXSV9i9r2HZtJ0JDa0UNNZeaGX25TWMJG8KHjbj92Pu
d+9C2zXM6+vpeWPcLIYdJ6c+4+PXvZT98paC+u8nM75P4/XmVqOcuF25OcIG
RcKxAevAG/pNFFS75vfaFg/cWd2I20sKqu44qpLqH46R78e+nXiBvx/Oj86n
wsIxLwNSvCduseOPGmaTwzEHTR/Ms4GC/ln0CReihWOkL3Vbreso6M87zlWD
L8MxcSnt7ObnFHTskPlwSWs4hrmUz2G4P6Yp6yHDeF65hns7g4JWacysceSK
wBwUXpfX0yjo3cFB5b2CEZj4iTae3bhzYtqc5sQiMAbP9PboWgpK7q6oj1SK
wEK2HxrVeUpBz1/2vHbXJgIbSAl8ebOagko9mWD9VYj3Sy7SYdynoNtO9SjR
K/F+PjTDhUoKKrD+rWPU0wjMK6upQRY3q83dOuEWvF7o2uz1exS0f+FMGJiP
wEgjlQ07SyloZ7bN/XWkSGxaIHwtdpeCvjM4NNS6PhJjNLMrWZdQ0NpUaR2n
bZEYplJ2M6iIgqaqj7JE60VifPlSfFl5FDRhoFPxqEkkpsDn8Dk9l4JGRr88
JWIdiWX/QuyScyiob1f+89JzkZjXjaaVgGz8ffo7h7ZRI7GK7+frN2VQUK7q
QdLWQXy+/MIOeyoFnTa9Gfl4HJ/vkUrrHJmCdnwz5jafx+sLfuWFJ1DQzK3V
W25wRWFkytFAchwF3RccL7+yPwojUSR2HovE9y+kV5WORWEhDBWj++H4e61Y
1FA3wvMFb03OaxT0+ZDzfxcc8LwVLOYGU9Bj+pq2X2KjsOz95HJ/f/x99E8P
BidHYa3nk2xS/fDvxb/gtGh2FCa+8W17uQ8F/Vq80dviIT6+iMpe70VBL20Y
i3nVj49/A7AQNwqa3pH0+K5KNBZSfMZ4hyUFDTlviBig0ZhXWQ9WcIyCOrOT
6ocP4X47mCB+lILKqZ97t+1kNDYQcvHUTyP89ytd+2tCTDRGvrdydQWjoHkq
v8/KJkVj4hcfUSUBBY1uLp1uzIrGHPa+XYNoUtCjK1uWWKrw+saOcP39FPSL
4yS/Tx9e753+5r40/nvyNzeV71s0vj/E7dwuClqaZCNWNhuN8e13Ehfcid/P
y4Y9IxwxGIMsJnZgKwVdJ5OOWSvHYK3DDkgzNwXd+/Ogh1Z0DEauVYp7M0FG
jbUSvCWpeK6ruathjIy6R3X6c2fEYFiL79e7w2S0dJvLtZ57eL+QDF7jHjIq
axiWeuVjDDZ928KM0YSPT36d6TyIj6++u0vhJT5+gC/XeDwGEz8qR73xnIyW
+d0uE13B661+POarJqPyubV1tVKxGB+vjIRSHhk1mVzTmKcQi5l+3HOY4zYZ
9dAwao47EIv/Pa79+zqNjN5r6f5oaxKLKXDevcuXQEYVluYnlnxjMfIuk9ZM
fzKqZKG4BXkRi4XkndAOOkhGzbL9RXe14E79cGMaI6MXx5/t2NAdiw2Yh909
dICMPgg1ke2dwP1aYaJCloyqlJ/TvipwHXOYGEOM+cio6rqCczSn6xjp+ljN
VF4Camn2wyv//HUMk1jUD05KQP0yVfxuXMLr//3R+XgtAX2sXB9id/06FjIj
5fHhVAKq7jCQ/O8+Xr/nj/GiSAJ64IkIA2GNwwaQDWllofHolTf3Bme54jAH
zpS5N+fjUXqv3poSwTiMweZfXGETj2qzeupv3hOHkSTKzjxSiEcNjOrfTh7B
67/+ffv88w3Uqvdc9+3MOCyEt7+gYNcNNHWK9NeiMA4TB00DVRtuoJ9YUkS5
K+Pw+X3+hP6KQ+2lGCf9G/D+M4wzJxriUFdPgRHTcby/XtNMv30c6sNCm2HR
uIGRms/ZHI66jj7aZCZQrXMDE2dZXyZ/7jq6sGt0v4fxDYzh/N6jxeQ6esVw
4+VPJ29gmNm6tsOC19FriS4r9yPx8eE8tntux6LUXTzczh03sBAXndhfBTHo
vUMnd730jMf//s37psZGoX3GNRlHAuIx7NulMV7nKJTHVFCgOxzPbR01TZEo
1N3yDetEWjw2MJpvpTAViUo7qQ1sbMDzQ2UKVNNINOcKb7qdUAImPr+r7hRX
BJp07xnfL0YCxugu/f7CPQytvy8SHfQGz122NvnrhKEzD31X1nXibtP/T0oo
DD1au3dSZDwBc0hoqI2vD0Wjht+4ZHOSMezMP+yuSCiq91NN96UKGSP9zGoJ
uhmM0jj5ljfGkLGQYzazlNgA9KJL5OWlG2SMMVZ7+rt2ACrNWJoboeL17bSH
GYuXUarvt/GnGXh+wl5Y4Oxl1G2grtulAu9/Iirp7hF/VOCR78MnH/F+ltJR
j+X90Ca+CYW8Hry+9mVJ8oQvGnzOsTR+EK//IVP+rcQX/S5+JNdpHO/PUWA0
J+2LMq5LUzas4DmP7ZUKGR/U/dRn91NSFAwLEyun/XcR3Vl7dMxoLwULqYvh
cOS6iH7c3OikqoB7O0tYRNsFVOdt1XGuAxSM5DA/bHryAiqkFm/w8DAFY7je
9doS6oXWc2tLrvfF67X02bRqzqP+px/fnr2MezFIotfiPCpfJ7e1Lwgf//hz
bdSMO5p6SYT/QTSeFw8Xj8q7ox5Dsyu2GXi+fDTk1YOzqEh1weeKejyXN+uz
+nEa1ecisbK9xnNtP+suymn0or2NtM073PcMGWFqp9Gmtdy+LN24+W74gkhX
NPDoBR6zSdz6VuPNCi5oz3dN7VkhKkaK+MSIeeKIcoDk0wfFqFjITbr3f56O
qApl8ka6BJ6X9exaI+WIxqnd+aQrj+dVRtcup5xCkXB2nyRd3MWu7DNhDmjW
traC/R7Mfiu+7/ns0CYvmeYYb9zOXvclb9mi8/XXZnv9cR93jtu7yxY1OauK
RV7DHaU3bo6dQFcepXd3puJmNS4Mj7VBZTl/rchk4b444j4jboNa25lIBecy
x6tUbnpijVasYfHeXY777AH6px9WqIOpK7d/Pe5YjUKDM5ZoXO4zpbeNuIc/
xb7hskSr54VsxN/htn57nn7PAuXLfJPf2IU7+6vRrb/m6PNvCqjwJG4vVv2M
3GPozmt/L9QIJWKkgl82LgpH0f4ngQW/tuGeY9euHzNFM6b/flKQwC0ZH2GS
Y4putl/SLZTDHa4TGCBkinJq/BNM0sFtvnNt/k4T9JXnVcOWg7iX1mTq5h1G
wwv+BXEexi0k4T6x+zC6vGl5NMQKd7ZphqGKMfpzcvnJeXfcBkpHBJ0N0fJd
wZNFF3BPl+Unzx1Cz9qu7Bz2w91wyLEz8hA6/Hrl+vFQ3NLpHX4VBmhXHsn+
YArujjduxVsOoozjrKw7GLhDfpltUNRDr1LCVG1f4GY8vPLtky56oJH13M0m
3O5+8RqRumjV/jUdGz7gbrR5kzWggxbxrS348w03VqrMnq+NuhwM/7R/CrcD
n56JjTa6M2gt74U53NVhze94tNGM8bX+o8u4tdpyTl3F0ISXbIYdm5IwUuvu
ZYM2gBr/iwjiFcatPoWEGQOUQ4X9gaEYbgPDD19eI2jYHXbR59K4HfYlrXuj
hfpdWTdZhuBm/L66a+QAaq+0nhp1mtlvqeGfnxqqoWMW6eaOW2j3+h9b1FAB
s/SAQxdwc1x8YFyjir6+IOfEFYjbjbxgv0YVVak8qpIQj9vrF8W/QAXlfX5L
2isRt/idBaqZCvq99Yvo0VTmenQZf1eU0expX7ZNOcz644cK7JVRLoVbnSkP
cXeVCczLKKEj6JemSzXM+ovUpgFFlHFE9pn1M9ym3ALtNxVRP096ochr3I1p
+ZfXK6JD5UP+WT24SWb53bP70Gq5vVsL1iTj5/vweMVmWTQR8eGN4sAdkpfs
nLsX9ThMW+O2Abf47GUupb2oxPkjE3u24HZIl8u3kEHjS71pZTK4s9dabaiQ
Rs/U1lbG72Pm5vqthtKo3lu2Ak8V3ORDS+qju9HF8ZvxigA3o/3DuORu1Hlv
7cmHR3F7BTiIVu5CUU028xRLplvXd1jtQkWMTAwuncDdytu+uCKJtpwdUNBw
wa3g9THCXBI9ULKWlebP7Fd8snWDBLpxz+G8htvM9VQOHnwqjjoqXtblzWeu
J4WN5iWO//s/f8imBHeF0l723eKopeE/8akqZr5dVX7fdjTjXFmmcBNzv4Yd
Czzb0Envbi3nFuZ5aH57GyeKolfYeso7mP13uy5yi6JDcXYiev3M+bPuYgJb
UenyDTc95pg2a19/QBgNeKSh+mQRN6lj9E+jEPqG7vJhzQrugYYfaTZCqEcL
bVPa+hS8f+vL5yFb0Krp8+R6MdzZB13OjAqimPK7GKFDuLF3Lq0r/ChV84+0
kwmz/o0HWsKPftGVaiw7hnvAnEfBkh+NNA9i17VnjlcKD7m/EX3rK3/tvDdu
0sGkkCt8qFjQ8Z3V/rgZ0vsMlfhQz8jI56xBzLzXrr6NF+W/2bdyM5rp8B0D
D3hQ6+r4K3WZzPpSOUoqN1rCqNm6IZfphUNXtnCjfxtHaqyKmOspe1+eyoVm
dYPFifvMPBFJvMOJDv+Z9N3SyOx3mWrZxIF6Ikc83WeY+/HqVwtlQ/vE9N7Z
/mb6fZijFBtqQtKQO7zEtMqOdc1rUdn6neNy7Dfx/tfWvRBbi343mHedEsbN
mI7e0cGK2siMv+gXw03SFHOMYEUbuQYkWyWY+emN+uqsaOG710MVcszc9Pe2
TBbU2TzT/qI2s19+s+9lEtqxn0pz1GfmirpVyiRUd0uU6DEjpicGfPtWwM5P
Xp+ULZj13Mfa3i+D/pN6lr/cmBaKFPm4BI6fGz/sTyb6u9YcWASvjQdK3ZKZ
Lrrd0rIA1OU/cNncYtYH0gtcF8CWn/TXGnnM/I+JRdpv0OFH/e/vY6afifDw
zQM966i88VpmvV6tbOUv8EDjypqe50w71vVb/ALUJZfntW+YLt6VVzAHjoRp
IEH9TC8J3z8yC+hO8hkew0ybWg/9mwHy/0n8tf/G7H+a70jZDODm2PAEnWV6
nfs+vhnQdGNAhWVdKl7/8/LFkWmglxYlGy6PmxRbMxT/A8h4n1TtU2Y6bvwY
5w/Ad1gNU9dguhPpCJsAPaTRYxO6TD9Lf3B1HPi46Qea2zAN5gLJ38BxHbGI
cnumv6fbiHwDmOh8PIcz019Y5/PHAHdrfk6tB9NWrYHPR0GeGluTZDjTMnrG
oiMgdmPv+6AYpq9V6D36CrzGq3q74pm+wvhu9hVo3Xb+GZfG9D4ZTfIw6GBv
EPpVzrTszpytX0DNQPrOI1VM32nzqRsC2TXessVPmC6pGjk7BNw9JDC7BqbT
u4QZg2BtZ9jpF91MV6thQQPg+73jF7b3M/1DTk59ALTGKAVeHmY6w8d+rB9k
IEPxclNMmwSLvOgDKvnaj5LXpuEuOBab3gOcfUhsrvuY7rp/pKMLGJp08TBU
mOYZ/XSyCyhIVwiJHGD6j+bjgY9g6fNJ2Xd6TIseYmX7CJJ0nx1TPc60X9kX
lw8gYNtNO/JJpq+s6K/5ABx+e5z+7sx0rM3mnA4ge1csMMuT6aUtMYPvAX/E
fPiCD9E/2zn0PViwfxdvFsB03+M+8fegT70gtTSY6bzY7GftoIE/KIc9gul4
nlnndqDZeqXmYCzT4vwfRdvB/RuB7dEJTN+qKPzcBm5zXGblusW0T7YAaAMB
y96OvPeY7pg7z9kKfj69GGBaRezfUSC8BbhdvkClPGF64fXQr3fAcs6jblMD
0z2epoPNQPH7mZ1C3UxPg9tdb0BRodsBmz44/2u7N0DM5bTZrS9M69mhX5sA
94BzmOgk0+Z8TdOvwdiHk0Pia24xf79GL29qBFnPLXL2yDEtu6w42gAEg81r
zioxXR20KbIBxGkda7+rxnSVd9iuBsD65+j3CS0if2ryoh5cfmzKKq/DdENd
gGs9mPY5IuJ5kGlnp3V89cBVyUSpwphp09t36+qAeZmRo5IV09jppL114M1Z
wwBvW6a5Pzt8eA50pA9Rq04x7WAifOU52JerX6fqzrT7q6lBBuBM096pGcr0
9IKszzMQaokduBLJtFtP2jc6WNiEmtGuE+vTfu9EB1/jtcLQFKYVjpw2owFG
uNqQ7l2mW70r/nsKLnnJ5Rh/YLpL5mneY8C97tdl5U9MV7jYoY9BdmbtUZF+
psUbRj8/Ak1NRixjY0Q/OynRR0B011mHa0tMe2VzVFWByqeK6mdZ0nGnvsw8
UQX0zRZ5j7IzjWVfYasCnsHRz8T4mCapato/AHXdBWI1EkT9jBP/fWDp5TGf
Lc20Oqt2TSUYZ1d9FyXH9MKubPtKEJL5L99DiWmOA5+WK4CAyourFmpMe/EY
3KoAxU1xFlpaTEuf1lGoAOCUuZyENtN8G/MT7oH231vZOPWZJg++WCwHp+O/
9EwbEjnnz5pysCR5t+rjEcLObK/KAfnpxTi6OdOmAh7r74FdZgec822I/NDi
7nugZoxFK86e2F+b5tdyYBL8epO3E9G/SHhbOfgiSBm3cSPy9s1/SoF/qXU9
dp5pRqm5RSng1hVP332R6RCjnR/vguzu0Ys8l5iejtY6fhfs97pn+Cswnbi/
k0MloIn90s6eEKYd1iR6lQD7TPCnLoJYXz8PWwmYVWZvL44lfKj7djGIbmou
JicQ85WtaBcD0VPJoZeSiPXtUZgoApW/bW3s04j+4zFZRUA/XlLxvyxif+YS
tkXgk+QEh2wu4WQXqSLg+fTBAH8R0wMDqX8KwVqzwOrFUmJ/Mkr3C0HqmA55
oJJpce92rBDIBXO6vXpEjA9SLCwAdYLtaPlTYn/xYj/ygWVp2pZkBrHezljl
fDCuc2oq8AXRz/hFXh4I6ZZ+5dhE7PcB1TsPCHhNZx1qIeovblTPA8Xs1X4K
HYRV143lApAZbLKlm3gPXC+Sc0G78kGp5V5ifu1WvVyw5ND54c0ocd4Jw3k5
gPw7s+z+BDHfwSuWOWBXvEtE2k9if2gndw6okZSzC5lnurViV9MdYPJ0TuX0
X+L9rjQn3AFfjtZym5AymOcZpnTyDvAfuzaswkY44pHGHcAdbFS7lZPpED2a
+B1wR3BTEisv015TxYJ3QGkebfMxAabFDy+I3AHVym5pucJMY7eThO+A+jp+
0TkxpkmnCt9ng3dHaVl6kkR/d3/FbPBp4PSO5D3E+B0JZ7LAV0/+vK/yTGc3
6G3OANPLtVKqKkwPzBfK3QJLN04XR2owzVhTq5UG1m3jl/0IiP57IprSAH9p
bfluPcLtG2JuATHN04r+h+D6+/1ugT1NG6saTYh+AfRdt4CKTa2qsDmx3jH/
hjSAjbk+OWNDrOf2T+s0YMleS+d0JvKDS5dTgWOyq/aJM0S/lTjeVHBecmPD
XQ9ivW/el98E/g+e6i95E/On1Zy4CcJ1XF8bXyb6ae0VuQkS2viMM4OI8f4r
EynglsPTdz+uEf2//05MAQVTLkdBDJHPBn9OBpVBfB3x8Uw7bAwTSQa1G55a
9icS/buCy5NAY4ZL97404jx4DcKTwPu9fLYhWUT90sd9SaCvpqavNZfYr0Nt
XSLg/u38jf8JkX+wsKUCoUhedyc60c8kaB0VSAjWTD6oJ1y1t4oCDijzzpm/
I/qT+Pgp4LTnk+WUL0S+Pbc2AVxcdgodHSPMEbE7AQTd4FmrPknsx/pFYjxI
uuu0vnuBcECs5w1QN7pBYCtPJrN+7Tn566DZrzrl3CamsfzWnFjQxeYkXCvE
NKOcuj0WDCdtyOAWI+y1vygGTElUi9lJECYvYzHgz33HO2XSxPjR8h/RgF1n
g+SyHJGrviyNBhvbHheYKBM+Ln8lGog6OO65rU64/q1VNJCe4i6dQuD4IsVo
oBz0WB7TJdwu+ycKgA2OlWQDYr1+kbuigGEGt8rgYaZDvpe6RYJLXY+AhBOR
X+cqDwfZmEyosBvhA7sswkFTUWY973mi/rnM8jUgejncYMmPyDl/Hr0G/hv8
HTsTSMw3TP0TBjwOnWseCyHW97LtThhgCJuZfYgl6gtKx0PBt9AXSW8SCNe8
IocC/u/qH58nETaLUwsFWmalwtVpxHxqm7+EAJea7bblWYQ7BpJDQPzOxKy8
XKLeP+VkCKiOZR+8VUTkqYJICBicuSxBKSOc8XVdCOA88cMl6j5RDwYowUC5
3qHo6mMiv4NuDAa2ezu+e9cSfhFJDgL3/tZ4OrwkPIslXAVdTvL3Ld8Q4yOP
8F4FrG/vzBm3Eu7aSr4CzDOiL2t8IuoXe1MCwdW1S0/39RNWXJAIBAXunsu7
hmH/PkYAaO0YwkS/EePt/nkGgEUty2v8k4TjnykHgJ35r19wzBLuJPMEAOMN
CMfKb2J8fg9rAPD1rTD8tUT4JM+mAJDVK3FjnCWLWW9M0Q4Ar/672TLIznRI
SSs5AEyXcfJ3cRF5idqaQCCyOcj8HR9hJ8X0QKAb9DOlQZCoX9h44gpwH3Hu
rhEh8ucRyldBiknX1srthPdgPEHg2SMj+0JJon7dlt4gMCb2LDtzD5EPHA4O
BhujlL4kyhOOEGwOBgem8nfFKhP1b7YWBgMnK2G3EHUizywYCQJxz+JK/BAi
n9d1vAoe7ib9cNch8h3LswGgL8F7n9NBIu/7E3MJcCyMXLAxJvKWQGFvoOhw
vOrIUcJiB9Fz4Hhj8/x/loS5n1afA+EK2hpaJwir3zDxAmWpVYFKDkS/mt3j
XqCTJE2XdiHyaNoPL7Dilk7afpaw0PgHLyDdxqMr6ElY6kyhFziqERbB5UP4
2o5zXiDgzq9XLJeJfmtOiXqB3PVnOBeuwvNFPTzB2ws9xpNhhEPofh5gvvtI
wnAUYYaO2XmwXae+7VMcYU3Eyh0YlKgKtFEIk4X83MFF/hLLVymEsYe97iA9
YFsaLZ0wUt7lDhqGyJ8fZBPeV+ngDoLk98pS8glfffrpHFAPeHHFo4TwDwfX
c6B0459te6oI0/VizgJXuyQP9ieEwx4JnQXixfLPvtAIczy8cwYkYU4OWa8I
B+/KdAMmcf8qAt8SPpbB6wY4um6y2LQRjnnudxrUSSiZqXYSXqxNdQVXPN/m
bPpM2EPQ0QWoPnWdne4nDJrbncA0O4veu2HCFSPfT4ESs/Sku98I1x3yPAmc
s/Z/jZ4k/Cd2/0kg9r1lv+ss4dyW96dA1/6zkboLhMeeWjgDaujaj+L/CDc3
W7oA4+as3csst4n6LW+dAbuwhv9ndsLfpWWdAcP5fWM1F+H8b2+cQEDFeeEU
PsKbNP2cgMrSurPegoRpDjucwOTBnBpTEcLKGi2OoChRi0t+O+GTPCGOwLG/
8wSXJOEkW2VHILr3QumYNGHdksFToNOP698LOcIanudOAXJd/uFcJcJ5My8d
gCEPlhWiRrhE4vNJsPb4p0k7LcLS5pV2gJ7vg2pqE9ZXXHMC+P/kIQvpE/bx
rbcCSkjxwC9DwqKfh4+BiWhdxfdHCEtqVJmAgo7e0ApzwgZje/WAg7h/+w0b
wnxesgpAxJ1f4pw94Yq4TCl6x+NSbwMnON5393/0+DUHG3a5EZ607TejGxwZ
FFhznrDqwNIxOmt6oMvABcLkZecD9NoRwUc0P8KM1MEjwE+pgj09kHDZs9PO
QCHI0Mo/hPDL99lnwffXw4UWEfC+LtucBnmCwQtKsYQt575aA/tTwof4Eggf
qCw5CoTKHqT9SCRs++2SJWhfOPy9KZWwvHO3FYjTGztQlEnYJP+uFdAnh12P
yCFsphVmBUg9oj2OhYRl9QysQM3ux7JYKeHIvN+WwMf76NVtlYRLhzMsgfyz
8eY/DwlzbzpgCcY4I8W6agiLeb+3ADmW4p4PnxHmYDtvAWxzap5RGwiTUE4L
sHnSnM/rNeFO4XvmoFVjyuHwO8I6GdHmIDYiplLmPXw/Hl/MgV6bBCtHF+El
0Y8WwFfwzj+TXsIdBwutQIGN2GLyEGF3ZefjoDMzfa5nlPA7n732YN2Q0LTE
D7gf0xungLpUyvjZGeiCQmfgdnbTaOVvwp8jvd1AWjl5aGGJcI7epDtwWWSf
2s6SzfRDx5bzICj9hXv9GsLBZ9hdQQoS/t2VnbDC2aBjoLxfx41zPWGHTaf4
6C9DWUbKuAiHtLVvovdJMJyO8hAeMMdMwO8XQYNzfITN0SArwOeGnEzdRLg6
++NRIM251KO5mbDe59QjACutOd4vRLhC9aIJsDa53BW2lXAGr/Nh4DWtZikl
RrjRJs0YxFDn378WJ2xctGwEclQeHj0vQbio8qoRqOn0buGTIly7wGcE2v2V
DldJEzb4XWwIvov8bLLaS5hjv44hYKXdM/grR3jidMshsPWkx8ssBcJzwVsO
ARUWOT0dZcL+Rn0HgXHu+POv+wlHv5HQB87/laAx6oS7WMd0wZVRN5qsJmHR
ORltkBSzW7MVgblutyYo2ztS7Y0RHtt2XAW8bM5T3aILz2++Yjfo83SqqvkP
nu8xrU1gfuNOJXsD6FOmywhP1cA9FiPCpJ90XiBleVsu/zBhxvL4boAu2N01
MCWcbXFVHVjfEt0zYQbPl3WdHvDS+lyQYEGYu65dH0T3pUkqWxNe63tQD2SH
WOd0Hicsyc6mC6p3bhEPsCPsdqVMB7Q1fMjc5gDfh6SJDvjumrT1uSM8z5op
bcC6/liaswvMa9O1gcjdjVs43Ag795tqA6XDrUl3z8L1vRHQBoZT8fxHzhP2
KR/FgBPlMHnGE95nzGsMXFHm5km5SFg29jkGkj40XdfwJSzwGx9feilmfe8l
wlWaH7RBg7BBVEgA4TwbVl3Q85SdTfIqYS+zDD3wy+5F2KtgwkJ7VAwADymc
dC6MsPraiCNAKkcniCeCcGzyQQsA9FiWKqPg+z9SbAssR55dtoglnCuSeQp4
RAf9Xogj3FfyyBZEySC+GQmEtSyFj4Dst39nUCq8r9fGKqDao8brSxJh8VBd
GXDyqt07m5vwfXUMqwD2OJJsaxp8X3KIGii/lRujnwHPd+85NWBRrD9amwXf
T1qAGlh6/E1P+Q48L5cTaiDvZVxOcS7cb7ugGjD6sI8kXgDfx9g9VTDzpd0u
pQju95qwKkib8X3KfZcwlmK2H2AswsLXyuD3KnFCBYzx1vot3oPzbdqrDBLE
TnZ43ie8kDimAFTlWJVGqgi3RjjLgD7N/ATbx/C96fGJgwhDgx/tT+D71c6d
R2Rtxg0P1ULLXOCnvz8dX/SMDs/HmDSHBPgpsqs+Jzy9rWA32BnR4VRaD/tJ
PFYCrxMvPd/5Er7HN9bKwCtHZHtaIxwfoKsEhCppV3jfwPt17FQEz545fIpo
hvWZZEXg+m6N+lILnH+/jiLY0FuQfLGdsOnYnAKoGj80O9YBv9fGuwrA9s+E
6cmPcP90VwWwZj25/EM3PL+FzQqgZIsyt3EP/H7d1+4DZlKdZ+r64Pp3ysqB
RZXLr9QH4X0kxsqAbF3RXfe+wPeEsu0GB82ehe0agXlh6E4w6eA4kD4Gv4/U
JmGQ4skG+Mfh/dVYcgAkqCg9+gdcfwQyTRuOM1pcnoL7zxXZQo9Ln7T0nYH1
95Ol6MollKrxOfg9lmQq0j9Vq/A7/iZMpjxVp4e++ujZtQjXH5qJ0KU7A5pN
lginxrlr0VuHt+19sUxYujdSmX5plhGtyXKHeC/GUevoYqzOI5VrCE8LGeC/
Z3zr9KTZCSuEmf8Hzm8vuZPFQZhDz/MwEJA/vCLARbjjPXYEPNWatr2+gbD7
1bmDwNEosYaFj7BB+34twHlcVcifn7B/u5cSqHTr9p0UIEx+/J8csL505b3z
FsIhArJ7AClyu+JnYcLZY11SoDCpLv6oKOEKnsRdwCTXZeKVGFy//RtJMF/J
YQh2EOazN5QEmYy7hVUShAdOckgCvRYTtr1Sd+D5f5UAE70/He9Iw/k030uA
xIkkxpa90A8qJcCBv2pi8XKEWy9clABD6z8HrlWA/Z7+3QlihIK6A5Sg7XV2
AvdcKrfUfuj98juAiXwh2qYG1xd7cztQfPL04pUDsL/w2FYgoNeavxuB6/Gu
wP8+vBvuakcJkxYSfiPdNotcQTowj/nDSa8d3oDu+Y+wQ5GGBD3Lc+fFjoMw
Dw2QpYf8Uc0PNiQsPv9KjO4UYdQlcxjOt5nEDvT5HLg6j8D7/O/7DiCd7gNC
zeB5rejsAJxSMRdkLWA/7nvbwI+KzLyPVvD8m/1EQavm/Y9hx6EX728F91++
5JS3g+uhLYuApKOfke6TMG88LwIu9Ux5hTvC9fz4KgyOn16bt88F2jFcCGjN
CH38dBrO11QqCLZfleOMPAtzZY6NgJVDB1E8D8/vSPBaMEy19OrxhOcTHtmC
vNp2LjfqIsxVldjpJUXBnUq+cL8HrEToccpJ6/suwfXFx0rRPelFWjEB8H5G
+mXpZodonipX4Xp3+vDTVTracvqDYf6RVQBsOTnyITYM9ktU5wd/vv3hUI2A
8x/uYwU9Prxag1Ewf93MA+grEp5xsTAnGfCDO7HqOWo3YJ5cxA/CBQ9/GEqA
+cZafuCafYojngr3P5HNDw7t9dPUSIb7yXfiB7KPYj2Gb8Lz6PXmBzzat+8k
3IL9uPM3gZ9vHnQcyITr9zbdDDosG9eN3Ib9G9+KgEeDPQcoObD+ZLU4SHP/
eV4rH+ZRh3aBK7/Z7owWwu9d5b+9wD5MpINaQria45wi0N6wbx0oI9y4zUIB
SKbqHvh2D/ZLFxED7BLW55Puw35sAxvAWJl7NvoQ5q7PBcEb9dD33x/D/YjU
bALl9cnsKTVwv9FzvIBsUqKhTYPjrZ5uAN7ddPeJZzB3usENLJ3f375ZB33v
DhdQnxpt13kB+9fNc4KtAUtsk6+gZ89wguW1GzXSmmA/4eccYCBhl7teMxw/
1bIW1IscuD3VAvPPoktIQb5J+612aOO8fiRawYlN/wN0PNcc7dzTS+o/P8Lx
cW7cdBP9uHMZn+D7GOsVpiu0ZWcd7IX1Yzsk6Z+bG61H+gl7td2QpUc2TfNH
DMH7M/6kSFd8JdQs8RWOv2GoQu+px6LqRuHv2c6H++lRDDftU98JWwerqdKV
aOS/KxPwfoWm9tN7n1Q/zJqCv6dOiyr06EcDnsgM/J47vJXpyg84ZHrm4HwD
gYr0vnsKwwG/4fn8tpOnx5RaZwn/gb9nahZ76CrFIdbVS7D/WSFJen9+Eb/V
ClzfbMM2emxO69tfLDnE/WX1bKLvv70QmbSWMMnkMxt9IF1cW3kdNJ/nOO16
qsHftvXQP10HEdVkr4de3NCOsfPIICXVk5eXcAhdjgXExTP2lG8kzNAYZgdq
18e+GAvAes8j3GAoii9rfDP0lrt84Ea4unWsMFxP7hQ/UA914N8jStihfkwA
fLka/faVGOGBvpjNID6gItJ1Bxxv93IL0LjUhbFJwvnyKUJg2Jv0N1eKsLh4
vxBI8JJ+qLMHWjlHCBw4b+o5uBfOd/DdFvD1jP+eEHk4X53lZkB2zf4ipgjn
494nADSdGjNpyrD/DcONYOTktJWtKhxvrcEFKLZC/H/V4Xq+N7ACLRvsbZom
PI+4K7+RUQu3SHUA8179bwjVjIx9xKCdq9oR5Ej1H19daPKfAtqY0UCVgD50
x9d3tEQDDs8HBqv9jTpo4D+FPWZG0HX32mnftK2/TB+G5mh8RUsCIZkJptDY
FyoN1Syykj8G7WXdiHxXa93YbAFd/fUTkqyy8Oac9ep99gwjmKJ4JOcJ6Ol7
48i4nAFWbAf3cyp/GkmR8fpz0AHmPBEziPbu1KoRR5in7ZpFJiQYHhEuMH+R
NYPcFB+TlnSDjvj4E9HZxvel7iysXzs6jfwQVs88dR7mmyqnkNTNDlYkL+hS
jx+I7qbojbcvQttuG0cmeSveIL7QJe/HkDTuroieS9BiRSOI3noSFhgArVM5
jEyxSf8RvgqdzvYFucVqWlUdDF3xdBD5b+WSh1XY6vl9H0Cm/96Wng+Hli0c
QGRcSutOR0E7/BtAnN9V23bHQJf/GkSy1F7MG8atri/nC9KV3UaujYd+JDiC
8HP2ychToG9JfkOMvb833E6Evjw+jkT2zNtvTIEWPDaJMP5bsxiWCs+nUm4a
+VPOmzh3C1qN9SeiIiQq55oJLVz4E/EIlX718Tb0CdEZpOi7yqlDObDf8qkZ
ZOiY9t+aPJivXJpBRGmHk2ULoZ3tZxBLqeP7soqhZQRnkIQE19e8pXC8RcZP
pHHholNoOcy/zE4jrI7B/2YqoD9unUa03ly/6fwA1p+SnkT8VFIVOx9CDz4Z
R/B/brw5WA2tNDGGfGevdHlSA23+7Csi6UVbkaFB6ysPIfbdr9MynkGLkHuQ
VJ1OZZ46aNO/75H2u0PNwQ3Q7qYvEG7BqdM/X0Jj164h+kF/WZxeQ0sWMmgh
o+syOt5AC4m/o9WYCqjqv4NWr31Pm3si3vq4FZonsJMmLyF3ds97aD/PjzS3
OI216R+grWs7aTm//svi7oLOCe+g9dibqQd9Wp1/vJW2udG+fapntb9UI81U
8Zz7qX7o1CvVtNhbl9jfD0KHPI5BGtaEZ+sNQyvseI4su5MPPBqBDmNvQ9Q7
Mzp2f4Omcn9CLqLFHmnj0JPPBpGRjXU5V6ah91HGEfHAd1qTM9CzOtPI8eFP
nSd/wfsqeziDND+a5dT9A3P7U78RdnFSftUSdF/0IoLFcKNSK7B+LvwvEjAj
1H2TJZfInYz/IVUndnmvX0s4JLhnGZlsUNwQyE4YSxAmAWl5UDjBAfP1hSTg
eNNQ254Ljk8TZAEZJKvPLRtgLu3MAjrPOPlq88HxORQWwPfek/cBP8ynM1iA
odaVYklBwox/4SwgPD9aN2UL9AMDFkDnSe5dJwLr/42QwMKlO5cui8K8wZ4E
lAbLNo6Lwfm/2a0g7oY1d213wPrx0n/I4D71rWskYf7V/y9iKfgotlgKur9/
AXn7R/nPkT3Qgv2/EO2ByjPze+H4Ou8Z5NGLfd0Z8jA/qPoDkb1bZqCrCD2R
N4zcIe+t/qYMXXeiE9nsV7ybrAo9wChArp/YfVNVA7qL+y2NpJ3P3qsJ7S7d
Q/OTkvC7BqAj277QxrnufN2jDU3/b4zm8FPMolUX2jtwnNbZmdHgpw+tc/UH
zahWRGXbIWiaxSSNcSc1t94I+jLvJG1/1OZNZ02g+R5O0Erck8L4jkKLHP1O
Ezfjn3l0DHrv5AgtWY18ys4S+nPKEI1zG0/bGhvokLufaCGscVjJCWjGh7e0
X6PrK0ztobEdIbSzzVHbfztAVyw2I/332RIynaBvLfYj5qnXlnVdodcpfEOa
rrJ4fHeD582I/ImgTsG95HMwP/ZiHqky+Ges5gEd9PQvIiMfWNvrBe3WvILc
3rS4N9wbjt8RygIEFv3SZfygiytYQUzfHGebP/QP/zVguf5iwKVA+H4SetcA
n+Lpb9uCYK4wtAZ8i/ewaQiB79U7dg2w95loPHsN1v/uZgUdNmfVN0bC+R07
WMAhdKzwcTSsN7tKAnRJ1y3212G/9xX/EGXO4ci18bA+uX0RKZo6NV9ChpY7
/QsR+9DvcjQR1vf5TiOJNXYffifD/BPXCMKR/VkvKxXaP6ADCYqwqdJLh+a4
8YDmZmqRSMleff/7J2m9+9+zqudCy8bP08y2Hr3Ylw/N7/GP1khqGQwvgvPl
VbDQkRHjo3vvwvXraKyl33/TxGgrg/Wqlux06UoDBf8KuP8ubg56ZsrL22IP
YH2Y43o6/xU93hcPYR5ty0mPPlUXdK4a9tclcdH/6WOTG5/Ces5jXPSLsnS7
ahrMlY9z0cc2ajXbM+D4zVu56Ha/n2ix1cN6rnROenuPWundF6v33b+eblD3
cKtZI3TEDw46rVD5+kIT7FfdtI5et5j86UIzHN+ZyE5/abSwZ7wF9jfXZKO/
m6pt7O2AeYcqK71de7uQ1UeYRySS6J2Joadbu2H/6Wf/aH1q+uz1fdCsD+Zp
QzFFFlqDcL54sVnayGfO/IdfVr8HoSnaVHCLbtEYtLDEIG2uTTFxxzi0zLcO
2oJE0tCtH9Ba+gzaku+8osA0tNdYGUJqtA69MbM6v0EzslbkaSv7L+jU1C6E
w32beMhv6HMtAwg3PdhzcRHaqm8Y2cg3RL+4BP0qcAzZ7KjHM7EM7VMyjohU
Fdi5sOTB9Z2fRMTY15f1rYFWd5pGdlqfW7JiJxxy0/YnIlXSbNTGAfP1kjOI
zNK+dEMu6O81M4i8CfV7/QZYn7hzFlHOntNA+GDuajuLqM9Yxjzih3ntmVlE
S+9J1z5B6DmjWQRL2SpdvAXWn107i+iNXb20UwT6ctIMYnBg4GW6KKwP/vcT
MY7T2Sy4HeafsJ+IaV+eS/wOmH85OY1YKKx7uE4S5r8eTyLHw86sDZVatfsE
Yt/x5tgfaejQwW+Io5R8rvdeaAuhUcTVnzwzIQe9W2AYOds0o+2qAF3xcQDx
ELWg9CtBW7/B/157PB6w3g+dF/oe8WMIK7SrQdc+e4UE8F8JNjoAzTd+Hwly
7nvXoAUtTk6jhT3CxAAKbZBUS4viyD3/WBtaeuQVLe44G01BDzqDu5VGLj3N
XaIPbR74npa0/PqExCHoLoNOWqqp7N0MI+jWoC5aRk78H0ET6HdSn2jZc9OH
Ekyhww0/0/L0j6VxHIMOm/1MK0p9OBZqAe23t4dW+n2L+l8r6D9/P9MqtAKi
fI5Dl3p8plXF93T+sIVWuPGJ9mQASJ0+CS15qptGV7rjO3BqNZ/7SKsLX/PC
xnn1/RzppL3sdBF47wq9cLWD1iTd6GR8Bno5qp2WMoEceHIOWjasleZU8YBP
ygNatOstbUntNm3l4mp/1wba678CSe6+q+ehx6ClPIs9231p1SnVNMdrJG39
AGiSUCVt30G/LQ+uQGNOebQlzokf24OhQ7aTaY3vTjXEha7W8/ggydSPtxav
QTMcUxBHy8MXXCOhpyVzEHmR+oPvo1fPP6AQ+durLoZdX+139C7SeKd8rvQG
dParMiTJRfKNMHk1/1uOOOy5dSeSutqP6x4i94PXfzYJemBzOfKnIsLE4Sa0
g2Yp8tLnr2Rz2mq/m8VIovqFvxoZ0KaGBYjD0khbQdbqei7kILIM26JNd1b7
WWcgi9fag0JyV/enlIi8PGhg8SN/9TysriFULvre40WrOWlc62SLMuurktX9
C16jySYWdymXrdY/p9IWLLffy773//NMp70QSY7YcH/1+0m7Q6P2cdoGVK36
Tx7NPidEafTRqh8W0mRc5znMn0B7lRbTfu9x72c8hSYzSmgNPwYfytFX9/++
hEautIq7xVj1y2KanW+z47r61fcQiPfT0NXwefH/+lza/FI17+Cr1fU5ZNLq
GfIjh5tW99ecQCOH59XWvF31hD5iayCSuLtldb8jZGQPN/lMUttqnnIbmW9h
w1g6Vvu7FSB1iYGbPTpX7+NoKZJg9XPiUxe0/8sKxHbr6fqDn1fXx/cAke7v
SavqXX2fHA+RuRwzrx0Dq+MfPEKeuzbqxw+tjt9UjcTLgG1/h1ffy94nyPHJ
B7OnR1fPZ/kJInV/T1PHt9V+CTXIrO/tbO2J1d+XoRqEoSF4qXwSemyhBon7
F3t468/V99BZg1g/J0lGz67uL7gG2RXh92fu1+r8c0+QGYOJ1lMLq+d34AlC
53YsfPdntf+xauR668ermv+gq3UeI9ZJh82LVlbXy/UIkbSulxFkzSfcWFGF
/NyqwRK2Ftpr/wNk4YR4mcQ6aLJ/JULKWGfzYj20gsY9hE+0s4KDF5q0rxAR
sqXZlmxczSdyEPGMPA5jAehsgUxEuud61Y/Nq/VqSYiCqLdDgvCqH8Ug6rbH
uRVFoUM0gxAsQ7u6XWzVf7wQgx5pZ58dq/XVroipKB/fZslVbz+LWNv+fvpY
atWvfRGHjL7TNnugscwwxK3nxaa/e6EZsTcQL9GyZxny0OL1yYi/bdI5oLg6
XiULCckI3DKgvDo/ax4S3eNYH6oKPU0uRsiihp4SGqvja+8hqbaKW19oQrdq
PUCyM4ReuQJovoFHSIXoqFiJLrTDAB2ptn3XZKQPPZD2HGFkPPT7YbA6f089
0ioa/k7BZDW/3YhMie4IemwNPePVhszbcsjYnFhd34t2ZDlj6sMfu1WLdiA8
2+hywAl6czP+/0N2+d39LtBKkl2IWGZcRKgb9IR/NyK/7URvw3lonc09iKqd
ToyrF7SfbS8CMvfs5/BeXX96H6LfyzdY7Atd19aPmGxbiDPyh7YOHEAs7frV
fwSsrmd5ALHPfDkcfxWa8+Ig4tpbRlYIgX7xYRDx2Jas1R4GfXnPEOJnd2XM
O2L1vN2HkKBMpyTBaOiF20NIZK8h9jgW2q5uCInfpjRhfQP66/shJMVOOPVP
AvTxjiEkK5Okl0GFvlE/hBT0jk4hydB6d4aQ8m0t6f03ofXPDyGP7B4dDL0F
fWb3EELPzJzdmQl9vmUQedkbfrvhNvROl0Hk3TZ3I9cc6CNjA0in3bHf6/Kh
660HkL7MA7nFhdBx7v3ISO+OI0Yl0AYsfciPbev/TpRCm3j2IOFNHZGn7q3u
t+MTInIpm7+zEvqAUDdSKeGeZVi1ev7qHxGDVjWZZ49Wc9UPSP+VNY+Un0Dj
/7OP+O1p0S56ujr/y1YkL8zVhsKAXop7hWjuU/rKVr963mJ1SPvnf14BL6D9
m6sR0v7kaKem1fc5rYfcHHQQ6Hq7+r6FSmjy8bLZxi2r39fnGtqJ0frH+zug
BXa/pc0kJuiWdEK/nW2jRWMnWsS6oTPIH2jbf0idSPy8up+WLtqjtJmRdX2r
rvxMO6xPv3hlYLWfWh9teCZmeXoIWkRhgBZ42yLW5Sv0+82DNH7jHZs/jUL/
bhmkFS9M3DH5Dv38xBANy6+Wq5+AvlgzRPt4NPyJ2hS04cQQzWP5yH+lP6Ej
fw7R2O5ubROfgz7bNETLsBq1TZ5f/Z4uDdGU1j4YW78ILbYwSHtdEeQT9Hf1
9/TwIM3BzpA0+w/a6dIAbX795rjTpAKYT/TRbjwa3NLDCu2Q1EOTdCrLNWWD
Fhjtpj3lvbzvxTpo7q+dNLNavacanNCM+Pe0b258B8u5of1ft9BCBHvad/JC
D7x7RdtSV2h/cyN0th2dVu7h/Z1LYHV8USGt5xUn6y8haGwjDfH26bxxZuvq
+KrXCOeOHOG+bdCdjHZELUBD8dVOaL8r/cg7KTaa5i7ok9JfEOf3rQYVu6Fz
n4wgVFk3hzRZ6DzTSWRPt/LEhn3Q0zI/EUbEyqUwReg72Cwy2ZeScE6VcIjv
7d9IxHXHrQPq0ENFi4iounyhuSasb/H9izwYXlR6jcA8hf0fYkh5QUcw6Jsn
lpFBhGJ4XwfW7/NdQfy/23ZK/Qfdt4cEeG5KO6YfhG4OJIF83bkfvIaEsaQK
EvB3VzzyxJgwY+NrEjBM9qhwPAJNe0YCovS7G7nN4PiOJBKYHBm7+NAc5mQD
EmDwSnXYW8H1nHi0glDVnfZzHIf1bWnLiPOp7JRKW5j/1vyHqMb2/j5+Eub/
Zf5FOB6I2Kx1hLkSfRH59NmqpswZ5mr4+ZSuTd5qdRrmr7BfSLBc+xXSWWi7
3BnEzJK3r9gd1g/GTyGSwcboMU/o8ePfkMbWlywFPtBv135Ebi2ucTpyafV9
/KMj7ju1GxYuQzv/YNA2+jyNNAqG/tr5lTacsTA6FwodajFFe/Ri/6GscDi/
Y94c7fiWCq6fMTBv0luhyWI/3G/FwfMx8WWlL7vJvNNNgOft68xGz63JI6ck
wfERKVx0vy+DP9GbsD67moduwL392Lc0mBc+56OL7LetomYQHri0uJE+YZcm
qHWbsAPr2k10emSn39c7hMVjBjfRyfc2dcXnwXpjqgDdsctUQ70Q1idsFqTv
Z4m/NVhMOJviIUjnkHnzN7YUzp98S5D+yYzDTuUerO/BXRr4H723EuaFnoL0
oLyw7VFVMFcXFqSbNj8LUXgM19t6U4C+c35psPsJdMX4Jvqc2AHda7VwPSKC
m+gvD17Kk30Gz8NUgJ+e6lXF1vkc9qd+46OfTfvpGtwAz1NfhpeuVSffKP0K
1kfKc9N5x8/taX8N+58e4KAPbSqODXwL6z0wNnqV1si4ZAvMRY+w0CNdJA6/
a4P+JvyHZh3vUH6pA9bPzU3TZB5n8u74CB30vIe21P/Jq6kbOiTlNZKtaKG8
rR+OH21dRC4epya9HITrGVq7Buhda/nlOQxN9VgPvnUcqq77Bsd/TNwElPwB
4jYH9387egdI3OAQNDxP2JTLVwLM5YQ+c1iE93dUdxewUM8l9f4l7OU8IwUe
NTdo2yzD/FOYNNjiNBL2gVRIjD/4aw/wX1jXcHQNYZK24V7w6cYetndshENs
w2SBpoSRviEHYQf5LDmQUe0e9ZKT8LRRljxYPhzfqLOBMGZ4bR84+eXe+me8
hIX6pRQAw7/NUJOfsJtYsALYwTN7/bEA4eyyJgUQlivQrLyFsMHH9Yrgi7oq
T4Uw4davWopA753VEVlRwtX/K7K+47n+vgeAo/ggSSXKXimlokTGfSdJkmT0
kSQrMw1EqSQ7aSBSadgRKmWEnHdWUiF7FLKp5CMNovTr1z3vx/fP5+Occ++5
5973C1kHZUbq/hOR6RJ/nf72jDKD60dcvZz0X0tZRCoznC8VL0iU/WufvivK
jCrZLjNxedp/1Z+4QuHvmOvLab8mAcqMcCPplkUr6fpVzsqMkT4d4cur/nrD
CV1lxo4TDhb8SrS/e8LKjPv8odfD1/61+4MeJYZAStobrvU0/2WSEsND/YVo
kBqdp/5eJUZD7Qer3+p/fe3oHCXGOge+26e06PlXO69hxPxY9W6CQfuZTlvN
MJfzsBvbTOfr80uR8bjwctJBvb8uMVuoyFi8M7dvWP+vlbjF/tzXiQnHnh30
vky4FRg2r08faNj919k5VnKMEof4TCNLev60JbIMmamSkZdWfy0gXivN6Jeb
faTcjvZTtlGC4XIy/GiuG+1ffXQB48W8rFylw7S+hU2AsSK15luWO90vQpiX
8em1gE+qN7UW+UmMHNcWSvvQ+v7lYyR7ymzq1knq+1b1xHPpVd/YMzR/3ZXP
0FhUAAsCafxnzjSoGL+ZuRRMz/stiYN5ZWB645yzdD7h8v8wv58UDzh7juZX
OM5h7hbYWDbrAo1n2s1jFqTazvK/ROtTLs5nnqpLDvGJpvsNDggyU1rbdgxf
oedR3yvErO2aK2Rxjb6fzEfCzMkBna7ncX/dXTCymCnz6fgdtVt0vS4eEabh
16zDafE0P45XlOk93aMqnETn5/yfKPM2h/Dv0BS6X3mBGLOKx/D59zu0v5XO
4sxxgYAIp7s0X2RanCm6OH93SyY9zzxvCaau5EdJvfvUIc0SzMPyUsN52XS/
H2KSzGur/s1emkP7H94uySxVCfe5kkf3e20vyfyg+VSbs4D2u+KPBTd/5fYu
ovsfN5BkMgwU6vuL6fmU/6znbGJ9fddTmt/SKsGMtIi2qyil+/edlmAW2VQp
qFTQfhv5JZj9Tr8+J1fSfLnz4sy5h9cWLXxB42ZfxJiq3s6BQa9ofx1bxZi2
vjcNvtTQ9bTOiTLDg+oX7K+j+f89FmHmhHO9bWig6x1tWsLsiNJM1mmm59F9
t5jJdd3d7VEr7f9dmzBTKSF1ncwbml9SKsTck/ZmOqqDzsfx///e5Ole8Oih
+30UW8hsKT6xq6eP5j97Pp/5u/y+mMkg7c/cQYBp2rD4ntJHur7Ie17m5OhI
zX9faX3d9DTIfJeOtZmgjhT8Btt/mVu//kF95p8R8Jp9QX7jT2oBu7dwe07p
6P0ZarYEbaha8D1fgj39rztutZPPS1aeuTSLurFmmOguvzLvMPdf+99XniCH
17xs7eSlcSGOn+Sq6u/4HXNpXF/9z/9LRMUF5v11SbMOB+ODrqvSqgV/rT0h
MZshaHh78qYg9ZdaTgYxayzhE6b5/Lv+YThZcp/zXUId8YCbEWlHTEZE6fpP
enkYRS6eS6wk6P5to7yMviNpPa+kaHxF8xwG3/GOu5qytH4ylo+h6jffM3Mp
ddj6uQzbED0N0eW0XvLRXEb4hVMc51fQenZ+fkZudPbLKUXqYwb8jM64gcsH
1lCXufAzdCQuKM1bS+vZXfkZdxLX1uao0PV79fkZc5a2u1moUXPx8jPc08/w
/FKn+XPvz2U0r5RPS9SijlGdy9B4UK2rt5HOQyuVjxG/9mjvh020PmV6DmN2
/hL/CF3qQ5pzGK7qJeIqW2n9eideRm2x05O2bdQ3T/MwrpXnfJfeSV3h8w/j
l55lTKUJXf+ZDRfD/iXbWrdd2K86J2Nl/Y5DuXuox2s4GJG7vvLusaLnlTvP
zvjaGpf+y5rGxzaxMZhdQ316DjSevWWamI4EWLYfpr7LHCOPjyyfPO1B99fZ
O0LEvtRekfGiDjMbIoM/ROvdTlAbWb4l20+XHRbwpR5VbSDZbK58eX7UbFNl
RDB4XsaeAOoE3Vhy4p/8rTNB1Nmjj6Er3GogKZTax/QF6PDPCtp6jrokowHS
ou5KjZynjuNqA75FxszIS9SK5R3gce373vVR1I5Hu6FF9NaP9mjqEc1e0Izf
fNUvltqa2QcJMh9UZK9T9/zqB847kQ3Pb1Df+zUABxTU3A/epv5YMgivszrn
zk+krjEYAhWl4My8ZOrA20NwPWfFNss7eJ9Ph2BGtX5wJp1aNHsI7IuOBydn
4v5eQ/CcSMjo36dWnjcEiqUVT0eyqSFoECJ13fZF5VCrNw/At+fzp9fnU9dx
DYDl9oJrbwqoH4j2w9Naa9UzT6h5hPtAzpSzSZaJ/tkDoxam8w6VY7+S78Cs
YzJrfiX1nXMdUGATb5Bfhe+5ux0CnUZCftdQMw43wSKv0J9RbdSGx8qB22H+
SZ631Om3AH6a3Zzw76SuepILY5uXeU++o7Z9nA796x6NH+nF96B/GdpkiftQ
P7W2QzCpXlj1yXoI81sSScksM7eW99T+H7JI7pfO4R0j1AJCOSS9z8Xp2Sh1
d0E+udn4pU/rMzX3tkISWe5nl/sF5/WwiATl8Lxb+Z06squIHEuOsUqepHYv
KiQHoiXfiEzje1N6TKyDMnZf/oX9rsohpkfXN/Ow3aX9qGQSvf0lpgEc1CVm
cUTDbHvd5GxqNktrkF5n92qIh3osOhMEZUf0bfiojflygXvh8coWfups3iIY
G79Q+mwhtdjtMujvFd5IhKiz1J5BW0NSce5iavcHz6G6bJWGoii1A+dLKHlU
8DhZnPqaejXkJm1eLypFLWVYC+mXax9dlqH2lKiDCM/+ewHLqKs66iHQ/sjK
HwrUxUkNcMx0Kt1dkXp0dyMc0AmRH15Nbf6zEazXCqTYKFPPjmwCU5kb0q3r
qMcXNIPeAvl4I1Vq+ZBm0OB4KFa5Ac8z2AyrxzXjiCbOU60FZHorhfMI9Z3j
LSDUYHJFUZtaLq0FeMs6FqTo4HwrW+DXQ+dI0S3U2k0tMJY4Pjd6K3V/fQv0
R50+z2uA82e2QFsAN0+gIbXLjRao9ogO/WGE9+HcAiV2ErM9TPA+ZFog1+Ru
wLAZdXBNM6RvUvltY079xrkZbig/9W21oH70uQkuSRtMGe2l5nNrgsD5zccr
9+E8GhvhGLvtN2KL96X4Z56fP3jm2aO9GsC6x3tM0ZF6KrMeTOvZDqc4Uys1
1oFe6fmPogeofza+Bo2HQq7RB6mHu2tgdWLiIO8RasGaVyATpegQ6IHv4doL
4PHQsfE4Rp1bUwEbOhmPxE9Qh82Ugss2Tc6Xp6g3LGBCpbRKpkwA3s/uh/Dt
otJMbRC+93mpIDelaHIqFOMnLoKZk0LKsnOs9x9MAhuWTjSex/e6NYE8ZMgY
+F9CMzJId4bELcUo6sjAh0RAWHSsLRrXN80jG4OEN4fEYv8xBeTwfwtjla9T
dxs+Ibf3CrzvvIFxfyA1z/m0wm9TF6g8JT/X8USoJmI/aiVkZQJnb28yvr9r
JcSSj2N9xB3qttIScs5n5qzmXeqR3BJS0D/1ZigT34tXCRkynlgVc586haOE
CMEXf+2H+P4qmERPYaxxJAd/TyuAeF8Zkb+ej/MlT0gK+/sTWwpxPfZC0nRo
oPrzE6w/lU9mvemRvM3E+87OIWv1ujwNSvF+U7KJ3aM3z76X4/ssziCREq2L
kytxfmXJZPT7a+b0KzwvBBLx/dXz02vxfvJOguHrKodd9dQJulchI62U914L
xvuywNkix9y6h1plYwnEVjy4y9uP8zpbBpVKWT/zB/F7UlsBcjypSfNG8D4M
XkB3YexoyXfqind1ME8+etOhH9RO7fXAuBwRs+Qn9dqqBjg0c37o2Qz194xG
uHkgTMOTPeOvvfyb4FVL8EWJ2eitzTClE9D9kou6eKYZVjw4ve44D/Xi1BbY
I3oyVJaP2lC9FcLOHmt/zU8tUdQKBV88FX3nU1vJt8GQzZEzywWpq3zbQKja
raFJiFq+uA22bHBZGrCEWrevDbxSHHxWiVEPjrVBsoDdq3YJ6qY/8QbffRKh
0tRtRW3w0vLQ5FI5au1jbVC64XTDM3lqF8E2KBC6mOWoQL0iphWyv94M5VSk
tv7aAukNWbapq6lb1rVAfHaxxhZlnIdJM8ReqhYcWEfNbfjn+3OwYzRYlfqw
TCOEGoxUyalTn2ysh9PLfyZVaFLzWdeBFxffaQcG9XBADRzsF909exO13PcX
4FC2UjllM7W7UCVYJWjO0dXD/btLYbvV3qdB26mV6rNBR8PtuqwRtb9wHGgs
PnW03JiarT2crGiKWzbLnLouM4/IPMpgT7ag3iDFJEsii97q7MX4vHLCbfgm
ItCWOszhJWFb8cFVZj/Gn9SQiX+mNpc5UiccriOjAzwS9i44j4F6Mli+ZJLd
jTp9UyPpSlRoSDyE7yGkiTSfUc/a5E49+aCZVO/bFtrjSV1b1kIqNPfYBnhT
qzJbSfESVw1pH+qipDaSM+EjWHqSmsOjnWQ0h43anqYOVXhDknKuVbH5U49V
vyFxUelJCYH4Xva+JVFHCny1Q6hzW96SsB1V5t1nqTUYHcR/ZZuSfzjez+UO
4sMzzCt1kdq2uYMcGZrofxpBrcjVSZye/fPU5jLmL+0k1snC13/H4H2u7yTm
AcuOxl/F+1PpJDts1HZsjMP7leskumTrsnc3cV6cnURLdDf7mXjq+20dROWH
01uJJJzf7Q6ysvVYHjOFOti8g8jkhUZYp+H9c3QQkehY15m71DFJb8kCjzub
b2dRO6i9JTw788UZD6h9S9+QSd6W+tO51N2P28nY8ECm+GNq46XtZKjyWwgU
4vnD20hL4CKNX0zqm6SV5E3tSvJ9gfdn0US0tmyz+u8VzjehkZRFECH7Wmr9
gQZSKycfvrWR2t6pngwbTXgs6KRenllNDl//uDLkHeZLvSLf+t4NTPTg/rEv
CMeJqj2dg9T9YZVELPn6pvQxarGkEpL06eK0yBechweTKGwIzLv4Dd/rgydE
teaAwtEp/H045ZNiYZu+gZ/4/ejJIZvtzW5Z/Mbv27GHxHhCcz5jdibdv+su
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
mieI+V2BRD/ATzZqCa7/PYBkLfr2U18W8z+dIc+KTL/kL2Xl+5Eum+z3cssx
/uw0mZ/h1sK2CuMXTpFjjN4HBaoYHz9GNjq/tl9ugPHjbiQm7PbqV4ZoAVcy
fPfQ1KGd6MdOJHJkzuWcXehV9qR/7tt95rvRUzZEfU2Gwo896Kq9pNdDv5Rh
g64zI6rRwhd77NCCxuR87qBFsAN68TbS3Zwnt8wZ7atDVCaCx164ol02kLDF
u4oPHkSPKZBOddmweUfQbLPI2r3jZo880P7iEOpbKvmvF3q5Ery5Fflx4hjL
G2DNU5vHcSfQxhshuHt1EPFF9+tAG/uMUbcfumALKMrWiAQFoKX0IUD35uDS
YPQGA2hxdHtUFYr+uh1WnNXwczuHttgBfuk8BvwX0A5G0PiibdHDS2ixnbD8
Y1qPWRTrvnaCL9/xe9+j0Vk7oW6V3onrsazz7YSlOxdt0brOmt9OOOneL/Du
xv/Wr43K6Qi4jfbaATI5gelyiWhdQzjeZOL1PBndZADV36S0D9xBK24DKeGx
OXPvsvrfCl4bnrY+yEQbboEXey4lm95nvZfN4HlTUfNaDms+WlAJ01ya+eh0
VRB997KhswA9qQQV0q4HZJms8ywAobTU6/erWPupkgNVXo4mr9A+hDx9v1n5
aw0rrkNcFHur1BtZ89lGih5KTFZ0ovV3Ef7GT+XO3WgZc7L/a3EEbx/rfnYT
PrW9y4yHWfPeS6yLr5q/HWfl2xEdg+0cJt/QHXZkadvMvcoJdKQ94XZ6tEdr
Cq21n4x8ceR89BPds5+8DljycNlv9GkH8mhejdUt9vvU8xxJ7C1/7oWz0dcc
yYmVKrlhXGghJ2JVOGQzw40+50S0t96Y4zUH/dmJyDYbPX4/F73TmXDt59hv
I4COdyYfxvL4mxege5xJjZ9rkcEi9BIXks0n7lQijN7oQmLi6uariqB3u5C9
+Wqu0pLoPS5EpuF2CZ/c/+q5bE0PBsqju53J+0+ciyeXoy87k+pTheWHVqJV
nEk2z6EjfavQ5U4k5qqU6B4ltKYTOb60qbJ2LTrRkVjmnPXUXY8ecyCMTZoS
RWpoRQci/Xr0xRoNtNF+MntfkneqFtrangx/+FdadCPa1I688uGpidyEXmNL
7nOBD5cuengfuRzjLuerh9bbS7xl5Oo+66NdLIhFdusp5+1o83+JFuP8ss4d
aEFTIlnNaDQ1ZvW3gwwOpa5g/MuajyZ56b2nJWc3WmoZuTdrbqCCJdpWALwk
vdoFbdC52mBxb1lIuB06bCtoar5VYnNA8xkBx26dsI8uaO5/YbD/2zo7N3Td
bnjhefddyyG0uyVkse07b+iOHrGCyEsCamWeaG0bOCpW0avmjS6yBfOM45fu
HUcz7UC8smvgmi/66n5g23U5iv8M2s0B+nu2kOAA9CpHeH7kx/CPINb5HSHj
V1bMkVB0sBNcOm+rPRDGeu/O4LFEcMTyPDrOGXalPb9adxEt4AIb1p/arBeJ
Pu4CLad0VnBGo9tdwLuMZ37FFdb8XUGQp34i8Br6kCs82nmta9MN1vtyhf86
5LOeJqDbXEHxQN4Jcgfd7Aovs31tf6ajS13BdWLz1ieZ6ARX4GbMWX3yPvqI
K9wJbhBUf4hWdQXdV9enJ3LQ4y7QN9+uNz8fnewCgRbLX3gXore5gFT8fw9U
itEDzsAcyI/9wkT7OMM+Rb/Tj0rRnM4QV8i3Xek5mt0JNrA1Kf/3Au3tCK16
Nxbfr0b3OoBgk8LgygZ05n54JPK5+kMTmms/mNgV5NxtRdvYw6VRvYBlnWgO
O+DhcRCTHWa9fytI37lyVu8HdJcl6MWOv0/4hD64B4JlAx5LfEEHmsMMuW0q
MsN6n8ZwM9hRvZ3tAXW3EWi+UpS6Ngu9wRB8LJ58WsSDnr0VhOIDm5rmoMN0
IW9g25NofvRyHRj3bAubL4g21oTIwvgjdUJoJTVYw+ZsHrEErb0OavVWEyMx
ltfAwYvfZOdKot2XA29TMW+1NCsuA3dFgj+Hy6HZloC+3fa2bcvQ/vwwmLbg
KfcKVny6OHi0PfW5IstVWrLrEy+ErmF5SqvslMvRLWtZ5iS2ZWssZ69n7cdL
ZrgntMvVWOvzkVs7mcsCNVjxOUQrNoR/E0GXcJI3HYbffm9k5U9p/R9ZccPY

       "]]},
     Annotation[#, "Charting`Private`Tag$68322#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], 
    FormBox[
     RowBox[{
       SubscriptBox["\[Epsilon]", "g"], "(", 
       TagBox["\[Alpha]", HoldForm], ")"}], TraditionalForm]},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Generalization error\"", TraditionalForm],
  PlotRange->{{0, 4000}, {-1.8615085806139575`*^-8, 0.04317508931493793}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.756123955374552*^9, 3.756125630269268*^9, 
  3.7769667474377413`*^9, 3.776967007744855*^9, 3.783324146739813*^9, 
  3.783324821157423*^9, 3.78332504186805*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"47dba9a5-28a3-4665-8c43-a16deb8dfa5e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7561255636799507`*^9},
 NumberMarks->False,ExpressionUUID->"fdcacb41-da11-47d4-8bd7-959615462d97"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Eta]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"IdentityMatrix", "[", "M", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"createReLUAssumptions", "[", 
   RowBox[{"M", ",", "K"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormulateDynamics", "[", 
    RowBox[{"\"\<ReLU\>\"", ",", "\"\<ReLU\>\""}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "matrix", " ", "of", " ", "initial", " ", "conditions", " ", 
    "for", " ", "the", " ", "differential", " ", "equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rinit", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["R", 
        RowBox[{"1", ",", "1"}]], "[", "0", "]"}], "\[Equal]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "3"}]}]}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Qinit", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Q", 
         RowBox[{"1", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0.2"}], 
      "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Symbols", " ", "of", " ", "functions", " ", "that", " ", "need", " ", 
    "to", " ", "be", " ", "solved", " ", "for"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["R", 
       RowBox[{"i", ",", "n"}]], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "K"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["Q", 
       RowBox[{"i", ",", "k"}]], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "Rs", "\[IndentingNewLine]", "Qs", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxAlpha", "=", "400"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Solve", " ", "the", " ", "system"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solveEqns", "[", 
   RowBox[{"Rinit", ",", "Qinit", ",", "Rs", ",", "Qs"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", " ", "all", " ", 
     SubscriptBox["R", 
      RowBox[{"i", ",", "n"}]], " ", "in", " ", "one", " ", "plot"}], ",", 
    " ", 
    RowBox[{
     SubscriptBox["Q", 
      RowBox[{"i", ",", "k"}]], " ", "in", " ", "another", " ", "plot", " ", 
     "and", " ", "a", " ", "plot", " ", "for", " ", "the", " ", 
     "generalization", " ", "error"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["r", 
        RowBox[{"i", ",", "n"}]], "[", "\[Alpha]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"{", "Rs", "}"}], "]"}], ",", "Below"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-teacher overlap R\>\""}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["q", 
        RowBox[{"i", ",", "k"}]], "[", "\[Alpha]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", " ", "maxAlpha"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"{", "Qs", "}"}], "]"}], ",", "Below"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-student overlap Q\>\""}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"eg", "[", "\[Alpha]", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Generalization error\>\""}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      RowBox[{
       SubscriptBox["\[Epsilon]", "g"], "[", "\[Alpha]", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7769664520481453`*^9, 3.77696659456971*^9}, {
   3.776966762826371*^9, 3.776966773688962*^9}, {3.7769668199669657`*^9, 
   3.776966834664878*^9}, {3.776966897460176*^9, 3.776966904344651*^9}, 
   3.776967075193791*^9, {3.7769671694334917`*^9, 3.776967174214793*^9}, {
   3.776967470959879*^9, 3.776967474647135*^9}, {3.7769720334003143`*^9, 
   3.776972044313895*^9}, {3.7769720998695927`*^9, 3.776972103809375*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"9e57b49f-af27-4735-94a4-c3e7a2666efa"],

Cell[BoxData[
 RowBox[{"{", 
  SubscriptBox["R", 
   RowBox[{"1", ",", "1"}]], "}"}]], "Output",
 CellChangeTimes->{
  3.776966904948205*^9, 3.7769670552395573`*^9, 3.776967102485342*^9, 
   3.776967174799036*^9, {3.776967320167753*^9, 3.7769673240522757`*^9}, {
   3.776967447106009*^9, 3.776967476076847*^9}, 3.776972053966156*^9, 
   3.776972107553769*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"fbd50260-92fb-47d8-8ab0-fa3c91265167"],

Cell[BoxData[
 RowBox[{"{", 
  SubscriptBox["Q", 
   RowBox[{"1", ",", "1"}]], "}"}]], "Output",
 CellChangeTimes->{
  3.776966904948205*^9, 3.7769670552395573`*^9, 3.776967102485342*^9, 
   3.776967174799036*^9, {3.776967320167753*^9, 3.7769673240522757`*^9}, {
   3.776967447106009*^9, 3.776967476076847*^9}, 3.776972053966156*^9, 
   3.776972107555735*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"7c896520-847d-4081-8a60-efbe42f76607"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", SqrtBox[\\\"0\\\"]]\
\\) encountered.\"",2,212,10,23748767053633078677,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776967476148058*^9, 3.776972054002225*^9, 
  3.7769721075890303`*^9},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"813adf53-afcb-43cc-b5de-d2e83ea7e743"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
P/PABlqyHzw6+hOf16qEGrNqG5gSTU8nsNuKHg/EsNmCl1uhK2WEQA/v1+1d
+tcWTOeWWHeNEyjN+kiXSZItZKXOTithp/zvdvyr+7ZwYpWUQMGOTbJn9863
hc1ri/xF2EGxf4jpNltQjurdqTtBIMPLsu+H+OzAKJqqenGSQKy26S4td+2g
okyS7+40gf4Ksh48+sgO2KNNvMuwV7rpP25m2wH3mVv3urFnTRSMzlXYweKp
V7oCMwTq1e1Qqu21A1awP52E/f0+65a+HfZQthAcfJ1BoKLY0z3thvYgJqLX
pzpLIPK97WzlpvbgoJZubYXNmzkk9dDSHt5vmyj2wfaqjr7mSbYHzRWdpcfY
Rxa+S3B52wPltUgFyxyBnlhcCjgbbw+hyxMXy7ATD77Z9brVHvr5OKS3/Ucg
Ndk49KDDHrK315gIY8+fobhc77KHlURJGzlsAzOuSuN+e/DNGNhug80VbU2Z
Y9hD7uWCTS+ww4nVl5LbHeBUTKKlygKBfMvPGKTrOABJpWjIfJFAxZYNLN0G
DtD0gL2Pjv1rxaB4p4kDROstvA7GDlSk/C/GxgFshX35M7Avv4keDvJwgFGl
XvcR7MiqrgDzOAcwuVr/hv6LQKk1Fx7ydTrAemHwfoclAvWQ/xjpf3OAJ9xr
2Z7YezdFsN/sdQALnYH9l7Hvq6W4sow4QHi9f2Uq9uPaKrm5RQeoK4n43o6d
U8/Z2LKbDP7bF18r/ybQ28an81FWZGAdeSDAvkygl3vaLoTYkcEsOWk3D/YT
6sqslyMZkhdkWfdiR7PoE2auZJC5W5Mli218+vfUoUtk+DKlLGGNPZlFGqlO
JcPTt8o8edg7o4iu5W4y7DPgQhorBGLvEjCb6SODwta36vrYywfVvw4MksGY
+5SSOfaPdymdDRPYT7uY6NhZv1U+31kmw3efHT9jsJVpiY2yAo6wO29mXxu2
i+apShdzRzANCGLW/UMghrhAXaG1IyDpUXYTbO+ty03L9o4g+yJr3Ro7uPl1
b5SLIygNx9S5YccZKaxmBeHxZf6im9gldvKKk2mO0J7RcqABmyVArow+6AgN
AT6dJ1bx/ljsqn454ggftq3pKmJzKS5+WJlwBNHfEW9UsHetv/oWPe8IY/oD
AXrY4uEnfmdvosCZa9e9nLH1447LTx2igMwJGXoydlqmbLErnQKvGC//ENgf
uh0/PPCgAO9Ov32L2Atbk3o6vClQGPzo5Aq2tvsKs9IlCjjJ++mzruH7J/te
jyuGAlPbi/fuwbaoMB7PyaUA5Z9aGWVs/hZ/QcYsBUjgnhKOrfo3S0pkkQJx
L1Sqb2B7yPSqmC5TIHxW+GcMdn0C0KqYnSDj3DHeO9gXzTiKY3mdoMS5cv9T
7M6BVD3pE07QLNy98h47/r/Kq17+TpDas8SxtpHXHudgfckJqu+elWZaJ5BO
oaOK1hUn4Hufqb8Jm92Tg1ko0gnS7ZqucmAHTxqHtibh8T9GObuwqYNTl6VK
nKAnvkroKLZSq0Dw9IITzOemlJljC+RNW3377QRaYtf1rbB/xbxVrF11gsNA
G7TBLiQ5/bnHSoXCuyLLZGyx+oIg7Z1UOJYjsOyGzVOpGZh9nApjcXYQij2a
fdGP5k0FmTFF/ifYpvvWf2T6UeFl/5LjM+y6W9c1J4KosGD9KTcT+4lv8h56
GBUGS9vlcrHJymXlrolUMMvbvacE+8fn1XWPEirk3RH6pwH7y++wyIsrVBh+
WVwyiq3uyjVbvE6Fm64ht8exX/Ulmv9icQblCUH3SeyEmqcS/pzOMFs7z8/A
Nohp+BSw1xnuLd4/u4jddICTO1jZGQLRc75Nf/H/WyMh5do1Z+ApfZW4F3uE
WtEcdN0Zdj3OXd2HzR45zOIT7QzaMW7kA9haDSfdHROcoYlH+7AIdpNmj4r6
I2fQ2zqfdBi7Q+vgFFuNMyxPz3Efwx4ilZyJYqZBybM7EWexN7n2e19lo8FD
wZocDeyDN7dkBnLQgK9csF0Tm/rJkpfOQ4NYScfdJOxJ7b+jJGEaxJ26HaOH
Pa+jFcelQgOPPe9FzbCZ9b8P3QqlQWd34W5n7A9VJqK+4TQwnmFio2HHSX12
NL9BAy3pgdkNC23/MCwUR4PPyWa1dGxoLh4tfEADKTeKpQd2qHb8ZEcVDRIz
P6pfxGbS0prfvUYDiVQT4Wsb+aXvj60yuYCia/7whuMOI58BVhewWe9+FraR
v/nkQiaXCxwKzjwcsZFfL/rr1F4XWNOzFryxka/+d9lK0QXKBV80/buRr1LC
nBHoAsx+3eQUbEv1scZvIS7QbXuK5y72K809iTzXXGD5kk/Vhml6QWJh0fh7
Ppd33cP+bKWsTb3nAmkK4iXp2I/86hOPVLrAx+AdHx9hq+d8PVzGRAeZLS+/
5mDfz988N8dKhzGZGP9c7N8vFcolOeiQbkHdk4edU5aqk8ZDh60v/meZj72r
wfbCFRE6DOuG9RVijw6Olp9Vp0PKbePhko31jewOv6xFB703UhGl2KnjWrql
OnRgG9ki9hpbj8juFzehg/fJSucy7NJVD1YuKh20uw9NVWDzMmU0q9PpwMLC
FPMG223T56QQDzq8lvx+pHKjn1uPSxB+dNzPWI8q7KBtlPnDl+jQ+4S24y12
J/edCvsrdEhoVi3YsNTO+vC7YXTgsZQXfYd9Y/eSbnskHf486/93w4kfPvys
uUmH7lMdsxt+EJgaWHSLDvoupkbV2CU9Z54mJuO8Rzn8NRv34UH4qulzOrS6
Jqe8x541ME3QfEEHA8/MpQ2vMouLK+TTQfiPmGkt9k7KJyOBUjr83unCU7cx
/13pExwVdHjYJemx4b7UZ4/vVNGBs/pQ9Yb/DwafPNA=
          "]]}, Annotation[#, "Charting`Private`Tag$7555#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[Alpha]", HoldForm], TraditionalForm], 
       FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Student-teacher overlap R\"", TraditionalForm], 
     PlotRange -> {{0, 400}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SubscriptBox["R", 
        RowBox[{"1", ",", "1"}]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.776966904948205*^9, 3.7769670552395573`*^9, 3.776967102485342*^9, 
   3.776967174799036*^9, {3.776967320167753*^9, 3.7769673240522757`*^9}, {
   3.776967447106009*^9, 3.776967476076847*^9}, 3.776972053966156*^9, 
   3.7769721076976547`*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"d217ce5f-ece7-4500-b07e-1cb625149111"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
HuvI
          "]]}, Annotation[#, "Charting`Private`Tag$7631#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[Alpha]", HoldForm], TraditionalForm], 
       FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Student-student overlap Q\"", TraditionalForm], 
     PlotRange -> {{0, 400}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SubscriptBox["Q", 
        RowBox[{"1", ",", "1"}]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.776966904948205*^9, 3.7769670552395573`*^9, 3.776967102485342*^9, 
   3.776967174799036*^9, {3.776967320167753*^9, 3.7769673240522757`*^9}, {
   3.776967447106009*^9, 3.776967476076847*^9}, 3.776972053966156*^9, 
   3.776972107796706*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"fc32baea-e3a2-4d10-9104-b4ef6721a959"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7708#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], 
    FormBox[
     RowBox[{
       SubscriptBox["\[Epsilon]", "g"], "(", 
       TagBox["\[Alpha]", HoldForm], ")"}], TraditionalForm]},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Generalization error\"", TraditionalForm],
  PlotRange->{{0, 400}, {0., 0.04620288513368574}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.776966904948205*^9, 3.7769670552395573`*^9, 3.776967102485342*^9, 
   3.776967174799036*^9, {3.776967320167753*^9, 3.7769673240522757`*^9}, {
   3.776967447106009*^9, 3.776967476076847*^9}, 3.776972053966156*^9, 
   3.7769721078905163`*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"fe958ae7-30cb-42c9-8e04-37402f8f3470"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.75612556025149*^9, 3.756125560271826*^9}, {
  3.776966471416308*^9, 
  3.776966482863036*^9}},ExpressionUUID->"da5b4aea-3a14-4a0b-84ac-\
79843138a402"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7561255860216303`*^9, 
  3.756125595870153*^9}},ExpressionUUID->"518eea0b-f7c0-4ef8-af57-\
5f7b52c91f30"]
},
WindowSize->{3706, 2049},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
Magnification->2.,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 50455, 1221, 5433, "Input",ExpressionUUID->"79a0b15f-563c-4433-a51c-12e5182b8e9d"],
Cell[CellGroupData[{
Cell[50880, 1238, 11124, 287, 1322, "Input",ExpressionUUID->"54ef461b-8990-4310-abc8-1f127de3f3aa"],
Cell[62007, 1527, 169463, 2935, 857, "Output",ExpressionUUID->"648f9650-5b39-42cf-be57-b9d68f210b8f"],
Cell[231473, 4464, 200416, 3477, 857, "Output",ExpressionUUID->"267f34fc-0041-4bd4-b99e-6c75e1af4127"],
Cell[431892, 7943, 34999, 597, 748, "Output",ExpressionUUID->"47dba9a5-28a3-4665-8c43-a16deb8dfa5e"]
}, Open  ]],
Cell[466906, 8543, 146, 2, 63, "Input",ExpressionUUID->"fdcacb41-da11-47d4-8bd7-959615462d97"],
Cell[CellGroupData[{
Cell[467077, 8549, 7298, 205, 1291, "Input",ExpressionUUID->"9e57b49f-af27-4735-94a4-c3e7a2666efa"],
Cell[474378, 8756, 442, 10, 108, "Output",ExpressionUUID->"fbd50260-92fb-47d8-8ab0-fa3c91265167"],
Cell[474823, 8768, 442, 10, 108, "Output",ExpressionUUID->"7c896520-847d-4081-8a60-efbe42f76607"],
Cell[475268, 8780, 423, 10, 92, "Message",ExpressionUUID->"813adf53-afcb-43cc-b5de-d2e83ea7e743"],
Cell[475694, 8792, 15476, 291, 805, "Output",ExpressionUUID->"d217ce5f-ece7-4500-b07e-1cb625149111"],
Cell[491173, 9085, 16105, 302, 805, "Output",ExpressionUUID->"fc32baea-e3a2-4d10-9104-b4ef6721a959"],
Cell[507281, 9389, 12846, 235, 748, "Output",ExpressionUUID->"fe958ae7-30cb-42c9-8e04-37402f8f3470"]
}, Open  ]],
Cell[520142, 9627, 219, 4, 111, "Input",ExpressionUUID->"da5b4aea-3a14-4a0b-84ac-79843138a402"],
Cell[520364, 9633, 154, 3, 63, "Input",ExpressionUUID->"518eea0b-f7c0-4ef8-af57-5f7b52c91f30"]
}
]
*)

