(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    263265,       5120]
NotebookOptionsPosition[    262472,       5095]
NotebookOutlinePosition[    262811,       5110]
CellTagsIndexPosition[    262768,       5107]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sVars", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<k\>\"", ",", "\"\<l\>\""}], 
     "}"}]}], ";", 
   RowBox[{"tVars", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<m\>\"", ",", "\"\<n\>\""}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Phi", "[", "x_", "]"}], "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox["x", 
         SqrtBox["2"]], "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Averages", " ", "in", " ", "case", " ", "of", " ", "an", " ", "Erf", " ", 
    "teacher", " ", "and", " ", "student", " ", "needed", " ", "in", " ", 
    "order", " ", "to", " ", "formulate", " ", "the", " ", "dynamics", " ", 
    "and", " ", "compute", " ", "the", " ", "generalization", " ", "error"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I2Erf", "[", "C2_", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"ArcSin", "[", 
      FractionBox[
       RowBox[{"C2", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]], "]"}]}], 
    "\[Pi]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I3Erf", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}]}], ")"}]}], 
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
       SuperscriptBox[
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"C3", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"I4Erf", "[", "C4_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[CapitalLambda]0", ",", "\[CapitalLambda]1", ",", 
        "\[CapitalLambda]2", ",", "\[CapitalLambda]4"}], "}"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalLambda]4", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         SuperscriptBox[
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}]}], ";", 
       RowBox[{"\[CapitalLambda]0", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]}], "-", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}], "+", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"\[CapitalLambda]1", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"\[CapitalLambda]2", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"Return", "[", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"ArcSin", "[", 
           FractionBox["\[CapitalLambda]0", 
            RowBox[{
             SqrtBox["\[CapitalLambda]1"], " ", 
             SqrtBox["\[CapitalLambda]2"]}]], "]"}]}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", 
          SqrtBox["\[CapitalLambda]4"]}]], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Averages", " ", "in", " ", "case", " ", "of", " ", "a", " ", "ReLU", " ", 
    "teacher", " ", "and", " ", "student"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I2ReLU", "[", "C2_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"C2", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
    FractionBox[
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "-", 
       SuperscriptBox[
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}]], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ReLU", "[", "C3_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"]}]]}], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}]]], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"C3", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"positionDuplicates", "[", "list_", "]"}], ":=", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"Range", "@", 
       RowBox[{"Length", "[", "list", "]"}]}], ",", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"NOT", " ", "IMPORTANT", " ", "FOR", " ", 
     RowBox[{"NOW", ":", " ", 
      RowBox[{"Ignore", " ", "the", " ", "following", " ", "averages"}]}]}], 
    ",", " ", "experimental"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I4ReLU11", "[", "C2_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "-", "2"}],
        ")"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "-", 
        SuperscriptBox[
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "2"]}]]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ")"}], 
      " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{
           "C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
          RowBox[{
           RowBox[{
           "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]]], 
       "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I2ErfReLU", "[", "C2_", "]"}], ":=", 
   FractionBox[
    RowBox[{"C2", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"C2", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ErfReLU", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{"C3", "\[LeftDoubleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"C3", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ReLUErf", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     SqrtBox[
      FractionBox["2", "\[Pi]"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}], ")"}]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HelperReLU", "[", "varList_", "]"}], ":=", 
    RowBox[{"Return", "[", "0", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Not", " ", 
    RowBox[{"important", ":", " ", 
     RowBox[{
     "This", " ", "section", " ", "deals", " ", "with", " ", "returning", " ",
       "the", " ", "correct", " ", "symbol", " ", 
      RowBox[{"(", 
       RowBox[{"order", " ", "parameter"}], ")"}], " ", "for", " ", "a", " ", 
      "covariance", " ", "between", " ", "two", " ", "variables"}]}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getCovar", "[", 
     RowBox[{"var1_", ",", "var2_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"sVars", ",", 
          RowBox[{"First", "[", "var1", "]"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"sVars", ",", 
            RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "var1", "]"}], "\[LessEqual]", 
             RowBox[{"Last", "[", "var2", "]"}]}], ",", 
            RowBox[{"Return", "[", 
             RowBox[{
              SubscriptBox["Q", 
               RowBox[{
                RowBox[{"Last", "[", "var1", "]"}], ",", 
                RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}],
              "]"}], ",", 
            RowBox[{"Return", "[", 
             RowBox[{
              SubscriptBox["Q", 
               RowBox[{
                RowBox[{"Last", "[", "var2", "]"}], ",", 
                RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}],
              "]"}]}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{
            SubscriptBox["R", 
             RowBox[{
              RowBox[{"Last", "[", "var1", "]"}], ",", 
              RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"sVars", ",", 
            RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{
            SubscriptBox["R", 
             RowBox[{
              RowBox[{"Last", "[", "var2", "]"}], ",", 
              RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
           "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"T", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"Last", "[", "var1", "]"}], ",", 
             RowBox[{"Last", "[", "var2", "]"}]}], "\[RightDoubleBracket]"}], 
           "]"}]}], "]"}]}], "]"}], ";"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createCoVar", "[", "varList_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"returnMat", ",", "r", ",", "c"}], "}"}], ",", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Length", "[", "varList", "]"}]}], ";", 
       RowBox[{"returnMat", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"r", "=", "1"}], ",", 
         RowBox[{"r", "\[LessEqual]", "d"}], ",", 
         RowBox[{"r", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "r"}], ",", 
           RowBox[{"c", "\[LessEqual]", "d"}], ",", 
           RowBox[{"c", "++"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"d", "\[Equal]", "2"}], ",", 
               RowBox[{"getCovar", "[", 
                RowBox[{
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "c", 
                  "\[RightDoubleBracket]"}]}], "]"}], ",", 
               RowBox[{"getCovar", "[", 
                RowBox[{
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "c", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"c", ",", "r"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}]}], ";"}]}], 
          "]"}]}], "]"}], ";", "returnMat"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"IMPORTANT", ":", " ", 
    RowBox[{
    "This", " ", "function", " ", "formulates", " ", "the", " ", "dynamical", 
     " ", "equations", " ", "for", " ", "the", " ", "desired", " ", 
     "system"}]}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FormulateDynamics", "[", 
     RowBox[{"actTeach_", ",", "actStud_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqnsR", ",", " ", "eqnsQ", ",", " ", "eg"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Dit", " ", "bepaalt", " ", "welke", " ", "activatiefuncties", " ", 
         "er", " ", "gebruikt", " ", "worden", " ", "in", " ", "de", " ", 
         "averages"}], ",", " ", 
        RowBox[{
        "voor", " ", "als", " ", "student", " ", "en", " ", "teacher", " ", 
         "verschillende", " ", "activatiefuncties", " ", "hebben", 
         "\[IndentingNewLine]", 
         RowBox[{"TODO", ":", " ", 
          RowBox[{"Simplify", " ", "significantly"}]}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Switch", "[", 
        RowBox[{"actStud", ",", "\[IndentingNewLine]", "\"\<ReLU\>\"", ",", 
         RowBox[{
          RowBox[{"I2Stud", "=", "I2ReLU"}], ";", 
          RowBox[{"I3Stud", "=", "I3ReLU"}], ";", 
          RowBox[{"I4", "=", "HelperReLU"}], ";", 
          RowBox[{"assumps", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"RAssumptionsReLU", ",", "QAssumptionsReLU"}], "}"}], 
            "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"actTeach", "\[Equal]", "\"\<ReLU\>\""}], ",", 
            RowBox[{
             RowBox[{"I2Teach", "=", "I2ReLU"}], ";", 
             RowBox[{"I2Cross", "=", "I2ReLU"}], ";", 
             RowBox[{"I3Teach", "=", "I3ReLU"}], ";", 
             RowBox[{"I4Teach", "=", "I4ReLU"}], ";"}], ",", 
            RowBox[{
             RowBox[{"I2Teach", "=", "I2Erf"}], ";", 
             RowBox[{"I2Cross", "=", "I2ErfReLU"}], ";", 
             RowBox[{"I3Teach", "=", "I3ErfReLU"}], ";"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\"\<Erf\>\"", ",", 
         RowBox[{
          RowBox[{"I2Stud", "=", "I2Erf"}], ";", 
          RowBox[{"I3Stud", "=", "I3Erf"}], ";", 
          RowBox[{"I4Stud", "=", "I4Erf"}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"actTeach", "\[Equal]", "\"\<ReLU\>\""}], ",", 
            RowBox[{
             RowBox[{"I2Teach", "=", "I2ReLU"}], ";", 
             RowBox[{"I2Cross", "=", "I2ErfReLU"}], ";", 
             RowBox[{"I3Teach", "=", "I3ReLUErf"}], ";", 
             RowBox[{"assumps", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"RAssumptionsReLU", ",", "QAssumptionsReLU"}], "}"}], 
               "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"I2Teach", "=", "I2Erf"}], ";", 
             RowBox[{"I2Cross", "=", "I2Erf"}], ";", 
             RowBox[{"I3Teach", "=", "I3Erf"}], ";", 
             RowBox[{"I4Teach", "=", "I4Erf"}]}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Here", " ", "the", " ", "equations", " ", "are", " ", "formulated", 
          " ", "using", " ", "the", " ", "correct", " ", "averages", " ", 
          "I2"}], ",", " ", 
         RowBox[{"I3", " ", "and", " ", "I4"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eqnsR", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["R", 
               RowBox[{"i", ",", "n"}]], "\[Prime]",
              MultilineFunction->None], "[", "\[Alpha]", "]"}], "\[Equal]", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"\[Eta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "m", "M"], 
                  RowBox[{"I3Teach", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}], "-", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "j", "K"], 
                  RowBox[{"I3Stud", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}]}], ")"}]}], ",", "assumps"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}]}], ";", 
       RowBox[{"eqnsQ", " ", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["Q", 
               RowBox[{"i", ",", "k"}]], "\[Prime]",
              MultilineFunction->None], "[", "\[Alpha]", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"\[Eta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", "m", "M"], 
                 RowBox[{"I3Teach", "[", 
                  RowBox[{"createCoVar", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                  "]"}]}], "-", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", "j", "K"], 
                 RowBox[{"I3Stud", "[", 
                  RowBox[{"createCoVar", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                  "]"}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", "m", "M"], 
                 RowBox[{"I3Teach", "[", 
                  RowBox[{"createCoVar", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                  "]"}]}], "-", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", "j", "K"], 
                 RowBox[{"I3Stud", "[", 
                  RowBox[{"createCoVar", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                  "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[Eta]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 UnderoverscriptBox["\[Sum]", "m", "M"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "n", "M"], 
                  RowBox[{"I4Teach", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "n", "M"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "j", "K"], 
                   RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", "l", "K"], 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "j", "K"], 
                  RowBox[{"I4Teach", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<l\>\"", ",", "l"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}]}]}], ")"}]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Onderstaand", " ", "stuk", " ", "is", " ", "gebruikt", " ", "voor",
            " ", "de", " ", "single"}], "-", 
          RowBox[{"layer", " ", "ReLU", " ", "perceptron"}]}], ",", " ", 
         RowBox[{"omdat", " ", "hiervoor", " ", "de", " ", 
          RowBox[{"eta", "^", "2"}], " ", "term", " ", "hoogstens", " ", "2", 
          "d", " ", "averages", " ", 
          RowBox[{"bevat", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], " ", 
         RowBox[{"I4ReLU11", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["Q", 
                RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}], ",", 
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["R", 
                RowBox[{"1", ",", "1"}]], "[", "\[Alpha]", "]"}], ",", 
              RowBox[{
               RowBox[{
               "T", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], "]"}]}], "*)"}], " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eg", "[", "\[Alpha]_", "]"}], ":=", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"i", "=", "1"}], "K"], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "K"], 
             RowBox[{"I2Stud", "[", 
              RowBox[{"createCoVar", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
              "]"}]}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "K"], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"m", "=", "1"}], "M"], 
              RowBox[{"I2Cross", "[", 
               RowBox[{"createCoVar", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
               "]"}]}]}]}], "+", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"m", "=", "1"}], "M"], 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"n", "=", "1"}], "M"], 
             RowBox[{"I2Teach", "[", 
              RowBox[{"createCoVar", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<m\>\"", ",", "m"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
              "]"}]}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"R", "\[Rule]", "eqnsR"}], ",", 
          RowBox[{"Q", "\[Rule]", "eqnsQ"}], ",", 
          RowBox[{"generr", "\[Rule]", 
           RowBox[{"eg", "[", "\[Alpha]", "]"}]}]}], "|>"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"solveEqns", "[", 
      RowBox[{
      "Rinit_", ",", "Qinit_", ",", "vinit_", ",", "winit_", ",", "Rs_", ",", 
       "Qs_", ",", "vs_", ",", "ws_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"solutions", "=", 
        RowBox[{"First", "[", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "eqnsR", "]"}], ",", 
             RowBox[{"ReleaseHold", "[", "eqnsQ", "]"}], ",", 
             RowBox[{"Flatten", "[", "Rinit", "]"}], ",", "Qinit"}], "]"}], 
           ",", 
           RowBox[{"Join", "[", 
            RowBox[{"Rs", ",", "Qs"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}]}], "]"}], 
         "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "K"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"n", "=", "1"}], ",", 
           RowBox[{"n", "\[LessEqual]", "M"}], ",", 
           RowBox[{"n", "++"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["r", 
              RowBox[{"i", ",", "n"}]], "=", 
             RowBox[{
              SubscriptBox["R", 
               RowBox[{"i", ",", "n"}]], "/.", "\[VeryThinSpace]", 
              RowBox[{"solutions", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], " ", "M"}], "+", "n"}], 
               "\[RightDoubleBracket]"}]}]}], ";"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"count", "=", "1"}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "K"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "i"}], ",", 
           RowBox[{"k", "\[LessEqual]", "K"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["q", 
              RowBox[{"i", ",", "k"}]], "=", 
             RowBox[{
              SubscriptBox["Q", 
               RowBox[{"i", ",", "k"}]], "/.", "\[VeryThinSpace]", 
              RowBox[{"solutions", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"K", " ", "M"}], "+", "count"}], 
               "\[RightDoubleBracket]"}]}]}], ";", 
            RowBox[{"count", "++"}], ";"}]}], "]"}]}], "]"}], ";"}], ")"}]}], 
    ";"}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"createReLUAssumptions", "[", 
    RowBox[{"M_", ",", "K_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RAssumptionsReLU", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"i", ",", "m"}]], "[", "\[Alpha]", "]"}], "2"], 
          "\[LessEqual]", 
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], " ", 
           RowBox[{
            RowBox[{
            "T", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}]}]}], "&&", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"i", ",", "m"}]], "[", "\[Alpha]", "]"}], "\[Element]", 
          TemplateBox[{},
           "Reals"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"QAssumptionsReLU", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], "^", "2"}], 
          "\[LessEqual]", 
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], " ", 
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"j", ",", "j"}]], "[", "\[Alpha]", "]"}]}]}], "&&", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], "\[Element]", 
          TemplateBox[{},
           "Reals"]}], "&&", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], 
            "\[GreaterEqual]", "0"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "K"}], "}"}]}], "]"}]}], ";"}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.741417766878932*^9, {3.7414178136520367`*^9, 3.7414180323196106`*^9}, {
   3.741418142753128*^9, 3.74141815001657*^9}, 3.7414182048818393`*^9, {
   3.7414182358432536`*^9, 3.7414182458582172`*^9}, {3.7414182977674656`*^9, 
   3.74141831268191*^9}, {3.7414183901056585`*^9, 3.74141844976068*^9}, {
   3.7414189240340323`*^9, 3.7414189244879293`*^9}, {3.741419034744487*^9, 
   3.741419064069398*^9}, {3.7414199155727577`*^9, 3.7414199343095922`*^9}, {
   3.7414201853626537`*^9, 3.7414201938868337`*^9}, {3.7414204760219955`*^9, 
   3.7414204767838383`*^9}, {3.7414206419819975`*^9, 3.741420645659052*^9}, {
   3.7414207844977446`*^9, 3.741420787426893*^9}, {3.7414209502462*^9, 
   3.741420962017806*^9}, {3.7414210298122873`*^9, 3.7414210307675047`*^9}, {
   3.750233686238963*^9, 3.750233693208152*^9}, {3.750233744011318*^9, 
   3.7502338611876497`*^9}, {3.750233931543561*^9, 3.750233932956682*^9}, {
   3.7502339647219677`*^9, 3.750233984490898*^9}, 3.7502340155118923`*^9, {
   3.7502340696610394`*^9, 3.75023407004464*^9}, {3.750234180166548*^9, 
   3.750234206541513*^9}, {3.750234351033214*^9, 3.7502343689279537`*^9}, 
   3.750234431183111*^9, {3.750234468880437*^9, 3.750234581377149*^9}, {
   3.750234632542137*^9, 3.750234725987009*^9}, {3.750234835330235*^9, 
   3.7502348783881397`*^9}, {3.750234946788145*^9, 3.750234952926354*^9}, {
   3.750235105701767*^9, 3.7502351080687847`*^9}, {3.750235161362995*^9, 
   3.750235161597478*^9}, 3.750235244810684*^9, 3.750235468043602*^9, {
   3.7502357595485077`*^9, 3.750235761095175*^9}, {3.750235953627931*^9, 
   3.750235957834675*^9}, {3.750236057193761*^9, 3.7502360589194937`*^9}, {
   3.7502361403698387`*^9, 3.750236199570587*^9}, {3.750236241341853*^9, 
   3.750236246498494*^9}, {3.7502362968827753`*^9, 3.750236335843343*^9}, {
   3.7502365748320837`*^9, 3.750236576099577*^9}, {3.750236620474616*^9, 
   3.750236623663641*^9}, {3.750237145933381*^9, 3.7502371464062767`*^9}, {
   3.750237179776636*^9, 3.750237212157707*^9}, {3.75023726716984*^9, 
   3.750237313316041*^9}, 3.750237521793502*^9, {3.750237671692642*^9, 
   3.7502376740262527`*^9}, {3.7502390880620832`*^9, 
   3.7502390891382313`*^9}, {3.750239161467984*^9, 3.750239170586404*^9}, {
   3.750239225900345*^9, 3.750239229673628*^9}, {3.7502395849365387`*^9, 
   3.750239593891245*^9}, {3.750239692082035*^9, 3.7502396949416656`*^9}, {
   3.7502400878657207`*^9, 3.750240115816914*^9}, {3.750343822940446*^9, 
   3.750343854139063*^9}, {3.75053509605019*^9, 3.750535116236343*^9}, {
   3.750535598429101*^9, 3.750535626850296*^9}, {3.750535803136817*^9, 
   3.75053580697675*^9}, {3.750536183866181*^9, 3.750536214823339*^9}, {
   3.751119216669256*^9, 3.75111922152325*^9}, 3.751119488392544*^9, {
   3.7511196132043543`*^9, 3.751119622434835*^9}, {3.7511197314622517`*^9, 
   3.751119768188106*^9}, {3.751119798899342*^9, 3.751119801285493*^9}, 
   3.751119844861784*^9, {3.751119998587184*^9, 3.7511201169329042`*^9}, {
   3.751120161941452*^9, 3.751120185319826*^9}, {3.751120231299284*^9, 
   3.751120240130343*^9}, {3.751120335718725*^9, 3.751120380054914*^9}, {
   3.751120762828732*^9, 3.751120817490088*^9}, {3.751125494245812*^9, 
   3.751125497101141*^9}, {3.7511309419541817`*^9, 3.7511310168167887`*^9}, {
   3.75118471253514*^9, 3.751184779562503*^9}, {3.7511850342742043`*^9, 
   3.751185049632537*^9}, {3.751186112153719*^9, 3.7511861336690474`*^9}, 
   3.751186188856037*^9, {3.751186312944566*^9, 3.7511863735717382`*^9}, {
   3.751188113902042*^9, 3.751188168244383*^9}, {3.751188528348846*^9, 
   3.751188555708354*^9}, {3.751192812793318*^9, 3.751192889718573*^9}, {
   3.751192931419243*^9, 3.751192946504442*^9}, {3.7511932201126623`*^9, 
   3.751193470598133*^9}, {3.7511935263014*^9, 3.751193624942418*^9}, {
   3.751193665271614*^9, 3.751193762787752*^9}, {3.7511938334549417`*^9, 
   3.751193881841576*^9}, {3.751193940677477*^9, 3.751194056532219*^9}, {
   3.751194106191081*^9, 3.7511941103505287`*^9}, {3.7511946158974524`*^9, 
   3.7511947003175173`*^9}, {3.751194885596794*^9, 3.751194904656308*^9}, {
   3.75119494427013*^9, 3.751194979908992*^9}, {3.7511950474280233`*^9, 
   3.7511951866339006`*^9}, {3.751195267299939*^9, 3.751195414641423*^9}, {
   3.75119562993139*^9, 3.751195632553495*^9}, {3.7511956820338793`*^9, 
   3.751195693614752*^9}, {3.751195835559074*^9, 3.751195850923327*^9}, {
   3.7511959452239037`*^9, 3.751195968931778*^9}, {3.751196047711643*^9, 
   3.751196065256418*^9}, {3.751196342320488*^9, 3.751196489154274*^9}, {
   3.751196557182372*^9, 3.751196558307073*^9}, {3.751196682816697*^9, 
   3.7511967012791843`*^9}, {3.751196849185783*^9, 3.751196861601388*^9}, {
   3.751197032824609*^9, 3.7511970620088787`*^9}, {3.751201134614414*^9, 
   3.7512012404661903`*^9}, {3.751201615293879*^9, 3.751201625241371*^9}, {
   3.751201783072228*^9, 3.751201802219425*^9}, {3.7512018553740063`*^9, 
   3.751201863910933*^9}, {3.751201896949523*^9, 3.751201922981914*^9}, {
   3.751201976010841*^9, 3.7512020470475492`*^9}, {3.7512020942174587`*^9, 
   3.751202133354364*^9}, {3.751202183292495*^9, 3.751202247759165*^9}, {
   3.7512022942999773`*^9, 3.751202304681945*^9}, {3.7512023471295652`*^9, 
   3.751202362632728*^9}, 3.751202593807638*^9, {3.751203300326034*^9, 
   3.7512033094270277`*^9}, {3.7512046249907627`*^9, 3.751204629568754*^9}, 
   3.751219147292221*^9, {3.7512192122672033`*^9, 3.751219216063034*^9}, {
   3.751791084867567*^9, 3.7517910858455*^9}, 3.756118470256916*^9, {
   3.7561191767052727`*^9, 3.756119203333642*^9}, {3.756119294841609*^9, 
   3.7561192993192377`*^9}, {3.7561196892988787`*^9, 3.756119705335794*^9}, {
   3.756122639304627*^9, 3.7561226447107363`*^9}, 3.7561262862188673`*^9, {
   3.776967298975525*^9, 3.776967305803451*^9}, {3.776967370043006*^9, 
   3.776967426462866*^9}, {3.776967543709426*^9, 3.776967569964859*^9}, {
   3.776972206620562*^9, 3.776972209756263*^9}, {3.7769722681434193`*^9, 
   3.776972352952694*^9}, {3.7832733662171087`*^9, 3.783273400921067*^9}, {
   3.7832734931761436`*^9, 3.783273533590084*^9}, {3.7832735747553587`*^9, 
   3.783273574856215*^9}, {3.7833237946105423`*^9, 3.783323828555252*^9}, {
   3.7833238718919907`*^9, 3.783323893867065*^9}, {3.783323986880889*^9, 
   3.78332400818547*^9}, {3.783324053097563*^9, 3.783324057616997*^9}, {
   3.783324093907634*^9, 3.783324122768189*^9}, {3.7833248021533003`*^9, 
   3.78332480244671*^9}, {3.7839287774795847`*^9, 3.783928800324915*^9}, {
   3.7839289281291513`*^9, 3.783928930950879*^9}, {3.7839305627185802`*^9, 
   3.783930573394693*^9}, {3.783930821346698*^9, 3.7839308370224733`*^9}, {
   3.783930871828518*^9, 3.783930902582807*^9}, {3.783931126849189*^9, 
   3.783931171186699*^9}, {3.783931540259975*^9, 3.783931578856503*^9}, {
   3.783931715546001*^9, 3.783931722027491*^9}, {3.7839321773952723`*^9, 
   3.783932209975486*^9}, 3.783932280655952*^9, {3.783934523527701*^9, 
   3.783934526273881*^9}, {3.7839345739276648`*^9, 3.783934578103239*^9}, {
   3.783942579403412*^9, 3.783942583861369*^9}, {3.783942840992546*^9, 
   3.7839428763617992`*^9}, {3.783942993490288*^9, 3.7839429938814173`*^9}, {
   3.783943055609294*^9, 3.783943133608246*^9}, {3.7839440268401403`*^9, 
   3.783944179737402*^9}, 3.783944571797412*^9, 3.783944696176847*^9, {
   3.783944813386684*^9, 3.783944839163476*^9}, {3.783944903075238*^9, 
   3.783944905647171*^9}},ExpressionUUID->"79a0b15f-563c-4433-a51c-\
12e5182b8e9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Parameters", " ", "like", " ", "for", " ", "example", " ", "weight", " ",
      "decay", " ", "\[Gamma]", " ", "and", " ", "drift", " ", "paramater", 
     " ", "\[Delta]", " ", "can", " ", "be", " ", "assigned", " ", "before", 
     " ", "the", " ", "call", " ", "to", " ", "FormulateDynamics", " ", "in", 
     " ", "which", " ", "they", " ", "are", " ", "used"}], ",", " ", 
    RowBox[{"just", " ", "like", " ", "\[Eta]"}], ",", " ", 
    RowBox[{
    "K", " ", "and", " ", "M", " ", "are", " ", "assigned", " ", "here", " ", 
     "and", " ", "used", " ", "in", " ", "FormulateDynamics"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Test", " ", "met", " ", "second", " ", "layer", " ", "weights"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Specifies", " ", "properties", " ", "of", " ", "the", " ", 
      RowBox[{"teacher", ".", " ", "Here"}]}], ",", " ", 
     RowBox[{
     "the", " ", "weight", " ", "vectors", " ", "are", " ", "orthonormal"}]}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"IdentityMatrix", "[", "M", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"K", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"createReLUAssumptions", "[", 
      RowBox[{"M", ",", "K"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Formulates", " ", "the", " ", "dynamical", " ", "equations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ODEsys", "=", 
     RowBox[{"FormulateDynamics", "[", 
      RowBox[{"\"\<Erf\>\"", ",", "\"\<Erf\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "matrix", " ", "of", " ", "initial", " ", "conditions", " ", 
     "for", " ", "the", " ", "differential", " ", "equations", " ", 
     RowBox[{"(", 
      RowBox[{"Macroscopic", " ", "parameters"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"First", " ", "layer", " ", 
      RowBox[{"macroscopics", ".", " ", "Student"}]}], "-", 
     RowBox[{"teacher", " ", "overlaps", " ", "and", " ", "student"}], "-", 
     RowBox[{"student", " ", "overlaps", " ", "respectively"}]}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"Rinit", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"1", ",", "1"}]], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}], ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"1", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"2", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0"}], 
          ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"2", ",", "2"}]], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qinit", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "k"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "k"}]], "[", "0", "]"}], "\[Equal]", "0.2"}], 
         ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "k"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", " ", "layer", " ", 
     RowBox[{"macroscopisc", ".", " ", "Student"}], " ", "second", " ", 
     "layer", " ", "weights", " ", "and", " ", "teacher", " ", "second", " ", 
     "layer", " ", "weights"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vinit", "=", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "1.0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"winit", "=", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", 
       RowBox[{"-", "3.0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Symbols", " ", "of", " ", "functions", " ", "that", " ", "need", " ", 
     "to", " ", "be", " ", "solved", " ", "for"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["R", 
         RowBox[{"i", ",", "n"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["Q", 
         RowBox[{"i", ",", "k"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vs", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["v", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "K"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ws", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["w", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "M"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxAlpha", "=", "1200"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Numerically", " ", "solve", " ", "the", " ", "system", " ", 
     "ODEsystem"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"solveEqns", "[", 
      RowBox[{
      "Rinit", ",", "Qinit", ",", "vinit", ",", "winit", ",", "Rs", ",", "Qs",
        ",", "vs", ",", "ws"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{"First", "[", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ODEsys", "[", "R", "]"}], ",", 
          RowBox[{"ODEsys", "[", "Q", "]"}], ",", "Rinit", ",", "Qinit"}], 
         "]"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"Rs", ",", "Qs"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}]}], "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot", " ", "all", " ", 
      SubscriptBox["R", 
       RowBox[{"i", ",", "n"}]], " ", "in", " ", "one", " ", "plot"}], ",", 
     " ", 
     RowBox[{
      SubscriptBox["Q", 
       RowBox[{"i", ",", "k"}]], " ", "in", " ", "another", " ", "plot", " ", 
      "and", " ", "a", " ", "plot", " ", "for", " ", "the", " ", 
      "generalization", " ", "error"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rplot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"i", ",", "n"}]], "[", "\[Alpha]", "]"}], "/.", "s"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "K"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", "Rs", "]"}], ",", "Below"}], "]"}]}], 
       ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-teacher overlap R\>\""}], 
       ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rhoplot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"i", ",", "n"}]], "[", "\[Alpha]", "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["Q", 
                RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], "*", 
              RowBox[{
               RowBox[{"T", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], "/.", "s"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "K"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", "Rs", "]"}], ",", "Below"}], "]"}]}], 
       ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Student-teacher alignments \[Rho]\>\""}], 
       ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{"Rplot", ",", "Rhoplot"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "k"}]], "[", "\[Alpha]", "]"}], "/.", "s"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "K"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "K"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "0", ",", " ", "maxAlpha"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", "Qs", "]"}], ",", "Below"}], "]"}]}], 
       ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-student overlap Q\>\""}], 
       ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"egPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"ODEsys", "[", "generr", "]"}], "/.", "s"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Generalization error\>\""}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", 
          RowBox[{
           SubscriptBox["\[Epsilon]", "g"], "[", "\[Alpha]", "]"}]}], "}"}]}],
        ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{"QPlot", ",", "egPlot"}], "}"}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.783928946221654*^9, 3.78392905514447*^9}, {
   3.783929089951602*^9, 3.783929097705386*^9}, {3.783929212948328*^9, 
   3.783929226530526*^9}, 3.783929305863309*^9, {3.783929340327816*^9, 
   3.783929487390088*^9}, {3.783929533029995*^9, 3.783929773107997*^9}, {
   3.783930103399129*^9, 3.7839301039097967`*^9}, {3.783930510588759*^9, 
   3.783930527099484*^9}, 3.783930700862974*^9, {3.783931203212075*^9, 
   3.783931208463441*^9}, {3.783931286486561*^9, 3.783931295272094*^9}, {
   3.783931341449727*^9, 3.78393134770855*^9}, {3.783931407601878*^9, 
   3.7839314100318937`*^9}, {3.783931589218872*^9, 3.7839316203043537`*^9}, {
   3.783931747789929*^9, 3.783931768775062*^9}, {3.78393185103165*^9, 
   3.783931863129115*^9}, {3.7839319034547443`*^9, 3.783931929342375*^9}, 
   3.783932030756983*^9, {3.783932074280501*^9, 3.783932086722609*^9}, {
   3.783933844804768*^9, 3.783933881887485*^9}, 3.783934138058104*^9, {
   3.783934286458748*^9, 3.783934299978558*^9}, {3.783934366262844*^9, 
   3.783934403652355*^9}, 3.783934444718034*^9, {3.783934505734742*^9, 
   3.783934507851097*^9}, {3.783934585543914*^9, 3.783934589494697*^9}, {
   3.7839348388446093`*^9, 3.783934904019827*^9}, {3.783935556259182*^9, 
   3.783935572712967*^9}, {3.783935868518417*^9, 3.7839358721900177`*^9}, {
   3.783936108772415*^9, 3.783936133520348*^9}, {3.7839396564892483`*^9, 
   3.783939821357316*^9}, {3.783939897010662*^9, 3.783939953960458*^9}, {
   3.783940167595892*^9, 3.783940171179132*^9}, {3.783940202264798*^9, 
   3.783940233966826*^9}, {3.78394029217568*^9, 3.783940296622942*^9}, {
   3.783940532685646*^9, 3.783940538109899*^9}, {3.78394207974426*^9, 
   3.783942161215807*^9}, {3.783942314541795*^9, 3.783942338263179*^9}, {
   3.783942420203046*^9, 3.7839424948978853`*^9}, 3.783942604575313*^9, {
   3.7839427119207153`*^9, 3.783942769816744*^9}, {3.783942803439938*^9, 
   3.783942819042193*^9}, {3.783942902135064*^9, 3.783942905911462*^9}, {
   3.7839432068646097`*^9, 3.783943274517672*^9}, {3.783943451463459*^9, 
   3.783943497311248*^9}, {3.7839435509202967`*^9, 3.7839435746433353`*^9}, {
   3.7839436913068333`*^9, 3.7839437044989433`*^9}, {3.78394385651293*^9, 
   3.7839438566688747`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"469333fc-2708-4162-a393-a1a5e59d2638"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$9289#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
G7G+iYDEhl49+B9lkso/
              "]]}, Annotation[#, "Charting`Private`Tag$9289#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
5L3LyVdaiXr3Tx6Qjm0G1QfCeHg0Hivl3wx9f3EPihdCawO3JqA4RxhfUthd
8HCSSPvhk4Cbm58nlW9shEJyqgd3QALqDjH/OTvXAEPt342OBCfgdaHCDLm3
DaCyp3FL3MUEbOZNmf51vwGYxzGRNyUBF46vyZn6N0DZcbsYjf8SMKu2Xfjz
53p4a0AKSXtFXH+Ca/YK9Q5YHlg8K3EkEV1+CkztGL4Nfe8GBHjVE9FNkdfn
zb3boJ1VOcIIifjFT2hnx7XboLjkZDChm4j7Dbsz+s7fBt6WQenrFom4PfYd
x8KfWnitVzvP6ZaIJ7oyv0RI14Lbaffof7mJ+JR7++/1vGqITn9XMLKUiOsn
TTrZ71TAzQs6LZtWE9GInKaglV8B/ablNPk/iRg6JPomJaYC+Nl8+DM2JGEc
ix75tFUF1JP+5eizJ2F4kose689b8ClDMOueRBJaRSW1BGneAuOsU0n5dkm4
0bcH59/fBO7csYDTHUkoHkiLizpTBpdWGy5YdyXhbLZB1ox5GXy1I7uYdSdh
LscKw3mNMujca3RCoz8JN8t/GEzdVQa+FS2qgtQkfHHS5V7qSCk8a72+4c2P
JJRY28dva14KsR/PZtrvTUYGsc0NA8b/wZzcXOWpqGQ0yennunihGHYeNa7W
jUnGqufvT5Q5FIO2V1mNbHwyHoHaIKpFMVyusK1bT0lG/2dBAueUikF536Om
0pxk1DpjtrT9XxFc5KJ0fK1ORpZ7B+fmJYuAefnQaMR4MjqoWJsHZ16HPQ9C
NlxTSUGBo49un79aAEvMdu6P1VJwc3apg0RcAfQdVx/6ppmCO4QvxfzzKICQ
WYYSDb0U1Hiv+uKHagEMCqfiO8sU/JemCq/H8yEu+Vr0Ps8UlLu+dqBPOB+m
rB/9vXU9BR2pVQ1eD/OgYY7ld9PGVEyufSF/42AODLS7qN3anIp69equdwRz
YCaj42LBllRkHn/A+nxbDgjJBq9Hsaeii7K/n8JUNmS4f2A03JWKm7dbSzaW
ZIPHxL3tdPlUTHtRW5vElw3Cr86J/TuTik3WLUnc7Jch816bhX57Krb9x7bG
I5oFtk0lqyGdqRii0V56ljsL9jXEF1c8SUXp41bj7YxZ0FhrPMfan4rp/KKP
Sz+TgXpjNHOYmooD8+Ub+W+RQSh7duDMQioKakedu3mQDHW+e8wixNJQ8n3d
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
XHz2r/V2CooZhac2DRjB/wBLX8T9
              "]]}, Annotation[#, "Charting`Private`Tag$9289#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9289#2"]& ]}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
            TagBox["\[Alpha]", HoldForm], TraditionalForm], 
           FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
         BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 500, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Student-teacher overlap R\"", TraditionalForm], 
         PlotRange -> {{0, 1200}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           SubscriptBox["R", 
            RowBox[{"1", ",", "1"}]], 
           SubscriptBox["R", 
            RowBox[{"1", ",", "2"}]], 
           SubscriptBox["R", 
            RowBox[{"2", ",", "1"}]], 
           SubscriptBox["R", 
            RowBox[{"2", ",", "2"}]]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {192., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$9359#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
R3iG7iiT7F47LB0ffjpCuGhHudqfQ3Z47NmO2k+E7ajFw2qP2WHW1vdGM4SP
U9U1eEnZIRP9luIvhBf+wYq4oh1GCupnLhJ2Wz1vW2lgh+sbxTa/CYsv9951
tiKuO4qq/CO8snh1TNjNDg8bbbZvOTwNtd8+7vsaYIeXRccXtxH2m7e4WBJj
hzEaafXbCcvPfo62SbdDevbPgjsJb6E4vzySb4fM1PfO7CL88tOvv5QyOyy5
Eb9ITzj8o59EQa0ddszZqjISPjdC5Wz2yg5dPv1R2E2YdjCq6FCPHR5fHpj4
3x0fGKY+jtrh6sNaLibCCT2pB7Nm7TCvyHTz/+taXQeuGPy0w4shSSH/m6Uj
N5Ft0w4DB2kK/x+/r5W/bYDOHn9rhNsyEL7ZUkqVzmqP4xFvu/+fn16z2Bkd
XnvMPZrV9//82Z8/9WA+YY9U4098dxAeeyZX/u60PbJqjzVTE8550jKboGyP
qiJd96kIm1ar8Who26PaUfXjG8T68T56Z0BnZI88C3u0/xCmlF1Ja7OxRwGJ
L3tXCD8oHu2K9CDGf5zsvUSY2yw0XyHEHrW8HWm/Es5gE/TcSLDHx9+vH/n/
fjL3vFOtu22PgZasvROEY6O8OLwe2GPmnkO0w4S3Auei2GN7/GLP+baXsN9K
S8u3ZiLfVMWBDsIOlsz2liP2KLpll96z/+fDUSvPM2uP7hlMKo8IG/UZs3z8
aY9pInzN9wlfUCx7dpnBAb0ufr9AIizKo0KrhA4Y7mLfZ/H//hv6Nrqp4YC3
GKR2XiXMk5xWUa/vgK9bqF+r/f98bE7qnnJ3wM1S7h5hwr/G/At57zvgGcEq
wUXieXVKO+wzXuWA5jATN0F45nyHxu0mBxzcwuzWTXiobv8y87ADLiY1tZUQ
rsuoUqCid8Slju/JRoRPaumzPmdzxKJ/CTRqhEt3bJm/we+I+4ZO/jlFOMtL
M2VR3hHrr580pyUcdHluYsLVEUmPY/hKiffV2q6k6juBjvhI+kIyibBLi0TU
1ThH1F296OND2Pxk2Il39xxxi+iVF8qElZi4AhoHHdF7fplziHg/Nrx5peVL
cUTq69nW9YQlguz5JJcckd2qVCiH8JGF2rcP6ZyQNBTPbk54Z6cOe7acE94c
CUohE+/v7qiYp34FTtiU4+vZSZwH11RZlowrnNDGdFtmMeE52jtCCvVO+ELc
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
fQ==
              "]]}, Annotation[#, "Charting`Private`Tag$9359#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$9359#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9359#2"]& ]}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
            TagBox["\[Alpha]", HoldForm], TraditionalForm], 
           FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
         BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 500, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Student-teacher alignments \[Rho]\"", TraditionalForm], 
         PlotRange -> {{0, 1200}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           SubscriptBox["R", 
            RowBox[{"1", ",", "1"}]], 
           SubscriptBox["R", 
            RowBox[{"1", ",", "2"}]], 
           SubscriptBox["R", 
            RowBox[{"2", ",", "1"}]], 
           SubscriptBox["R", 
            RowBox[{"2", ",", "2"}]]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {576., -189.}, {
     Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{1069., Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.783944598646604*^9, {3.78394465347735*^9, 3.7839446736784697`*^9}, 
   3.783944716671877*^9, 3.783944853238883*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"55ccd7ff-10ae-4c80-88d8-1c924a00ee0d"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
H5LlJt9i/w/eIMwK
              "]]}, Annotation[#, "Charting`Private`Tag$9496#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$9496#1"]& ], {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
m/qA/R9Tk8kt
              "]]}, 
            Annotation[#, "Charting`Private`Tag$9496#2"]& ]}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
            TagBox["\[Alpha]", HoldForm], TraditionalForm], 
           FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
         BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 500, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Student-student overlap Q\"", TraditionalForm], 
         PlotRange -> {{0, 1200}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           SubscriptBox["Q", 
            RowBox[{"1", ",", "1"}]], 
           SubscriptBox["Q", 
            RowBox[{"1", ",", "2"}]], 
           SubscriptBox["Q", 
            RowBox[{"2", ",", "2"}]]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {266.6666666666667, -162.23392204684737}, {
     Center, Center}, {500.00000000000006, 309.0169943749474}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
UURE5KVf/xpY+98LyIsi/gf0FGvL
           "]]},
         Annotation[#, "Charting`Private`Tag$9557#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         TagBox["\[Alpha]", HoldForm], TraditionalForm], 
        FormBox[
         RowBox[{
           SubscriptBox["\[Epsilon]", "g"], "(", 
           TagBox["\[Alpha]", HoldForm], ")"}], TraditionalForm]},
      AxesOrigin->{0., 0.},
      BaseStyle->{FontSize -> 14},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->500,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Generalization error\"", TraditionalForm],
      PlotRange->{{0, 1200}, {0., 0.03179332214881534}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {800., -162.23392204684737}, 
     ImageScaled[{0.5, 0.5}], {500, 309.0169943749474}]}, {}},
  ContentSelectable->True,
  ImageSize->{1078.6666666666667`, 336.46784409369474`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.783944598646604*^9, {3.78394465347735*^9, 3.7839446736784697`*^9}, 
   3.783944716671877*^9, 3.783944853439968*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"d24b82e7-5fbe-4442-8762-6a8c2ff73bde"]
}, Open  ]]
},
WindowSize->{1680, 1001},
WindowMargins->{{-1679, Automatic}, {30, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 50398, 1197, 2802, "Input",ExpressionUUID->"79a0b15f-563c-4433-a51c-12e5182b8e9d"],
Cell[CellGroupData[{
Cell[50823, 1214, 16247, 416, 929, "Input",ExpressionUUID->"469333fc-2708-4162-a393-a1a5e59d2638"],
Cell[67073, 1632, 131821, 2325, 575, "Output",ExpressionUUID->"55ccd7ff-10ae-4c80-88d8-1c924a00ee0d"],
Cell[198897, 3959, 63559, 1133, 386, "Output",ExpressionUUID->"d24b82e7-5fbe-4442-8762-6a8c2ff73bde"]
}, Open  ]]
}
]
*)

