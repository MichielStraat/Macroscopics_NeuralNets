(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    400447,       7886]
NotebookOptionsPosition[    399031,       7853]
NotebookOutlinePosition[    399365,       7868]
CellTagsIndexPosition[    399322,       7865]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"sVars", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<k\>\"", ",", "\"\<l\>\""}], 
    "}"}]}], ";", 
  RowBox[{"tVars", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<m\>\"", ",", "\"\<n\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I2Erf", "[", "C2_", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"ArcSin", "[", 
      FractionBox[
       RowBox[{"C2", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]], "]"}]}], 
    "\[Pi]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Phi", "[", "x_", "]"}], "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox["x", 
         SqrtBox["2"]], "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "averages", " ", "in", " ", "case", " ", "of", " ", "an", " ", 
    "Erf", " ", "teacher", " ", "and", " ", "student"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I3Erf", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}]}], ")"}]}], 
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
       SuperscriptBox[
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"C3", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"I4Erf", "[", "C4_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[CapitalLambda]0", ",", "\[CapitalLambda]1", ",", 
        "\[CapitalLambda]2", ",", "\[CapitalLambda]4"}], "}"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalLambda]4", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         SuperscriptBox[
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}]}], ";", 
       RowBox[{"\[CapitalLambda]0", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]}], "-", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}], "+", 
         RowBox[{
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"\[CapitalLambda]1", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"\[CapitalLambda]2", "=", 
        RowBox[{
         RowBox[{"\[CapitalLambda]4", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"C4", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"C4", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C4", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
       RowBox[{"Return", "[", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"ArcSin", "[", 
           FractionBox["\[CapitalLambda]0", 
            RowBox[{
             SqrtBox["\[CapitalLambda]1"], " ", 
             SqrtBox["\[CapitalLambda]2"]}]], "]"}]}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", 
          SqrtBox["\[CapitalLambda]4"]}]], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "averages", " ", "in", " ", "case", " ", "of", " ", "a", " ", 
    "ReLU", " ", "teacher", " ", "and", " ", "student"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I2ReLU", "[", "C2_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"C2", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
    FractionBox[
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "-", 
       SuperscriptBox[
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "2"]}]], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"C2", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ReLU", "[", "C3_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "2"]}]]}], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"C3", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}]]], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"C3", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"positionDuplicates", "[", "list_", "]"}], ":=", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"Range", "@", 
       RowBox[{"Length", "[", "list", "]"}]}], ",", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReduceSingularCovarMat", "[", "C_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "//", " ", "DeleteDuplicates"}], " ", "//", " ", 
      "Transpose"}], " ", "//", " ", "DeleteDuplicates"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I4RedI2ReLU", "[", "C4_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"redCovar", "=", 
      RowBox[{"ReduceSingularCovarMat", "[", "C4", "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "Reduce", " ", "the", " ", "covariance", " ", "matrix", " ", "to", " ", 
       "2", "x2"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"MultinormalDistribution", "[", "redCovar", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";", "  ", 
     RowBox[{"(*", 
      RowBox[{"2", "D", " ", "Probability", " ", "Density", " ", "Function"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dupls", "=", 
      RowBox[{"positionDuplicates", "[", "C4", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"firstVar", "=", 
      RowBox[{"First", "[", "dupls", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Check", " ", "which", " ", "expectation", " ", "value", " ", "needs", 
       " ", "to", " ", "be", " ", "computed"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "firstVar", "]"}], "\[Equal]", "1"}], "||", 
        RowBox[{"firstVar", "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "^", "2"}], "*", 
           RowBox[{"p", "[", 
            RowBox[{"u", ",", "v"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], "]"}],
        ",", 
       RowBox[{"Return", "[", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"u", "*", "v", "*", 
           RowBox[{"p", "[", 
            RowBox[{"u", ",", "v"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
        "]"}]}], "]"}]}], "  ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"First", " ", "condition", " ", "by", " ", "implication"}], ",",
       " ", 
      RowBox[{"v", "=", 
       RowBox[{"w", "=", "z"}]}], ",", " ", 
      RowBox[{
       RowBox[{"and", " ", "so", " ", "we", " ", "have"}], " ", "<", 
       RowBox[{
        RowBox[{"v", "^", "2"}], "*", "\[Theta]", 
        RowBox[{"(", "u", ")"}], "*", "\[Theta]", 
        RowBox[{"(", "v", ")"}]}], ">"}], ",", " ", 
      RowBox[{
       RowBox[{"second", " ", "conidition", " ", "is", " ", "u"}], "=", 
       RowBox[{
        RowBox[{"v", " ", "and", " ", "v"}], "=", "z"}]}]}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", " ", "we", " ", "come", " ", "here"}], ",", " ", 
      RowBox[{
       RowBox[{"then", " ", "the", " ", "other", " ", "form"}], " ", "<", 
       RowBox[{"u", "*", "v", "*", "\[Theta]", 
        RowBox[{"(", "u", ")"}], "*", "\[Theta]", 
        RowBox[{"(", "v", ")"}]}], ">", " ", 
       RowBox[{
       "must", " ", "be", " ", "evaluated", " ", "and", " ", "returned"}]}]}],
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"I4RedI3ReLU", "[", "C4_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"redCovar", "=", 
       RowBox[{"ReduceSingularCovarMat", "[", "C4", "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "Reduce", " ", "the", " ", "covariance", " ", "matrix", " ", "to", " ",
         "3", "x3"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"u_", ",", "v_", ",", "w_"}], "]"}], ":=", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"MultinormalDistribution", "[", "redCovar", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v", ",", "w"}], "}"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "3", "D", " ", "Probability", " ", "Density", " ", "Function"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dupls", "=", 
       RowBox[{"positionDuplicates", "[", "C4", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"firstVar", "=", 
       RowBox[{"First", "[", "dupls", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lastVar", "=", 
       RowBox[{"Last", "[", "dupls", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "firstVar", "]"}], "\[Equal]", "1"}], "&&", 
         RowBox[{"lastVar", "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"3", ",", "4"}], "}"}]}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"w", "^", "2"}], "*", 
            RowBox[{"p", "[", 
             RowBox[{"u", ",", "v", ",", "w"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"v", "*", "w", "*", 
            RowBox[{"p", "[", 
             RowBox[{"u", ",", "v", ",", "w"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
         "]"}]}], "]"}]}], " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Check", " ", "if", " ", "we", " ", "have", " ", "the", " ", "form"}], 
       " ", "<", 
       RowBox[{
        RowBox[{"w", "^", "2"}], "*", "\[Theta]", 
        RowBox[{"(", "u", ")"}], "*", "\[Theta]", 
        RowBox[{"(", "v", ")"}], "*", "\[Theta]", 
        RowBox[{"(", "w", ")"}]}], ">"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"If", " ", "we", " ", "come", " ", "here"}], ",", " ", 
       RowBox[{
        RowBox[{"then", " ", "we", " ", "have", " ", "the", " ", "form"}], 
        " ", "<", 
        RowBox[{"v", "*", "w", "*", "\[Theta]", 
         RowBox[{"(", "u", ")"}], "*", "\[Theta]", 
         RowBox[{"(", "v", ")"}], "*", "\[Theta]", 
         RowBox[{"(", "w", ")"}]}], ">"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"I4ReLU", "[", 
     RowBox[{"C4_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumberQ"}], "]"}], " ", "&"}], ")"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Create", " ", "a", " ", "function", " ", "that", " ", "passes", " ", 
        "the", " ", "request", " ", "on", " ", "to", " ", "numerical", " ", 
        "differentiation", " ", "function", " ", "based", " ", "on", " ", 
        "rank", " ", "of", " ", "C4", " ", "matrix"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rank", "=", 
        RowBox[{"MatrixRank", "[", "C4", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
          "one", " ", "dimensional", " ", "integral", " ", "of", " ", "the", 
           " ", "form"}], " ", "<", 
          RowBox[{
           RowBox[{"u", "^", "2"}], " ", "*", " ", "\[Theta]", 
           RowBox[{"(", "u", ")"}]}], ">"}], " ", "=", " ", 
         RowBox[{"Variance", 
          RowBox[{
           RowBox[{"(", "u", ")"}], "/", "2"}]}]}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{"rank", ",", "1", ",", 
         RowBox[{
          RowBox[{"C4", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "2"}], ",", "2", ",", 
         RowBox[{"I4RedI2ReLU", "[", "C4", "]"}], ",", "3", ",", 
         RowBox[{"I4RedI3ReLU", "[", "C4", "]"}], ",", "4", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"result", ",", "Module"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", " ", "we", " ", "come", " ", "here"}], ",", " ", 
           RowBox[{
           "then", " ", "we", " ", "have", " ", "a", " ", "true", " ", "I4", 
            " ", "integral"}], ",", " ", 
           RowBox[{"i", ".", "e", "."}], ",", " ", 
           RowBox[{
            RowBox[{"rank", "[", "C4", "]"}], "=", "4"}], ",", " ", 
           RowBox[{
           "then", " ", "compute", " ", "numerically", " ", "using", " ", "3",
             "D", " ", "analytical", " ", "integrand", 
            RowBox[{"(", 
             RowBox[{"v", ",", "w", ",", "z"}], ")"}]}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Execute", " ", "following", " ", "only", " ", "if", " ", "the", 
            " ", "integral", " ", "is", " ", "four", " ", "dimensional"}], 
           ",", " ", 
           RowBox[{"i", ".", "e", "."}], ",", " ", 
           RowBox[{
            RowBox[{"rank", "[", "C4", "]"}], "=", "4"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
             RowBox[{
              RowBox[{"C4", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "4"}], "]"}], "]"}], "^", "2"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              RowBox[{"C4", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "4"}], "]"}], "]"}], "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "3"}], "]"}], "]"}], "^", "2"}]}], "+", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"C4", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", "2"}], " ", 
             RowBox[{
              RowBox[{"C4", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
            RowBox[{
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
             RowBox[{
              RowBox[{"C4", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "4"}], "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
             RowBox[{
              RowBox[{"C4", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "3"}], "]"}], "]"}], "^", "2"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              RowBox[{"C4", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", "2"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              RowBox[{"C4", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "3"}], "]"}], "]"}], "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
             RowBox[{"C4", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "3"}], "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "4"}], "]"}], "]"}], "^", "2"}], " ", 
               RowBox[{"C4", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"C4", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
               RowBox[{"C4", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
               RowBox[{"C4", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "3"}], "]"}], "]"}], "^", "2"}], " ", 
               RowBox[{"C4", "[", 
                RowBox[{"[", 
                 RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"C4", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"C4", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}], "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"C4", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", 
                  RowBox[{"C4", "[", 
                   RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
             ")"}], "/", "d"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "4"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "z"}], " ", 
                   RowBox[{
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], "^", "2"}]}], "-", 
                  RowBox[{"v", " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"w", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "+", 
                    RowBox[{"v", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"z", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "-", 
                    RowBox[{"w", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
                 ")"}]}], "+", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "v"}], " ", 
                   RowBox[{
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "z"}], " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "+", 
                    RowBox[{"w", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}], "+", 
                  RowBox[{"v", " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"z", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "-", 
                    RowBox[{"w", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
                 ")"}]}], "+", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "w"}], " ", 
                   RowBox[{
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
                  RowBox[{"v", " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"z", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "-", 
                    RowBox[{"v", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "z"}], " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "+", 
                    RowBox[{"w", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], "/", "d"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["z", "2"], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "3"}], "]"}], "]"}], "^", "2"}]}], "-", 
               RowBox[{"2", " ", "w", " ", "z", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["w", "2"], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
               RowBox[{
                SuperscriptBox["z", "2"], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["z", "2"], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "+", 
               RowBox[{"2", " ", "v", " ", "z", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "4"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["w", "2"], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "-", 
                  RowBox[{"2", " ", "v", " ", "w", " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["v", "2"], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], ")"}]}], "-", 
               RowBox[{"2", " ", "w", " ", "z", " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "+", 
               RowBox[{"2", " ", "w", " ", "z", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "-", 
               RowBox[{"2", " ", "v", " ", "z", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "-", 
               RowBox[{"2", " ", "v", " ", "w", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["v", "2"], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "4"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "w"}], " ", "z", " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["w", "2"], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "+", 
                  RowBox[{"v", " ", "z", " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "-", 
                  RowBox[{"v", " ", "w", " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["w", "2"], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["w", "2"], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "+", 
               RowBox[{"2", " ", "v", " ", "w", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["v", "2"], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "3"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["z", "2"], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "+", 
                  RowBox[{"v", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "+", 
                    RowBox[{"v", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "4"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"w", " ", "z", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "+", 
                    RowBox[{"v", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "z"}], " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "-", 
                    RowBox[{"w", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "+", 
                    RowBox[{"v", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["z", "2"], " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "-", 
                    RowBox[{"w", " ", "z", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "-", 
                    RowBox[{"v", " ", "z", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "+", 
                    RowBox[{"v", " ", "w", " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "4"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "4"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "4"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}]}], " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
                 ")"}]}], "+", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "3"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"C4", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "3"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}], "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
                RowBox[{"C4", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "3"}], "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "4"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", 
                   RowBox[{"C4", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "4"}], "]"}], "]"}]}]}], ")"}]}]}], 
              ")"}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Print", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"w", " ", "z", " ", 
               RowBox[{"Exp", "[", "c", "]"}]}], 
              RowBox[{
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "2", " ", "\[Pi]", " ", 
               SqrtBox[
                RowBox[{"Det", "[", "C4", "]"}]]}]], 
             FractionBox["1", 
              SqrtBox["a"]], 
             RowBox[{"Exp", "[", 
              FractionBox[
               SuperscriptBox["b", "2"], 
               RowBox[{"2", "a"}]], "]"}], 
             RowBox[{"Phi", "[", 
              FractionBox["b", 
               SqrtBox["a"]], "]"}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"w", " ", "z", " ", 
                RowBox[{"Exp", "[", "c", "]"}]}], 
               RowBox[{
                SqrtBox[
                 RowBox[{"2", " ", "\[Pi]"}]], " ", "2", " ", "\[Pi]", " ", 
                SqrtBox[
                 RowBox[{"Det", "[", "C4", "]"}]]}]], 
              FractionBox["1", 
               SqrtBox["a"]], 
              RowBox[{"Exp", "[", 
               FractionBox[
                SuperscriptBox["b", "2"], 
                RowBox[{"2", "a"}]], "]"}], 
              RowBox[{"Phi", "[", 
               FractionBox["b", 
                SqrtBox["a"]], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], 
           "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Not", " ", 
     RowBox[{"important", ":", " ", 
      RowBox[{"Ignore", " ", "the", " ", "following", " ", "averages"}]}]}], 
    ",", " ", "experimental"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I4ReLU11", "[", "C2_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "-", "2"}],
        ")"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "-", 
        SuperscriptBox[
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "2"]}]]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{
          "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ")"}], 
      " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{
           "C2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
          RowBox[{
           RowBox[{
           "C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]]], 
       "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"C2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I2ErfReLU", "[", "C2_", "]"}], ":=", 
   FractionBox[
    RowBox[{"C2", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"C2", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ErfReLU", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{"C3", "\[LeftDoubleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"C3", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"I3ReLUErf", "[", "C3_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     SqrtBox[
      FractionBox["2", "\[Pi]"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"C3", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"C3", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], " ", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}]}], ")"}]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"C3", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HelperReLU", "[", "varList_", "]"}], ":=", 
    RowBox[{"Return", "[", "0", "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"Not", " ", 
    RowBox[{"important", ":", " ", 
     RowBox[{
     "This", " ", "section", " ", "deals", " ", "with", " ", "returning", " ",
       "the", " ", "correct", " ", "symbol", " ", 
      RowBox[{"(", 
       RowBox[{"order", " ", "paramater"}], ")"}], " ", "for", " ", "a", " ", 
      "covariance", " ", "between", " ", "two", " ", "variables"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCovar", "[", 
    RowBox[{"var1_", ",", "var2_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"sVars", ",", 
         RowBox[{"First", "[", "var1", "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"sVars", ",", 
           RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "var1", "]"}], "\[LessEqual]", 
            RowBox[{"Last", "[", "var2", "]"}]}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{
               RowBox[{"Last", "[", "var1", "]"}], ",", 
               RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
            "]"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{
               RowBox[{"Last", "[", "var2", "]"}], ",", 
               RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           SubscriptBox["R", 
            RowBox[{
             RowBox[{"Last", "[", "var1", "]"}], ",", 
             RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"sVars", ",", 
           RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           SubscriptBox["R", 
            RowBox[{
             RowBox[{"Last", "[", "var2", "]"}], ",", 
             RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
          "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"T", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"Last", "[", "var1", "]"}], ",", 
            RowBox[{"Last", "[", "var2", "]"}]}], "\[RightDoubleBracket]"}], 
          "]"}]}], "]"}]}], "]"}], ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getCovarSmall", "[", 
    RowBox[{"var1_", ",", "var2_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"sVars", ",", 
         RowBox[{"First", "[", "var1", "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"sVars", ",", 
           RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "var1", "]"}], "\[LessEqual]", 
            RowBox[{"Last", "[", "var2", "]"}]}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
             SubscriptBox["q", 
              RowBox[{
               RowBox[{"Last", "[", "var1", "]"}], ",", 
               RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
            "]"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
             SubscriptBox["q", 
              RowBox[{
               RowBox[{"Last", "[", "var2", "]"}], ",", 
               RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           SubscriptBox["r", 
            RowBox[{
             RowBox[{"Last", "[", "var1", "]"}], ",", 
             RowBox[{"Last", "[", "var2", "]"}]}]], "[", "\[Alpha]", "]"}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"sVars", ",", 
           RowBox[{"First", "[", "var2", "]"}]}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           SubscriptBox["r", 
            RowBox[{
             RowBox[{"Last", "[", "var2", "]"}], ",", 
             RowBox[{"Last", "[", "var1", "]"}]}]], "[", "\[Alpha]", "]"}], 
          "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"T", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"Last", "[", "var1", "]"}], ",", 
            RowBox[{"Last", "[", "var2", "]"}]}], "\[RightDoubleBracket]"}], 
          "]"}]}], "]"}]}], "]"}], ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createCoVar", "[", "varList_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"returnMat", ",", "r", ",", "c"}], "}"}], ",", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Length", "[", "varList", "]"}]}], ";", 
       RowBox[{"returnMat", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"r", "=", "1"}], ",", 
         RowBox[{"r", "\[LessEqual]", "d"}], ",", 
         RowBox[{"r", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "r"}], ",", 
           RowBox[{"c", "\[LessEqual]", "d"}], ",", 
           RowBox[{"c", "++"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"d", "\[Equal]", "2"}], ",", 
               RowBox[{"getCovarSmall", "[", 
                RowBox[{
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "c", 
                  "\[RightDoubleBracket]"}]}], "]"}], ",", 
               RowBox[{"getCovar", "[", 
                RowBox[{
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "varList", "\[LeftDoubleBracket]", "c", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"c", ",", "r"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"returnMat", "\[LeftDoubleBracket]", 
              RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}]}], ";"}]}], 
          "]"}]}], "]"}], ";", "returnMat"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "formulates", " ", "the", " ", "dynamical", 
    " ", "equations", " ", "for", " ", "the", " ", "desired", " ", "system"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormulateDynamics", "[", 
    RowBox[{"actTeach_", ",", "actStud_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Switch", "[", 
      RowBox[{"actStud", ",", "\[IndentingNewLine]", "\"\<ReLU\>\"", ",", 
       RowBox[{
        RowBox[{"I2Stud", "=", "I2ReLU"}], ";", 
        RowBox[{"I3Stud", "=", "I3ReLU"}], ";", 
        RowBox[{"I4", "=", "HelperReLU"}], ";", 
        RowBox[{"assumps", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"RAssumptionsReLU", ",", "QAssumptionsReLU"}], "}"}], 
          "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"actTeach", "\[Equal]", "\"\<ReLU\>\""}], ",", 
          RowBox[{
           RowBox[{"I2Teach", "=", "I2ReLU"}], ";", 
           RowBox[{"I2Cross", "=", "I2ReLU"}], ";", 
           RowBox[{"I3Teach", "=", "I3ReLU"}], ";", 
           RowBox[{"I4Teach", "=", "I4ReLU"}], ";"}], ",", 
          RowBox[{
           RowBox[{"I2Teach", "=", "I2Erf"}], ";", 
           RowBox[{"I2Cross", "=", "I2ErfReLU"}], ";", 
           RowBox[{"I3Teach", "=", "I3ErfReLU"}], ";"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\"\<Erf\>\"", ",", 
       RowBox[{
        RowBox[{"I2Stud", "=", "I2Erf"}], ";", 
        RowBox[{"I3Stud", "=", "I3Erf"}], ";", 
        RowBox[{"I4Stud", "=", "I4Erf"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"actTeach", "\[Equal]", "\"\<ReLU\>\""}], ",", 
          RowBox[{
           RowBox[{"I2Teach", "=", "I2ReLU"}], ";", 
           RowBox[{"I2Cross", "=", "I2ErfReLU"}], ";", 
           RowBox[{"I3Teach", "=", "I3ReLUErf"}], ";", 
           RowBox[{"assumps", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"RAssumptionsReLU", ",", "QAssumptionsReLU"}], "}"}], 
             "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"I2Teach", "=", "I2Erf"}], ";", 
           RowBox[{"I2Cross", "=", "I2Erf"}], ";", 
           RowBox[{"I3Teach", "=", "I3Erf"}], ";", 
           RowBox[{"I4Teach", "=", "I4Erf"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Here", " ", "the", " ", "equations", " ", "are", " ", "formulated", 
        " ", "using", " ", "the", " ", "correct", " ", "averages", " ", 
        "I2"}], ",", " ", 
       RowBox[{"I3", " ", "and", " ", "I4"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"eqnsR", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           SubscriptBox["R", 
            RowBox[{"i", ",", "n"}]], "\[Prime]",
           MultilineFunction->None], "[", "\[Alpha]", "]"}], "\[Equal]", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"\[Eta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               UnderoverscriptBox["\[Sum]", "m", "M"], 
               RowBox[{"I3Teach", "[", 
                RowBox[{"createCoVar", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                "]"}]}], "-", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", "j", "K"], 
               RowBox[{"I3Stud", "[", 
                RowBox[{"createCoVar", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                "]"}]}]}], ")"}]}], ",", "assumps"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"eqnsQ", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "K"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "i"}], ",", 
         RowBox[{"k", "\[LessEqual]", "K"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"eqnsQ", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"eqnsQ", ",", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               SubscriptBox["Q", 
                RowBox[{"i", ",", "k"}]], "\[Prime]",
               MultilineFunction->None], "[", "\[Alpha]", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"\[Eta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "m", "M"], 
                  RowBox[{"I3Teach", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}], "-", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "j", "K"], 
                  RowBox[{"I3Stud", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "m", "M"], 
                  RowBox[{"I3Teach", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}], "-", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "j", "K"], 
                  RowBox[{"I3Stud", "[", 
                   RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
                   "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[Eta]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "m", "M"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "n", "M"], 
                   RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "n", "M"], 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", "j", "K"], 
                    RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}]}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", "l", "K"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", "j", "K"], 
                   RowBox[{"I4Teach", "[", 
                    RowBox[{"createCoVar", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<l\>\"", ",", "l"}], "}"}]}], "}"}], "]"}], 
                    "]"}]}]}]}], ")"}]}]}]}]}], "]"}]}]}], "]"}]}], "]"}], 
     ";", 
     RowBox[{"Clear", "[", "eg", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"+", 
        SuperscriptBox["\[Eta]", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", "m", "M"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", "n", "M"], 
           RowBox[{"I4Teach", "[", 
            RowBox[{"createCoVar", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<n\>\"", ",", "n"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
            "]"}]}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", "n", "M"], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", "j", "K"], 
            RowBox[{"I4Teach", "[", 
             RowBox[{"createCoVar", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
             "]"}]}]}]}], "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", "l", "K"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", "j", "K"], 
           RowBox[{"I4Teach", "[", 
            RowBox[{"createCoVar", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<k\>\"", ",", "k"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<j\>\"", ",", "j"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<l\>\"", ",", "l"}], "}"}]}], "}"}], "]"}], 
            "]"}]}]}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"I4ReLU11", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"Q", ",", " ", "1", ",", "1"}], "]"}], "[", "\[Alpha]", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"R", ",", " ", "1", ",", "1"}], "]"}], "[", "\[Alpha]", 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"R", ",", " ", "1", ",", "1"}], "]"}], "[", "\[Alpha]", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eg", "[", "\[Alpha]_", "]"}], ":=", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], "K"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "K"], 
           RowBox[{"I2Stud", "[", 
            RowBox[{"createCoVar", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<j\>\"", ",", "j"}], "}"}]}], "}"}], "]"}], 
            "]"}]}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i", "=", "1"}], "K"], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"m", "=", "1"}], "M"], 
            RowBox[{"I2Cross", "[", 
             RowBox[{"createCoVar", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<i\>\"", ",", "i"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], "}"}], "]"}], 
             "]"}]}]}]}], "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"m", "=", "1"}], "M"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"n", "=", "1"}], "M"], 
           RowBox[{"I2Teach", "[", 
            RowBox[{"createCoVar", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<m\>\"", ",", "m"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], "}"}], "]"}], 
            "]"}]}]}]}], ")"}]}]}], ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"solveEqns", "[", 
     RowBox[{"Rinit_", ",", "Qinit_", ",", "Rs_", ",", "Qs_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"solutions", "=", 
       RowBox[{"First", "[", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "eqnsR", "]"}], ",", 
            RowBox[{"ReleaseHold", "[", "eqnsQ", "]"}], ",", 
            RowBox[{"Flatten", "[", "Rinit", "]"}], ",", "Qinit"}], "]"}], 
          ",", 
          RowBox[{"Join", "[", 
           RowBox[{"Rs", ",", "Qs"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}]}], "]"}], 
        "]"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "K"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"n", "=", "1"}], ",", 
          RowBox[{"n", "\[LessEqual]", "M"}], ",", 
          RowBox[{"n", "++"}], ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["r", 
             RowBox[{"i", ",", "n"}]], "=", 
            RowBox[{
             SubscriptBox["R", 
              RowBox[{"i", ",", "n"}]], "/.", "\[VeryThinSpace]", 
             RowBox[{"solutions", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], " ", "M"}], "+", "n"}], 
              "\[RightDoubleBracket]"}]}]}], ";"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"count", "=", "1"}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "K"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "i"}], ",", 
          RowBox[{"k", "\[LessEqual]", "K"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["q", 
             RowBox[{"i", ",", "k"}]], "=", 
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{"i", ",", "k"}]], "/.", "\[VeryThinSpace]", 
             RowBox[{"solutions", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"K", " ", "M"}], "+", "count"}], 
              "\[RightDoubleBracket]"}]}]}], ";", 
           RowBox[{"count", "++"}], ";"}]}], "]"}]}], "]"}], ";"}], ")"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"createReLUAssumptions", "[", 
    RowBox[{"M_", ",", "K_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RAssumptionsReLU", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SubscriptBox["R", 
             RowBox[{"i", ",", "m"}]], "[", "\[Alpha]", "]"}], "2"], 
          "\[LessEqual]", 
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], " ", 
           RowBox[{
            RowBox[{
            "T", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}]}]}], "&&", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"i", ",", "m"}]], "[", "\[Alpha]", "]"}], "\[Element]", 
          TemplateBox[{},
           "Reals"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"QAssumptionsReLU", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], "^", "2"}], 
          "\[LessEqual]", 
          RowBox[{
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"i", ",", "i"}]], "[", "\[Alpha]", "]"}], " ", 
           RowBox[{
            SubscriptBox["Q", 
             RowBox[{"j", ",", "j"}]], "[", "\[Alpha]", "]"}]}]}], "&&", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], "\[Element]", 
          TemplateBox[{},
           "Reals"]}], "&&", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["Q", 
              RowBox[{"i", ",", "j"}]], "[", "\[Alpha]", "]"}], 
            "\[GreaterEqual]", "0"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "K"}], "}"}]}], "]"}]}], ";"}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.741417766878932*^9, {3.7414178136520367`*^9, 3.7414180323196106`*^9}, {
   3.741418142753128*^9, 3.74141815001657*^9}, 3.7414182048818393`*^9, {
   3.7414182358432536`*^9, 3.7414182458582172`*^9}, {3.7414182977674656`*^9, 
   3.74141831268191*^9}, {3.7414183901056585`*^9, 3.74141844976068*^9}, {
   3.7414189240340323`*^9, 3.7414189244879293`*^9}, {3.741419034744487*^9, 
   3.741419064069398*^9}, {3.7414199155727577`*^9, 3.7414199343095922`*^9}, {
   3.7414201853626537`*^9, 3.7414201938868337`*^9}, {3.7414204760219955`*^9, 
   3.7414204767838383`*^9}, {3.7414206419819975`*^9, 3.741420645659052*^9}, {
   3.7414207844977446`*^9, 3.741420787426893*^9}, {3.7414209502462*^9, 
   3.741420962017806*^9}, {3.7414210298122873`*^9, 3.7414210307675047`*^9}, {
   3.750233686238963*^9, 3.750233693208152*^9}, {3.750233744011318*^9, 
   3.7502338611876497`*^9}, {3.750233931543561*^9, 3.750233932956682*^9}, {
   3.7502339647219677`*^9, 3.750233984490898*^9}, 3.7502340155118923`*^9, {
   3.7502340696610394`*^9, 3.75023407004464*^9}, {3.750234180166548*^9, 
   3.750234206541513*^9}, {3.750234351033214*^9, 3.7502343689279537`*^9}, 
   3.750234431183111*^9, {3.750234468880437*^9, 3.750234581377149*^9}, {
   3.750234632542137*^9, 3.750234725987009*^9}, {3.750234835330235*^9, 
   3.7502348783881397`*^9}, {3.750234946788145*^9, 3.750234952926354*^9}, {
   3.750235105701767*^9, 3.7502351080687847`*^9}, {3.750235161362995*^9, 
   3.750235161597478*^9}, 3.750235244810684*^9, 3.750235468043602*^9, {
   3.7502357595485077`*^9, 3.750235761095175*^9}, {3.750235953627931*^9, 
   3.750235957834675*^9}, {3.750236057193761*^9, 3.7502360589194937`*^9}, {
   3.7502361403698387`*^9, 3.750236199570587*^9}, {3.750236241341853*^9, 
   3.750236246498494*^9}, {3.7502362968827753`*^9, 3.750236335843343*^9}, {
   3.7502365748320837`*^9, 3.750236576099577*^9}, {3.750236620474616*^9, 
   3.750236623663641*^9}, {3.750237145933381*^9, 3.7502371464062767`*^9}, {
   3.750237179776636*^9, 3.750237212157707*^9}, {3.75023726716984*^9, 
   3.750237313316041*^9}, 3.750237521793502*^9, {3.750237671692642*^9, 
   3.7502376740262527`*^9}, {3.7502390880620832`*^9, 
   3.7502390891382313`*^9}, {3.750239161467984*^9, 3.750239170586404*^9}, {
   3.750239225900345*^9, 3.750239229673628*^9}, {3.7502395849365387`*^9, 
   3.750239593891245*^9}, {3.750239692082035*^9, 3.7502396949416656`*^9}, {
   3.7502400878657207`*^9, 3.750240115816914*^9}, {3.750343822940446*^9, 
   3.750343854139063*^9}, {3.75053509605019*^9, 3.750535116236343*^9}, {
   3.750535598429101*^9, 3.750535626850296*^9}, {3.750535803136817*^9, 
   3.75053580697675*^9}, {3.750536183866181*^9, 3.750536214823339*^9}, {
   3.751119216669256*^9, 3.75111922152325*^9}, 3.751119488392544*^9, {
   3.7511196132043543`*^9, 3.751119622434835*^9}, {3.7511197314622517`*^9, 
   3.751119768188106*^9}, {3.751119798899342*^9, 3.751119801285493*^9}, 
   3.751119844861784*^9, {3.751119998587184*^9, 3.7511201169329042`*^9}, {
   3.751120161941452*^9, 3.751120185319826*^9}, {3.751120231299284*^9, 
   3.751120240130343*^9}, {3.751120335718725*^9, 3.751120380054914*^9}, {
   3.751120762828732*^9, 3.751120817490088*^9}, {3.751125494245812*^9, 
   3.751125497101141*^9}, {3.7511309419541817`*^9, 3.7511310168167887`*^9}, {
   3.75118471253514*^9, 3.751184779562503*^9}, {3.7511850342742043`*^9, 
   3.751185049632537*^9}, {3.751186112153719*^9, 3.7511861336690474`*^9}, 
   3.751186188856037*^9, {3.751186312944566*^9, 3.7511863735717382`*^9}, {
   3.751188113902042*^9, 3.751188168244383*^9}, {3.751188528348846*^9, 
   3.751188555708354*^9}, {3.751192812793318*^9, 3.751192889718573*^9}, {
   3.751192931419243*^9, 3.751192946504442*^9}, {3.7511932201126623`*^9, 
   3.751193470598133*^9}, {3.7511935263014*^9, 3.751193624942418*^9}, {
   3.751193665271614*^9, 3.751193762787752*^9}, {3.7511938334549417`*^9, 
   3.751193881841576*^9}, {3.751193940677477*^9, 3.751194056532219*^9}, {
   3.751194106191081*^9, 3.7511941103505287`*^9}, {3.7511946158974524`*^9, 
   3.7511947003175173`*^9}, {3.751194885596794*^9, 3.751194904656308*^9}, {
   3.75119494427013*^9, 3.751194979908992*^9}, {3.7511950474280233`*^9, 
   3.7511951866339006`*^9}, {3.751195267299939*^9, 3.751195414641423*^9}, {
   3.75119562993139*^9, 3.751195632553495*^9}, {3.7511956820338793`*^9, 
   3.751195693614752*^9}, {3.751195835559074*^9, 3.751195850923327*^9}, {
   3.7511959452239037`*^9, 3.751195968931778*^9}, {3.751196047711643*^9, 
   3.751196065256418*^9}, {3.751196342320488*^9, 3.751196489154274*^9}, {
   3.751196557182372*^9, 3.751196558307073*^9}, {3.751196682816697*^9, 
   3.7511967012791843`*^9}, {3.751196849185783*^9, 3.751196861601388*^9}, {
   3.751197032824609*^9, 3.7511970620088787`*^9}, {3.751201134614414*^9, 
   3.7512012404661903`*^9}, {3.751201615293879*^9, 3.751201625241371*^9}, {
   3.751201783072228*^9, 3.751201802219425*^9}, {3.7512018553740063`*^9, 
   3.751201863910933*^9}, {3.751201896949523*^9, 3.751201922981914*^9}, {
   3.751201976010841*^9, 3.7512020470475492`*^9}, {3.7512020942174587`*^9, 
   3.751202133354364*^9}, {3.751202183292495*^9, 3.751202247759165*^9}, {
   3.7512022942999773`*^9, 3.751202304681945*^9}, {3.7512023471295652`*^9, 
   3.751202362632728*^9}, 3.751202593807638*^9, {3.751203300326034*^9, 
   3.7512033094270277`*^9}, {3.7512046249907627`*^9, 3.751204629568754*^9}, 
   3.751219147292221*^9, {3.7512192122672033`*^9, 3.751219216063034*^9}, {
   3.751791084867567*^9, 3.7517910858455*^9}, 3.756118470256916*^9, {
   3.7561191767052727`*^9, 3.756119203333642*^9}, {3.756119294841609*^9, 
   3.7561192993192377`*^9}, {3.7561196892988787`*^9, 3.756119705335794*^9}, {
   3.756122639304627*^9, 3.7561226447107363`*^9}, 
   3.7561262862188673`*^9},ExpressionUUID->"79a0b15f-563c-4433-a51c-\
12e5182b8e9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Everything", " ", "is", " ", "global"}], ",", " ", 
    RowBox[{
    "so", " ", "parameters", " ", "like", " ", "for", " ", "example", " ", 
     "weight", " ", "decay", " ", "\[Gamma]", " ", "and", " ", "drift", " ", 
     "paramater", " ", "\[Delta]", " ", "can", " ", "be", " ", "assigned", 
     " ", "before", " ", "the", " ", "call", " ", "to", " ", 
     "FormulateDynamics", " ", "in", " ", "which", " ", "they", " ", "are", 
     " ", "used"}], ",", " ", 
    RowBox[{"just", " ", "like", " ", "\[Eta]"}], ",", " ", 
    RowBox[{
    "K", " ", "and", " ", "M", " ", "are", " ", "assigned", " ", "here", " ", 
     "and", " ", "used", " ", "in", " ", "FormulateDynamics"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"IdentityMatrix", "[", "M", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Specifies", " ", "properties", " ", "of", " ", "the", " ", "rule"}], 
     ",", " ", 
     RowBox[{"here", " ", "orthonormal", " ", "vectors"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"K", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"createReLUAssumptions", "[", 
      RowBox[{"M", ",", "K"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Formulates", " ", "the", " ", "dynamical", " ", "equations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FormulateDynamics", "[", 
     RowBox[{"\"\<Erf\>\"", ",", "\"\<Erf\>\""}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "matrix", " ", "of", " ", "initial", " ", "conditions", " ", 
     "for", " ", "the", " ", "differential", " ", "equations"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rinit", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"1", ",", "1"}]], "[", "0", "]"}], "\[Equal]", 
          RowBox[{"10", "^", 
           RowBox[{"-", "3"}]}]}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"1", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"2", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"2", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"3", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"3", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"4", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", 
            RowBox[{"4", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qinit", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "k"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "k"}]], "[", "0", "]"}], "\[Equal]", "0.2"}], 
         ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Q", 
            RowBox[{"i", ",", "k"}]], "[", "0", "]"}], "\[Equal]", "0"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Symbols", " ", "of", " ", "functions", " ", "that", " ", "need", " ", 
     "to", " ", "be", " ", "solved", " ", "for"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["R", 
         RowBox[{"i", ",", "n"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "M"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["Q", 
         RowBox[{"i", ",", "k"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxAlpha", "=", "4000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Solve", " ", "the", " ", "system"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"solveEqns", "[", 
    RowBox[{"Rinit", ",", "Qinit", ",", "Rs", ",", "Qs"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot", " ", "all", " ", 
      SubscriptBox["R", 
       RowBox[{"i", ",", "n"}]], " ", "in", " ", "one", " ", "plot"}], ",", 
     " ", 
     RowBox[{
      SubscriptBox["Q", 
       RowBox[{"i", ",", "k"}]], " ", "in", " ", "another", " ", "plot", " ", 
      "and", " ", "a", " ", "plot", " ", "for", " ", "the", " ", 
      "generalization", " ", "error"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", 
          RowBox[{"i", ",", "n"}]], "[", "\[Alpha]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{"{", "Rs", "}"}], "]"}], ",", "Below"}], "]"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-teacher overlap R\>\""}], 
     ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["q", 
          RowBox[{"i", ",", "k"}]], "[", "\[Alpha]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "K"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "i", ",", "K"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", " ", "maxAlpha"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{"{", "Qs", "}"}], "]"}], ",", "Below"}], "]"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Student-student overlap Q\>\""}], 
     ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\"\<Overlap\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "maxAlpha"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"eg", "[", "\[Alpha]", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", "maxAlpha"}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Generalization error\>\""}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{
         SubscriptBox["\[Epsilon]", "g"], "[", "\[Alpha]", "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.751790427585691*^9, {3.751790519775064*^9, 3.751790548756453*^9}, {
   3.751790644350432*^9, 3.751790778178891*^9}, {3.7517909062391243`*^9, 
   3.751791012036779*^9}, {3.75179104396347*^9, 3.751791044161004*^9}, {
   3.7517910979449472`*^9, 3.7517911155012493`*^9}, {3.7518074812023706`*^9, 
   3.751807484572044*^9}, {3.751807586573185*^9, 3.751807594662463*^9}, {
   3.751807630797845*^9, 3.751807630869211*^9}, {3.751808975468176*^9, 
   3.751809030586831*^9}, {3.756118566892975*^9, 3.756118727855835*^9}, {
   3.7561187844663277`*^9, 3.7561188016727858`*^9}, {3.7561190286985826`*^9, 
   3.756119035039877*^9}, {3.7561190893633213`*^9, 3.7561191256224947`*^9}, {
   3.756119394745219*^9, 3.7561194059396667`*^9}, 3.7561195096334543`*^9, {
   3.756119723760763*^9, 3.756119754559186*^9}, {3.756120082289119*^9, 
   3.756120179674521*^9}, {3.756120234030286*^9, 3.756120264697023*^9}, {
   3.7561212986825123`*^9, 3.7561213958839283`*^9}, {3.756121729707534*^9, 
   3.7561217439534473`*^9}, {3.7561217890187187`*^9, 
   3.7561217918749723`*^9}, {3.756123390743887*^9, 3.75612339184375*^9}, {
   3.756123477649233*^9, 3.7561234840793943`*^9}, {3.756125604831215*^9, 
   3.756125615435869*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"54ef461b-8990-4310-abc8-1f127de3f3aa"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Cf8PLR3nsg==
          "]]}, Annotation[#, "Charting`Private`Tag$68660#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
FQM/4+2d6sj/A56sy8E=
          "]]}, Annotation[#, "Charting`Private`Tag$68660#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
hN/JJnu8I/H5ndRe20SVML9hV6gaQUD/A0vcMQo=
          "]]}, Annotation[#, "Charting`Private`Tag$68660#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WdcLDshj42dXtrEq8A9mn89A/h+U9QBN
          "]]}, Annotation[#, "Charting`Private`Tag$68660#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
06a7APel+ae2BhiASX5MoOqrAuQ/aufV5GYAhWPiCdNrCvHImaPDrKYGQD+a
1feWtRC9JYa1DYwN4EsVx6YhTmK8hRJKMTAAzZCvmZ38hei7w0LkpK4BfBK5
TymQKkS1wt1vuTQM4ICNRT3ZsBA1nSNLy/cYQOe75JE6SiFqlbd1SnEaQMhe
GdmU0kJUCF37WoXdAFSCuoI9rhdi1bPTXXrrDKCSZ2WbVH0hnjkSwwhjMYB0
PGdTSP8Xr1dV7wcZ7AoVP8TMFeJg0B33iFEyiHzuU3RYLMQxvtn5A8NkGFJ0
idL8UYi9/DXXJgfIoPe4cPfqmiLU7H+U69pHBoXf61x8+IuwerOv7osHZFhr
8WrO8lARyjN+cm66QYbWUl84qFGEpyZ7ptQqyBDwdUOygHYRrmUpHHMpJcNM
jOaBF+QibNB7cud1ERn6myp9jp8rwg3t3gbCGWQo4b/8Qy6uCLWKZB2fhZJB
65k4M9tQETZGn11tP0MGP37qH9JYEXb1dneGW5ChzFzkZ8a7Iswq82jWNSPD
uncCX8Rni/Drk4+Ts8ZksP/JOr99DQW3lE0kBumSQZLj9+jBzRS06CkIKD1I
BqxstngtQMERWTazDlUymJECh8K2UjD+bMyVj8pkiE399qJHlIIBT+3cDymQ
4bPQ14enZCi4vVHwmcQeMlTJfLztgxRcvRqrP7adDN2PS5S2aFKwIz454IQI
GcY9z9U3H6WgYcikcLMwGTbUv6lZo0vBh+XPmioEyeB1aKQs6SQFTwY95Grm
JYOc/tP0Gy4U1N14f57KRgad+cRNZHcKWmldzzdYR4ZzKfrJC54UlDqsyM3C
Sob0gYdXVf0oSJkYOOrDQoZly64w+mUKHi39GxK6SoLbHs1eE+kUbB58q3Zk
mQTWlyyfmGdRMH0hi/PQEglY45lkn+ZQ0KyZ+ZbKIglOXtOebCmkYL7+t8tq
X0mwMPHcMrOCgkKBZVzWsySQNZ/WOdFCQZOc6nM7P5LghWNixf1WIp9jMoIn
PpAgyP8Aq1I7Bbv2/bbxfE+CnrQL7WLdFORrhP6OdyRweMKi8ruPgg1u4e4x
r0lA0RTeWTNBwc90tdXgYRIcM7oftvMjBfPs6tW6hkgwZ2P7Ju8TBcPHc+K4
CauHVOTFzFKQ++qqzfVBEry6rbDJ9jsFXRMUDv54QQK+vfp/+TipuN7w6M/5
JyS4e+jLmavrqfjLMFrzFGFb3bTmNRup6DgdZtr2mAQ3nYb95vioeCvy782s
RyQgFdvP0EWoyGF5XOz0QxLECoQMB8lRcaPvH6MD3SRwK07l2qVIxVHz9scV
XcTv95bDM2Uqbr60lkOMMJ/W09Ld6lQc8O5/JNhJgkJPsfP9x6go45wuKvKA
BLe6uzn2WlLx+rJzr18rCdINR9SHrakouS51aR3hC6PzXhG2VIzff7U27x4J
Di0IvHzlSMW1vV/e0FtIQN/mWhx9noq6i4vF++6SYNSX+9DbaCr2+LLNa90m
Qetfcc/4OCrKdhulzTaRgBqnQlNOoCK7xunQLMIOlLNsialU5A30l5pvJMHX
3rp+tQIqktb4WVQ1kKDflLHuYxEV+146zFsTbnw7qpZCo2KkLjTwEg7+/h91
spyKrimjXSH1xPwRN3NPv0XF/cdMcm3rSPCpyo0CDVS0bWI1FSHcq3Llxecm
KkY837h75BYJkknXVTXuUfF8st2vU4S3Bv3+b45ORdaRDC6rmyTY/4xSeGyM
iizCxto5NSQYecww+/iail829512IBz18MumyHdUbFjfkK5AeLQDox9MUnHQ
UFajv5oEMY1vPNUXqOj5n3HxVsLydWzSo0tUDCqrGJqtIsF4zf73Qd+J/Hna
H7QTVrgWanb7NxVnR2wq3Qi/yRPVkF9HQ5ORz8aPKklwNfv4r2fsNDy4dFa6
jLBShleDFxcxfvZKWyjh+MQ2qWoeGs54XxFXIaxyxWaTlDAN63gNImpukGDi
UswjuggN72bliiQRTgyqjXLYQUMFlvuOnoTf+zD9Kt5Fwy6qAasc4WQHyoTI
ARqGBB2D+9dJcPAco+CePA0917vuLiH80frLqTNKNKSab7kRS/iQOT7KOUhD
4dqQJFPCn3Tf1PNp09BWz6jr+zUSpB1n86w7TkOWnGfxbwkfPrpfykiXhp1O
RZ96CacfDi1IMqDhteI0PRphPCAaxXGahkutcnUnCU/vOY7XLGmYpT49q0k4
U9pr5ZgNDf2hukaO8Ix4m0ekPQ2tuAppPISzRD9JSjjRkGTt9WIN4SPbNk48
cKFh4kpIyEIFCbI325xi8qIhK4eh5gBhTd4YnqLzNPQj8TnRCc9x1/aq+9Ew
dD+7ZTNhLXYmvBhEQ0G3szY0wl9+FUl+i6Ch0F65Y/6Epe0rHzhG0zA9SobV
nbDdk9tnhmNpuCrBK21HeIjyLLklkYZGVpvzjAlv4hiX3ptCw4/Rth90Cev5
fO4sSqMhyFsnaRFuO8ryMyybhjmKAatKhFequdOWcmlIe8LTvp+wgoDwHocC
GpIXecakCXtckaS/LKJhBquK0U7CFZ8Vzp6g0dCHLUJUlPA7Y41fzSU0nPqx
fGwrYeF7+hmy5TT8+TKBsZmw6S6LfYXXiPdZqkvbRDgpyaGHu5KGfV8s+zcQ
Zvw4f+5KNQ3LvZUtOAkz217+s1BLwyMuEvJshA/1Xs2yq6Nh0SsJ6/8I+ytk
HxhsoOH9ByrjzIRrC0p6j90m8hezqWUi/Jn1pv2dZhoeW8kdWC0ngYTXvb/S
92jYDAz9P4Sthnty8u8T84+3dctvwtlHBuU3PKBhnIui/C/Cz2+8e3y5k4Zj
WnspK4S5+Ocdv3bTMIBWYfXP2iG/1pzroaFFeInHP4dOrsvv76VhxOSOp//c
bMCnpP2EhjVqk6H/rrd0R/Rp01MavlNmPfMv3l7xPS5SL4j7Fdpk8S8fp3jV
tXkDNPzutTv+X7605aOFXEPEfCv0Yvt3P6NWRiohr2i4N7P2/RrCmxlWz+dH
afi4pUJxLWGDA65uZ1/TUPHSxy5WwnG5F1hfvCXeb/ilVHbCq27Jao0faThp
Gb/ITVhlML9/9xSRz/Mz0byEz8M1j5xpGkrQr53ZQvgjzwNa8BcaVkdY9mwn
LHrxyaG5BRry2h63liBs8f7VoPUyDZnuf5WXIvy4cZFDc4WGkVaZWfKEWUWZ
Sut/09BBRnWnKmGM5YJdf2mY8ODH3GHC9ad3+rCvLcZbCR/l/s3PfKZTI33r
i1FW7YWWA+FB53N+GhuL8ffTo0n/5vvGF57cdZuK8W0qiduPcERpjGbmlmL8
kCVWG0HYTaf5xpkdxThW1u9bRvjtPpWtLBLFePGCxv7af/OPvzHu2q5i1LWs
k/633jTe3HT+JlOM4n+WXz359zz9r+1OVirG54sr5iv/1gc1u7hDtxjVGYmP
LYn1rRi9mdeFVIw+yfRVF8LX3dLDNhoW487UDusAwhnKyWctTYsx7zu5Jo2w
y+Po7d9tirFlKDzwEWG+n/550v7F2Ajx9trE/hU7vsTxLKAY/1x8ZPdvP1vt
OB904WIxUhqMIxwITyV6mHeGFqNl/02JaMKtEg5brK4W47zDI9aHhJ0MTqal
UIox6orEmlPEfnqvXP7qj4fFyGNgFRJD7M8Pfma88n5MxHMbk84j3K37Q2q6
rxitOK7PVBF+Mt/CGOsvxvKdfPUvCI8ra7N2jBfjA4cod1HifGBimF1JWCjG
b9o6tq2EtT5duiAmVIIa4iH31xHn0UNJxjk95xJU/bja3EmcZ1+3qq4JW1uK
ArphqX7E+Tu7jf3XTGUpKs5nZTYS53up5tIst04ZiroYKlp3kEAu4LC601IZ
lh68Q9/bQ4KLT4sjA9LK0Uu2668mUb+M5X5IddlXgbtFBmdmn5OA3zfqd8pQ
BU6O97wufUkCdu8j1t7+11D5/VR9xwixXoMtRaJ2XEfV4+3xP4h6q2HFhBbc
cx03jLfJzU+QwDjfcbuMww304nnrXDBJ1Bd6wz82bKzEGV5ew6FpEgiEijvF
bqpE99oSoSnCTnXuL1n4K9Ep6N3sT8IcQsyNPwQrUfN7982tM8R+Oint8068
EimbPZqsCT+/EjzboFyJJzmSpqYIjzduf3fGuhLDThW9WTdHgn2fnQ1fnq1E
Wy4TJSHCodvq2wztKnHFojtXlvCOiONF2s6VOLt0OdmQsJ2h95n9PpV4VC/8
UD7hz9MPBlmiKzHp+NpHCvMk+Cbq0Hu9uhJHn/KI+X4hAXd3R7vAzUpkbhOy
iiEs6brjdlQdMS60piafsEXDaInt7Uo8rXIruYvw/RPGIUIPiPi81HMCRP0b
cx4PxA1UYqfjUPgDwkKdQlnOvyvxXqy6pzRRL8s7ByS8XCXify4a1yCst2Ew
/OiaKvQX7nc1JxxiluK1g7UKYUPK2xjCEzPrdIa5q3B4jkKaIlzJv/z7uHgV
Ui0gpJaox8Gxz1ZSpwp56vjTLL4R53NM4d5evSr0SU+dCSD86Zr7iju5Cs1v
SgdmEU6e4UytM6nCda+W9gwQfud9vP2wdRUeTfjMb/ydqJeC27ef9K1C7WpJ
a/MfRL1ckDz93b8K2Sye7r1IeN9966bcwCq8JlevVkB4aM0q6U1IFY6UBbC/
IywdrRbiGluF921nsj1+EusjpW70SmEVtmw7bJq+QgKxurAKCWoVxpzy120m
fKHf0JdeXIWaNvWxbwiLbvnCuf5aFdqzK7zf84vYT/NlD2bXEc/n45udjwhv
Li/NqWZUIeezO9Fb/hDnT0uW6cgCcX8SLNu+/iXqBx1dZsPlKjSyTrwuwkSG
nUOrVd3fiXxYu1P0CM8s2v9363cV5rcZeV0jHCijUB/DWo0n1+tFO64h+qPc
pzxKQtV4uanj0Ddmoh+VjLh3Q7gaZYJOvZci+qXTjcrOO7ZX4+D28G+WhMWe
F7ZxSVRjeW+qFZ1wLbu758Seaqy4JmletJYMvQHsj5M1qlFnIumbHdF/VbPe
C2DVIuLl3HpcRDg13UsiWLsaKY7PxUYIm9W+vOioW43qD1d1jYn+7eNkqfTh
k9UYxNfecoLo75hPHYmZdqrGS0fX7TXgIIOK4kVN7eRqXGS7vPx4AxkGLx6R
/i+tGrdB0wkJbqL/fcDO05lRjbsi0/0uEr5Fzh7XyKtGq8CtlrIbySDr0hCo
XlaNL917HmbzkEG0aL5GoaUaz7cHRRTyEf35h8bMxdZqlCtyLmbhJ4OlbMil
W+3VONVW2uVMOPcOl+5+ejVmXPUTUd1MBr5+qY8yz6tR4nKiz/stZGBntxMW
/1SNodbub722kqGCLMPy7nM1Hu08cGeSsHbmwhRlthqdSyMY1kS/GyF+pUlk
sRpX6yi5xtvIsKpeaCS0Wo2V79UddIh+eeH8UAwPXw32RHFtChAnQ/KdIs+n
m2tQ4peB0FoJMuxjcjRNEqzBidgdWSmE3RKWxddvr0GN/7r+1O4knmf5pvts
0jW4+Pjx3zWSRLy54VK6bA1qDxvsziUsrkiNj9pXgyeLIyblpchg82CfxVrF
Ghz5KqXlJk3kw/YdO5Rr0F3x5hSHDBkKyK27w9Rq8GsDn9oNwocyIzdoqNfg
ktFrVX1ZMrwa1Vv+CzXIMpM3+4Xw/yb+vVQ=
          "]]}, Annotation[#, "Charting`Private`Tag$68660#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1RDD8knpLPb/ADH8gAc=
          "]]}, Annotation[#, "Charting`Private`Tag$68660#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$68660#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
r5M=
          "]]}, Annotation[#, "Charting`Private`Tag$68660#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[Alpha]", HoldForm], TraditionalForm], 
       FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Student-teacher overlap R\"", TraditionalForm], 
     PlotRange -> {{0, 4000}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SubscriptBox["R", 
        RowBox[{"1", ",", "1"}]], 
       SubscriptBox["R", 
        RowBox[{"1", ",", "2"}]], 
       SubscriptBox["R", 
        RowBox[{"2", ",", "1"}]], 
       SubscriptBox["R", 
        RowBox[{"2", ",", "2"}]], 
       SubscriptBox["R", 
        RowBox[{"3", ",", "1"}]], 
       SubscriptBox["R", 
        RowBox[{"3", ",", "2"}]], 
       SubscriptBox["R", 
        RowBox[{"4", ",", "1"}]], 
       SubscriptBox["R", 
        RowBox[{"4", ",", "2"}]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756123955374552*^9, 3.756125630269268*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c24cc1b5-38ec-42c9-9dc9-f96a7930e16f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
e88vrqFCeKlzyY/w/wDZMaYl
          "]]}, Annotation[#, "Charting`Private`Tag$68787#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13c8ld8fAHAjShSKsiskMhIyEudDpcwi9UWobJJNSLLCtddd9h4Xl4qM
5LFKVJrKTklLKZFR0u/8/rn39X6d+zzP53zO537OeXY5eFs4s7GwsDjhj/9/
z/xcNTFwEURu50JJwzJ32v3KQlSPFM2jTNZyVu3CKCKY+5uLcBE7VOb77ilq
vURoHBFvSPPdBIlDpQPVTX7oSns5y7qirZAd+NAyVjEejYzoViCSEAgkmem8
a0lHB5demV7xFYezg4WSiQQZPSZphI4q7ALJ3X/anONo6C812nSlUAoWd3dO
eXpmI4XyJzu3C8rAiHlo02BjDrJtEF1QI8nCyvli+3lKLkrqcu21+LsXzCry
dFVU81Db01vZPr6KMGKlYudUnIe+Tvy7lDK9D+RdKjhNF/JQymLZzlcK+yGZ
O3JeWzUflf813jjtogJU75PHpp3zUfu6n/PzhaqQZCXJlZeWj15x08bZRtVg
RMyFX/F2PprdotvLL6gOG+Pvi54fykcSuxKy95E0QcD0nMr4tgJ0VUdS76Kv
Dmh2apaakQqQhLbcsbnCw+CdkPb8x75CxNBdvbOscwSyyv/GzR0qROr6T5RZ
Ro+Aa46F97hhITIzDBThFTSAHnmJzcGOhSj8v85vCqTj8J8o3612ciEa97fO
cvM1BaOzWl0ti/j3r3p+fC88BcpS61euVxeha2/srDcvngJp1cpHSk1FqP7T
YqeCsSW0rPk63OsqQvx/ZDPdf1nCN/Kbi23DRejljuQDU4ZnoDP42dgrzmJk
43469NVPK1Bd3yD9xq4Yua5Os989Yg+2ScQvTZYSROO45jlKtwc7kZCdU1wl
6MFmocGVWXsI9s28dG1rCdq7y6hcnX4OXKu7NqXKlKAlyf+kh4LOg8yNI9mb
TEpQ67E7980fXoDp0VbTgqwSBOnR3EcDnEDI0ojyUKwU9U5s02XLdYL6Mp5Q
Z+lSZKbA8CG6nWDtZsqORflSZNf7dFBrqzNMsrbd/nOwFIX+FS9UuukMU/sP
Hsy2KkUN7s1qQj9c4NySU6pKRimS1f9mN3PRHZ68Ht+u868U1aVGpFVmusNy
55vNjzjKkPr41m7nO+5QyCrndYqnDB0NPig7udED2os65E2Ey5ADM+7nyyoP
ECM9Vf6oUoZyRSTj2j9eBI+f5/keO5Uh/vkz9emOXvBT46laZXcZkrDbZRmX
4AUPH202PtJXhhR6Z5bCbnhBsBx34chAGTqeE4Hc/nlBu4zd3sXhMhR+mDGg
m+MNNt30uc/fy9BiX/hioLsP+G7wK3woUo4cRZ4LSBX5wvL6QdVbnuVI906w
+VW+AKgYOOffzlaBdj7/PJC/OwA8knfxJ6yvQKyfbUw6DgZAXFe9tDlPBerZ
pnOM3TkA3j491fNMsAIZ+bHqkFoCIHBiuSJPtgKdkUuQJTsEQtCK6CkX0wrk
Tc35V9MQBHICxYdnMitQoX977ZhVCNxrCfUS3VaJVmYt9pI9Q8Br6ceFRuFK
ZOHxsdw0IgQqjg+Wm4hXonUX+ArbK0LAfYVm5C9didzMHDIKF0NguxWEFKlU
ImU5zstOWaGQt+g1EmNWiYgJU/j65ApEpPMXRsRUognD8ed/DMKhYVIzkOVL
JXI2Dv3m8CQS2LyCduXXVqGdekN5k8ORcMBL7oJTfRUaU1c3s38fCcoLGQuy
t6qQheRPpvVKJLQ6BZyvba5CsOLuc1IqCv75Sx4p7q5CYhXW8zqXo+AxW3bu
oeEq9IJNa0VoRzQ4vNj9ch87A6UsU6ooctGwJ2XKpoODgYxmF6wF1KLhevVn
8RMbGKhjuL6V1zAatIMisl03MRCzXjaM0z8a4vi2cURvZ6AEe6F/8/ejoa1H
8OwFeQbSa11a98QrBnTmG32LzRlI0+GjGi04BrRdQ2MenWIg5Y2vnS5ExcAj
9/WFC6cZSMLmds88OQb+/jw6rGvDQL9XAmKE7sbA5jWL6lYHBmrQ+snuwH0d
RovF0o38GUim5Svbr4rrQL7aaUjNYCDxC2Mq7TeuwzqdY/MBWQwkwPXIIe7O
dVjcn1x/gsJAbNbVXcJPrkNspYjMKp2B3iy7R+kuXgfjvVmUfUUMRNP8yBp/
JBZSJF5wLzIZKHXy1X5zs1iQEjZqzq9noNj4+xdErGLBIfV38eGbDBQ4VNZZ
czEWnqiy/4xsZCCLYKfIZxmx4MYX8nvgDgNxN79lEX0bCx/cDX/Qehnox0lq
bNNMLOx/J6Ei2sdALz+b8FguxsK9erEb1H4GyhNt3p7MHQdcgvOL4Y8ZaN+1
FKV/B+KgVuXQSfYXeD5CRxpyIA5Kzf6C5UsGWq5f0dI0joP7qno5+YMM1PnO
6ajv+Thoiplav2OIgU4ZaNtOJcQBfWJTbN8Yzv+bH2+vkeOAqn3W7+04A4kF
l7uKFcZBppV96dwEA01X8fufbowDnZHEA78nGahfv3d5joiDQdYf8PMtXu/R
sPCU/jjYPggf375joMubPpF638TBVgOaRcV7BrItz+N1+oLv32DxIWyagQCd
IrP8igPJ8y5+hh8YiMu3vVBrYzwoGt+tuf+RgWa5AmReCcTDSg431+VPDPS8
WK7Gb0c8/LSMKBX/zEA5L7OaqtXiIeVb2zuTLwwUcclI5ziKh072h4qD2E6c
LN3vDeNhk93assUMAx0vaDweaYnvX1bBfh9bUfPigPi5eNjRP8iv9JWBtjzb
adnqHg+TLyvFErEX3V8NnwmIB7bpladj2CNsSefmw+PBbyhqQvIbAxE5etOp
pHgQ9HgvaYddqrbkoZAVDzp36hwSseMf1/x4kI/jYex1rMX2dHEIcq6Kh7UI
7rdd2Ob/tq+yNsSDJ+9u2kNsddrjyPz2eDjM7WPSiy2yP3q9dl88CJ8luhux
1/o0k1+/iAfn7Lf/KNhTDrNbAibiwf6a2HkP7Ad/Smh8n+Phu0pI4z7smixr
idr5eBD5mtH+AcefpshbargWD5vv5mqnYgfe75H7sIEE7K6qb2Wxbc6F1kVt
JUFtXavrLZwf3eV9B3ZIkGC1Mj1WCVsyfbr1jiwJvttNf6Xj/K7fmwNWqiT4
GHnO6Bdej69dJ+8v6JDgaHCSKWA/Pctpkn6cBFPXOJiheP0aFu48UzxFAkXi
t0QpXl96su9//XYkGKlvMGvD6x8us2fcxY0ECfNVI124PhyIMQd2fxLcnFry
bsL1Iz93zOtQPAnS/9YFu+P6MjmU6i+dQYJJhwKNQ7j+PONeBfPkkiDFylds
7Q2ev7hz9FgdCf6dMNhvhuv5kVtNfE8LCZ5KnmwZHcXx3ppPrukmgfCqndx/
IwykYBRFC3uN5+M1k7DtNb4/uS/P6S0JTHsMn1jj/4/nJF+JyQwJEjdqlJHw
/602qKBW7B8JBAoqB2ufMJBSSVtXm0wCmAVnqK7dZyCzWfYHpcoJsHUtKji3
h4G8tIwfJx1MgFmze0HSXQxU92T4ta1ZAnxraRP50YbzJbJr/IhVAiQU7l9Q
acX9wNntnYIDHmde+GXXhPvh6uLX1cAEICV23/e4wUAnj+n+fH8tAURPJ3UY
437kk3F96REpAZTGqta2VDPQDVkBtry8BDC9eIHrVCkDqZzev13nXgJ4nnlb
n0zG/agwWGz3kwT4reDZQE5nIL8ZYtem4QToIJihEckMdCvSTGH8awLsnEwK
Xo1hIDXmRb2rAolgvpszNMKPgSxXbho4SyTC20bWzemXGCjgyG9jU9lEOKG1
+0SEGwM1jsSfET+UCPYPUMWyHa7v9eUX7zomgjz7ngd6xxjojMU3n7JLiWCZ
2n1NU4+BgvLUgpIvJ0KJsKQhlzYDNal2R9glJsKjUUkNDSXcn85Pkv/eTAT1
FB3JW1sYyKp6T850WyLkTNPsPLgZKHjRq/Dx/UQ4Xj42uYj3q5akv4y8ERyf
4Rab5IUqdLBFpEOHLQnYDegNuS+qUNjDurfz3Enw4sQNWaGHVah9/Ag7QzAJ
lN54Rjh3VSE9Nm+DbXJJMPx1cMoP76fHjbsfzZ5IghUJ53yDhCqUYGc1W2qd
BM0dHPa6EVXokfc33rOOSaDCO9fGFlSFTmZtP9UblARby8q3zZ6vQv+NXxwu
yEsCrdu3eXTVqhDtO8uf0xVJUNb2ci1WtgqNsFLEeG4kgX2SPwdVrArZy3Sc
C+5JAu7/1hy41lUhF2+BDydnksCwQpxd+mklCmC9+5NVKxksYYyLYluJbm+1
EGjWT4YsIiR31aQSLe/+eMDLJBl8WXi1d+hUojAj/pCRc8lwNh60KWKVKDrT
+d/N2GTwt7vsrDmEz0Nlv3e6pyVDv6B12KX7FYizOVV/R3YyDNJEs60bKlDC
WMv1xNpk8DgpV2CZWoEydm/mcXqZDGvRzkH39CrQS40SRZGJZNiY0/imWLEC
bTPSPPH0YzL4cIx8VhGuQHQvh4xDf5Ihg+Ih4/69HBU23RYSlEwBhZtb23bS
ylGd4bnd971TYF97Q4fHSBmaMGnNPRGaAg7W3ftEiTK0+aSgwHBMCuTmbZHw
KClDnmcesn2lp8AXX7LLlEcZknXUmOTvSQGj0QkX9KsUFYfx5tgJpcJDmtyf
6qUS9Oyax5aPkqlAzud/a/CqBLFE3yP5KKZC04Xi0KiGEmRPuhIcrZ8KS+/E
j054lyBRysfTVZ6pIOUfMKv5rhhl1RF8vzpSQWh67qjy7SLUfVMkPvxhKsiM
Bw0opxahn42B/9a/SgWdbS90Jl2LkHmb/KzITCpot67YmQsVobj3D50LN6bB
pm08ZSWBhejInMbh+2ppEC2qyt9pkI/ubuRb4yelwa9zt/vH62jIzzk2ZDU5
Dc7eujGnY0NDsh2rCx8y0kDxeKB70Doaygj8PHMnNw0+iPOaXLWiIrfJrmHn
+jSgUjdOHvtHRgK3AxtbXqeB/qiNa79RJvK8MOp5QSYdjF7PPaqfTESSbeaf
jOXTQehXr5+VZiJ6ve2Bo7pyOoR8Sz8UmpaA9B812HAfTIdwlpsvkD4JCWmk
HG80TYfcvd2FZ2tiUTePnjRXYDqwW85vb8yPRCLN5aP13enQ7Z2qlbrXBxlw
s7Bx9KWDY9WHQME3l5CfvbWs9UA63InJaTK5dBH1r+MJZB1Oh19zVWE0igu6
Yu672WI2Hba83hshqG2Dxr5o680LZYBuMU9P4PJhYoMu2fWYRAaolJraFjWY
EGrps8k5UhkQaqw2qltnQSRpFI0cVsqAe7kBV8t1zhI6MZwBWYczoGUrSUVt
0ZnIF39WfsArA7jjTk5UvPcj+n32Pib5Z8CyE/NQ7mt/YrE7en48OANy0gbM
zR4EEGYe6hAbnQERRkcFF4qDiH+3c4Zf0TJgpEp0S6hOKHH+pAtPcHcGxCld
dMuLiSAko//4tgplwv5ipTu9cbHEm5Yr5b/EM+Gy5kb/n+OxRO6PPyPKUplw
VNVdSUU1jthmv3q4QjET1t/V+Lo0Ekds1PormKWfCeZ3WVif7SARc7NrLZc8
M8E/0DpcOyKRYO6+NlvpmwkBonx9SQ8SCQ/bf5LvgzJB7XPrBV6+JOJ9379E
m8hMGLUYs6zPTSKGSlnsj1EyIXOJ7WJGTTLRYcPGtqsjE1Ilv512rUwlrqZH
qdveywQNNwH1svepxMEHbBep/ZkgX3PMWYgvjWg4wP5y02AmEOpF+3ON0ohK
vnXlvz9nwnfNTe45d9KI1PscRi+3ZsFY7NMs5ZR0wuTv9XBe4SywUnp4f2dF
OrFBjfOWkUQWXNlZ8u4ekU5EFXGKdcpmwc4V9g37f6QTQWHrZ2t1ssCxcNN3
imkGYa/ClRHnmgWxc/l+p/9kEFr6FrFunllQ0ff7W+TmTELAIifU0DcLspvu
NQftyiT6fBUdua9kwUnZMK07BpmE2g1ztdSULPAUaH9HpGQS3MrZryiNWUAW
6J1RFswiPqCp/sutWfj8pbVBancW0XFCgbAisuCNdeD3abUsIsi7vUKkLwsk
787tnjyVRbxjvgvOH8uCR2q3wm6mZhHNivKi5exkuBFU+xv9yyIydQJ44zaQ
QXq5UD6Yh0x4md5ld9tEhpH9KSXxwmRC6tKJr3LbyTDQSRlXVSUTKTX+d2v3
kkH8MyQTTmTCSb7tXKM5GchhJh0bOskE0uawpJwhw5XJoy2LD8mEiLHZ8ctn
8fX7Asa7XpGJJx6TylrOZMgmSTYtz5CJg4x1bHeDyeAYkeb9XoBC8MuZlvYU
kOFPTYbAxgsUwmF/yGHeMjJsa3B4POBBIRq0yt5ZM8hwOr6lyS+AQpwx+rvz
ewMZorUL+63jKETuxdo84X4ycAguXq2vphCyzE1UrwUyrIvb/eXlLIUIva2l
3rJChnyt9qw7ixTiYbvzIPs/MrRUSATGrVEIryd3t9K5KPBS0of16SYq0fDj
Ulq3BAWelBVUKMpTCVAdIAkZUuBG7OarDheoRIb2b1lHMwpY/ziq1OVKJaYO
yzyoPUWB5S3Bv7m9qESsZTjnYXsK+NxTbbAPpRKPApWiL/lTQKjNbogrg0pY
NaeEdeVRQC5M3KL2LpVgdLSKbiqhwIeQmyuPu6jEnwcfWv+rpEB92pk3Y71U
In9Yd+XrTQqQS4x+3XtGJd7/ng3c/oACn64/63j4nkp465zw9vxJgevfbYRf
racRExJHBmyXKKDXkxRZy00jzFi0FE1XKdCbe+ZoMC+NUOiWnFHkpEKlBMel
T9toxJfjiy7fhanAf+xoq8ZuGuFkmWfvp0eFIj3J0zcRjXh5IOOugwEVRPuS
Vp7q04jD2+PEThlTYaiyRn36KI2QHPEZUT1NhQNivfOzxjTizbkjZ365UeHb
g79uCf/RCJuLM6bBaVTYsGtEkO0SjegzmaxxI1Nh2eF4Rbw3jdBUGuS2zqYC
xX1Bdr0fjdg+196nVUoF2ReUkS9B+PlBGUf/NFEhMDYi62QEjTgRpaUT/oYK
IgmNUYx0GtHuqJTr9Z4K3SYrQo2ZNELpqNQf+89UiDs/+q2ZTCN4NmxqQfNU
mGrlOl1DpxH9yZNqrOtpcC3caVCviEYcoccpxCjR4N27WF+ooxF7/c+pT6jS
QNWtLWTDDRrBZ6oBmlo0sLEqmOq7SSPGWD6e+nqYBhd3LS9o3qYRAW4GVyyt
aXCDKVPa34bnqy9xnWlPA87Ikp5z7TQCxBZTNjjR4MOYN/t3AsfztKy4zYsG
E8XU+3+6aESpBke/dAwNpJWHhZ49oBEJ/OMvwkk08I4SYWj20wifmYbxoRQa
sH3Rmsp+SCMOFTjNJdFp8EvDv/3EAM4PZ4/QLyYNWuR3xYS9oBHrXkW53hum
gaCWxLO5Mby+dTa+O97QoGwx2ZlngkY8JalcCXlPg+TPjg2Sb2hErs67FMXv
NNDgSKXov6URamV6t8nr6DBbuk/YYppGiFwT7vjORYfyFg8Fkw80gsV6rs+Q
lw4H+w4E6H+kEY94isb/CtOhZi31sdRnXD8BLBwu++gw3MzJc+crjTAyG9rc
oUaHM5bt3LRvNEJZtl5I5CAdWtnfUXxnacTq6DmFgSN0aPwwdFD0B43IOkyc
Urehw4tNX4aPzdOIni3hxZzX6TBY2CzFt0IjtJ+GtR5LoIN6Bf+pFuybyVee
x6fSgav/zudzv2lEwYYQNu5sOmyTTQ8t+0MjQtf8HXjr6LCp4brD1jUaMXfH
L/RkAx3I3eTpSmy3EN+M9BY6vP7tuKr9j0acWfDq2tpDh6dfo3/bsNCJ/V/c
JYWG6aAt90PrGhudqKxwO2g9QYeWFjZXdnY6IeHsapE9RQfDDN1T17F5Jp2i
xGbpYGD4YCFqHZ34NHju3U72bBiWLWl24aQT+Z2ni+UUs+ETdTnrFRedELxm
2eqhkg3pPH9HDm2kE0mHTj2v1siGmveiMUXYIU0n2ZT0syGTO2OzCzedsKw1
dlD5LxuKBBpLxnjoxEMPo1B/22wo/iOUoL6JTujLGmY0XMgGzdD43ynY+0oM
utQ9s6GOXT5NezOd2EjXk9SOzAb3W1MKMbx0IvIMHAyLzQbjy92cL7CXtyKL
u4nZEHS2pGwnH52YTjkUhSjZIDtV7diM3RGj8e5wdTaEuBmhYX46cdlHsdhk
MBsE3lvZv9+K57/+V4jqSDbcjh75KSZAJwrz2sxF3mRDRY1IpSV2f78x66dP
2fCDNhzWiS222+N89Go2kL74aKYL0okbd/ZrerDmQMoCQ6Yb28BihdecMwc+
sx43XcD2vhZPSPDlwO0fw6aW2+hE13C5RKtUDjzbdNWDezudOOPjtVgomwOf
KDc9NLBnONUH4hRz4Ndp5xYHbAG1e1dPa+TA2FGbk03YrilTYz+McuD58x8Z
VkI4/sM7c/b45UDXzXvdV4Vx/MMf/TZfzoHj8zzPC7AP+NQZ/bqSA5GDZpad
2PZ5ur+7rueAm4V+O5sIjn/J1tqengP9UTv9rmEbpEjvP5qfA9QPFJc87BHp
rxsUSnJgdSjiVSv2OosrzSs1OdDkVyG+gH2mhr6d3JED9YvJwRdEcfz6F75f
uZcD5xuuNlzBjhiW7XXoz4HJPT8iydhVnM1Byi9zYEhmcaIXe/X8q8GHH3OA
Rf0msUeMThQJbs1i482F0h+XIwaxa0rvbjslkAvrOPZYzWA3q7rRS4RzQaXW
Z4BFnE4MmN/NPyKdC5+qVyl7sVeTXatitXKho23VPwR7vfgWhde6ucC3I0Ep
CXtLTRtzz5FcOGEZFZePLdfP3/DALBfm9J5rd2Gf4Wxr3+iUC+09j8TXS9AJ
B7KL3ln3XIg5aey3HfuSNH9PtVcuXPdxDdmDHaPv0mcSkgvmdoGVBtg3wvle
pqTkgukYHzMSm2fJ6fOWllx40unDnMEWiuX1dGzPxe+7tDdL2FKCrbO3unOB
TTh6iH0HnTioyrtgOZALW5+tkxHFdvVuWaNM5cI3BXOzY9h+a46RHz/lgroT
24Q5dnjy5nWas7nAklaObLGzqh25hpdz4W6QRLgPdtfHTQKim/Mg0lZ+ExX7
cVAz5eLWPLi09YV5IfYQh6Nwm1AeOLGvc6vC/i7VLGEnlQf329hyW7HFzjvI
FWjmgSGvrdUo9uWh27pSjnmwBvtEt+/E9QZ7I4Xd8qCw0ylVHLu/Mq+b91Ie
jGgGfJLCFguJOb4alAfvYylGytgdwhYWgwl5ILpux/Ax7I1nvznH3cyDPJ62
E/7Yqt3nK6825YHSmb+ng7Ft5V9+8W/Lg3sLZmevYtf9afU+fz8PFhJtdsZh
W+bGh2iN5AHTauNrOnb+uFTyDGs+KG0rPdqG3XuU+uQtZz7EWumc7MD+Ubtx
yxB3PtQvXTLvwT4cPkfpEcyHWeVo7UfYnyRwC5DLh0rP+rBR7P3nbRpOmOdD
xRu1ySXsnndpo7cK8yHAe6Px3l04/0ryCull+RC6+ZWcIrZm6L0wL0Y+XBQL
ZFfGruH/LS7XkA+sxc4VB7DxSfx8fm8+CK5E3gZsp/wD0/Gz+fBp4SP/Gex1
NiOzdocKYHZxCzUc+8gzKbYNQwXgkKuf/Ai72avVZyqrEDpm8n5HStIJklD4
cKhKEazXX6w2kKITys8K84+NF0G8lYCfsjSe758C2cWYYjD/snNabDed8DRq
rbbdVQJGEuk589h3K1QTl/tL4LHDm2NPZPD6yT5wNHEvheqPOY5Je+jEnKgW
a9S6MtjCkVV5QJZOfBPn+vO1pgzUhg39RrHLDi984zUqB10WcxMXOTqhEqyr
47ZQDgeS8sW/YV95WnI9OLMCDhTnLtntpRPj2dMZHvsqYXXaU7MLWzAgdjV9
qBJeHf/+ZLc8neDy1T/nG1QFNgfETl3Ffh5mJxG7iwGu1Kfjo9j9NpeWd0sz
IErosu04dqfm1ef3ZBiwVl8/OoFdv5Aby6HAgPfl06NvsVM8x2Zj1BkwL54x
9RHb2PYsEW3MgPRfT/kXsHu0rc9HBjLgrFLPMo8CnWgTdj+4K5gBf+uWkzdj
31oKFugMZYCp/TFpPuziW7QHLBEMeF5sbrkVO0J+SDkigQFBEpFdwtiHRP9j
vVbAgCvBsSMy2I2/LYvD+hjQE/Jvi/7/x48a2n5/iO8vIdx4GLsrVWebwwAD
DlzItDqKPSAtk3DsBQPmmhpLjmN/Mlvy3TLOgP5kDuMT2GIldL3KHwy4lnng
rS12jPHE5Ivt1XBMS8wvBHsj5Xm2gUg1RB7sNLmCnT5537JFrBrsgSp3FTs/
sO5B/q5qUNac+RyB3VwQUe8uXw3mMz3X47G/zktG/NOtBubyEyUa9qlc1x3y
LtUwPbDHswVbwPEx87lbNbSHHeq9g/1KTlU39GI1LKaLybRj2zSt2fb5VMPp
fLfvXdgOz8nZrleqIW3u1I1H2D4begRL06phbjv5zyS2yhO5MuPMarC116dN
YS+QU9XmydXgdeeC1gfsy1JnT+nn4HHnnaQZ7HDdn2mTZdUgJt95bhE7OWAn
j/idapARYP7kUaQTZtqxOT13q6F1i8MoLzYf29e9nh3VEL/rSt8W7KzUJsM7
93A+6P63hbBzGWZx1k+rIb/v4KA0NmMyjI0yXQ0Znzeo6WL3mgwvb+argVi+
kelAbKEIKTfSlhporxCwD8F2u3XpNbtgDfAVvxoLw94ownZ7WbgGhIKkZ6Ox
TT7u9X8nVQPpt7ScMrCfR4Z9a9SogW/5W5vqsaUa79sqH6wBe0ZQaQN2wCe+
R4xDNcB75w29GVvwRBmjQK8Gdp/elNeBbSU24EoyroFxoyHOZ9gTt3e8sz1X
A/tVDgXPY+/74m7++kINuEzQZ5ewI8QbOsydauCmqpTXKvaumOMFBu414Gy6
kcShhPuPua+tsn8N3OXaf0AI+8tM1yv2uBow75iIQtiLO10eMpg1QLkTUEnB
5r3f3Sl0A89PTtY5F1v24q7m2Fs1UHBIWakY26ZxrNShuQYmV2ena7EJw1Ph
Il01UAJNC/ew4/1gf8JgDbxLVa9bxi7anr9n+XUN3P/49Ng/7Na2P+IuIzXw
28n+O8c+XI+cTRv139QAv9rIxa3Y5jmK71c+1cClDxsk9mGL9IhQ3VfxeMVk
jDu2qntw8uu1GuCUShTzxTbZ/Cr6KGstXPjP4F4wdrhVus8uzlpQV/5qFI89
9XW90TBvLXBL3txfiV0j+Gv1uFQtyF/fSp3BRq5PHGSNauHWwj+2KGVcP/H5
Sg9NauE8NXN9Mvanqku/L52ohfU+zbI07LSv3Bm3LGuBEjLTycR+53u8U/dc
Lfz57GU1jh0b1rnjdMD/n1dtDfvx+SovbWYpqBZ4o/KMTbH3EeeaskNqwWZu
yd4Ge4h1zWwyvBa2NojMBGDvjTsYfpFUC3vIvaXV2APpt8Yi83G8n4X4dqrQ
CclbUZXSRbWwTSzdZB/25ZfmAb0ltfCtQOeGLvbO7T+4N1XVAqx0L9hh++Uq
aNNu1UJiQrB3Pva2ijI680EtVDa0puxRxefFNuqZ0Z+1kMAxaGuvhs/rRsZs
5r9q4bj+2E4/7N1Da7X3l3A+Tt4TjFX7f/9w5ri5Wgvb1d5lMrFD5NUa4jmZ
cNTn4SzrAZy/7Kf86iJMaGujNt/EDpaNuVstxoTSG94Dfdhnb2u479rBBJ1T
eyXeYks+z+/gkWbC+czzl/jUcX/nuuQ9pciE6N5rw77YD4O5HqfpMSEgftEb
NOgEk/NuMOcRJtCfW108i52R5SMdZsCEv0fnGEHYVvWvr7gaM8Erzm2lFvvD
x7K9uqeZQE2emd6hSSfY/tOPn3FjQmq6ZTq/Ft7PD1w5bJCGr2eFN/u1cb+7
or+XI5MJftkPpc9iB3Zx8feQmdCcTp2Iwb55gjahl8MEw/CqW8PYCh6NITrl
TFCPp24jHcL5L/hep9bGBMeX4xwsunSiffo2Zb6dCeu7+vT3Y9sphF+92cmE
BBkdbkfs7BYeY+VeJlj8MTryAFvgpdwH+edMuK/+OIqO8H7J5SQm9YkJeunP
P1rp4fe9E/Ls774wISRAviYT24Dy83PhNyZcXDez/Ql2jFRkk8Q8E+4+8Pl6
TJ9OrOnkW4isMeG2unWL3mE68dNvKJ5foA5ax+Xb/juK67mlwPvptjow9CK9
zcPex+J6JlW4DoS7RwbeY3sm/5LatKMObEcTuQINcD4rthAb9tZB26e+wwXH
8PNmh8t6FerANc7sywy21IGipNh9dZDiweupdZxOnO/aZ7PuQB2ct1jZ+Bp7
bcMSdGvUgQDrqsIeQzqRd6J9T9TBOrA8PqsajH2Icn2znk4dyPw9JNmPPTJm
8usfqoPkBcvfYkZ04n/0YbTI
          "]]}, Annotation[#, "Charting`Private`Tag$68787#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13c8lV8YAHAjIkqUklVWP4pSSUa8TylZkVFJIXuE7JBEZG8u97rIHncg
IzOvlVmahJBIy6gQifQ79x8+3897732fc57nPOccMeubRnYsTExMzegP4//M
wrqepj0/5mgZEDW8v7HZs9D/2JncRSyDuYhZNece7sc1Z78nlxX6sz3+y21w
xU+cEalO9NgKoUMF/dRaT+x2cxHTptwdkOHTZxIuF4mNjKgXY1ECwBurrzZZ
n4SprAyev+0hAlcGcsRjcAL2LOpEwDtZMRCXWmuyiyBif9NDz6/mSMCqVOuU
i0sGJlv0fN9u/v3wzjCgdqCGjF2rFlpSiJKG1et5FotpmVhsm0OX0d8DYFic
pX70WBbW9KIqw91DDkZNj5rb5mVhs+P/XOOnD4OMfTH7+aUsLH65cN+g7BEI
5wpZVD2WjRX91d0ybX8UEm9eODdtl401b1pYXMw5BpGm4pxZidnYIBdxjOWd
AgwJ2/PKPcrG5vnUu3j5FYE9slPo+lA2JioWnXE4Sgl4zlseHdv1ALujJn7q
hocanGxVKtCPeoCJqsqc+5mjAe7Ria9+HM7BKOrrjb/VzgCh6G/Ez5M5mOLp
5/JM786AE9no5ph2Dqav7SPIw68JPQdFt/nZ5GBBl1vnZKO0wEpoe1UzIQcb
87qS6uhxHrSvKrfVL6PPD3b8+J5jDPISm1fvU3Oxu+/Nr2xbNgapYyVPD9Xm
YhVflltldU3g8YaH9ZO2XIx3TTrF6ZcJTBHe32gazsXe7I07PqV9CTj8Xo4O
sudhZk4XAwYXTIFrc7Xke/M8zGF9mvXxGQswiMV/KTHlY0S2uy7vSBagL+i/
b4ozH+veJjCwOm8BTh4prnd35GMHxHSKFEmWcIXatjVhfz62In5Zcsj3Oux9
eCZjq14+1nCusdOwzwp+v2s4/yA1H4OkUK6z3rZw2UQnrU+4AOsa36XOkmkL
rwu5A+wkCzB9WYo73m4Lu6ri9y4fLMDMu14MKO+wg0/MTY/WVAqwgL8iOYcq
7WDyiIpKhmkBVu1UpyDwwx76f9smHE0uwKRPz5nP3HAC2tDYbrV/BVh5QnBi
SYoT7Gh/v+0pWyGmOLaj3a7RCS6zyLgZcxdiZ/1UpCe2OMNobstBvT2FmHVZ
xMKbUmdgjnoh//loIZYpKB7R/PkG2C9c3/7MthDjXbxUkWTjBs9OvFAoaS/E
RM3FTCKi3YD4dJvumZ5CTLZrZiXwoRscleHKGekvxLTIwZjjPzfQ3G9+YHm4
EAvSoPSrk2+CXDvp59fvhdhyT9Cyj5M7XOfwzOkTLMJsBF/tlMj1gASOgWNV
LkWYeqOf4Z3t3vCy39KrmaUY2/fqa3+2lDckxYnxRm8uxpi/mum1qHhDWVuF
pCF3MdaxS+0cq503cLw07njJX4zpeDKrRdV7A3n8d3GWdDF2SSZammDtAzmr
Qsb254uxm+nkf7RqX7DZmacxk1KM5Xg100dN/WG+PsBNaFcJtjpvdIDg4g+U
lR9WNXtKMCPnz0Xng/3hm9ZAkZ5ICbbJantOc7E/1K8SdbwkSzBHfevknGV/
8DAF/9yjJZi8DPst29QA2LTiNhKmX4Lh4+dh9vlt2JPMmxMcVoKNa4+9WtMM
Ar8PSj5M30owO92AOevnIeDs5iuWTS/F9p0aypoYDgGCm4yVbUUpNqqoqG/x
MQQeLCUvSVeVYkbiC2VXVkMg0c77Or2uFINVJ/cLEvdgl4/4mbz2Uky4+Mqi
2q17wMeWkXlyuBR7zaK8KrA3FA4PSr05zErB4n+nlabJhMJiwpRZCxsF05lf
urJTIRQe0L6KGHBQsJbhigYe7VCg3ArOcNhKwcoqpAPZvUKhj3cXW+huChZt
IfBvsTMU9Dr5r1odpGCnGlY2PXcLg9GlGo88QwqmZP1ZgegXBq8dA8KeGlMw
+S1vba3uhYHjjc05SxcpmKjZo45FQhhkLZ0dVjejYH9WvcMEHodB2z8jaoM1
BatWXmC15roPSQXCSTpeFGx//SzLr+L74Hi3VTs9mYKJWI0ebX54H4bVzy16
p1KwnZxPrSMa78OzY3EVBmkUjAUtzD3P78N1iuD+dRIFe//b6Z768n3YKZua
djiXghGVPjNHngmH2/tecy2XUbCEicEjhvrhsF1Ipy67goKFR3ZaCZqGg0HS
nzyNSgrmM1TYSrsRDm3HWRdCaiiYkZ9tyMvkcMji8//T30jBuOo+MAl9CAc+
F+0fxC4K9uNCenjtTDhYfhQ9KtRDwd581eM2WQ6HX5XCD9N7KViWUN3uOK4I
uLR7cTnoGQU7fDf+0L/jEeB3/OQF1tdoPAJnqskQAR6Gf8HkDQX7XbGqrKQb
AT6Kp8jZAxSsddL2rMf1CDgeMbV57xAFM9ZUvTYVHQGSH7aG94yi+X//48Nd
QgTIqF/1/DBGwYT9ihyEcyLg4FWLgp/jFGy6lNfrYk0EzI/GHP8zQcF6T3f9
/olHQOGmH7DwAeX7XWBQfG8EMA/B5w+TFOzW1i9RXe8joF+LaFT8kYJdK8ri
sf0WARdrjT4FTlMwwIwJTL8iYNLa3lP7EwXj9GjOUd4SCb/PP6Z1fqZg85ze
+wd3RkJfNhfnrS8U7FWeDM1zbyT0Xg4uEPlKwchvUmupCpHg/qNpUu8bBQt2
1VHTwiKhlL1PbgDZlp2p/aN2JPy13PhtNEPBtB7UaIWYRIJ0STFrJ7Kc0o1+
EctI+O/ZAO+hWQrG93KfSYNTJHx9WyIcg7zsNDh8yTsStn5ZfTGKPMISa7kY
FAmR7+6Ni89RMJx8ajohKhLkXT+KmyMXKKw4y6ZGglVzuXUMcuQz2o/u7EhY
pB+woSO72Fv72pVGwtkwrg9tyIb/dq8zV0dCF58UsQ9ZkfgsJLs5Eh5uc9fr
QhY8ErpZtScSiBZ4ew3yRo9S3NvXkTCR9eFfGvKU9Tyf93gkDN0Tvu6M3L2W
T9z+NRJuKvrXHEampV4RpS9GQu735OZPKP5EOZ4C7Y1IyGjJVE1A9unskPnE
EQUZzsc+SCObWQaU39sRBYZVDQ5VaH7Ufx8+vlc0Cmi0pPBDyOJJ0w2N0lFQ
YjU9S0Lzu/kAGUyPRUHxfUudXygfs20XOpfUomBrYOx5QH5xlV0vSSsKKkPZ
ygJQ/qqXGl/KGUcBW/sf0QKUX1Kcx+Ve8yjAq6v1m1D+g/b/N2bvGAV+K6Uj
bag+rPFRa1avKCj6vHKzFtXPwZ/n3E5GRgGZucLPCdWX3skEL8nkKFi2f3Di
JKo/l4hBP+7MKKBe8xDeeI/GL2IXOloeBeImmkf0UT0/daRFdtRHwff9F+rf
vUPxVi3G0dqjQI7JQubyCAWT1blHDHwbBeOeM9G73qLfJ/Rk2X6IAtNu7edX
0PpxmdierzcTBc+2nSiMQuuN7vuALvwvCmLySwbozynYofymtqb90cByJ/nY
RicF059n7S6Qj4YBllC/zA4K5qas+yxWJRpw4ye+km0UrPz58Ntr+tHwrrlJ
8EcTmi9BsbEzptEQWXhk6WgD6gd2jpOy1tGwVmX1y7wW9cP15dl1n2ioTGzv
dH5IwS6cU1/4eDcatM1iW3RRP3JPvr/yNCoarn8o3eCjUrCH0jtZsrKigeRu
xWlcQMGOXjyyW+1JNHy/+qEijoD6UY6fsNTzaIg+6lJNSKJgnjO42NbhaDB/
UhYQHEfBqkL0Zcdmo2FwOtZvPYyCKZTdOHVnZwxcPsgeEOxJwUxWKzXtRGNg
pZF5W5IrBfM+80f3vHQM+GBSBsGOFKxmJPKSyMkYKOzHin+bo/reXHTjsU0M
1HL+133qHAW7ZDTnXugaA/OE9rtKpyiYb5aCb9ytGNDbJ67NqUrBao+1B5vH
xAB5UvzEiUOoP12fIPytjIGLBDXxKj4KZkr9jzzdFAPPZ4nmzlwUzG/ZLedZ
Zwwk0UcnltF+VR/7l5I1EgNmhnxmcUulmEq9YIsaSywMnidVZ74uxQL7yj8s
csVC4+WH0gJ9pVjz2BlWCn8syHx2CbZrK8VOsdzU3CUTC2tLA1OeaD/V0m1/
Om8QC7f/s8vWjC7Fos1N5wuuxMLlHjYL9eBS7OnNOZ6rNrEwt/tnE4tvKXYh
dbdxl28ssJUV7Zq/XopdHrsx/CArFuLwR9zqCqUY8TvT2sXiWODtfLMRLl2K
jTCnCXM/jIXPBC+2dOFSzGJ/i6VfRyy8ub5hzbmpFLO/ufPThZlYID8UYZV8
UYJ5Mz9eYFaOg0DdUc60ayXYox1GO+tOx8G7Xv/Mdb0S7LfU5+NuenEwxMWj
uletBAvU4fUfsYyDbamgmiZcgoWm2P2rDI+DAqdbdkpD6DxU+GefU2IciIhf
CXTtLMbY6xJO782IA91CoYwr1cVY9Gj9/Rh6HKiYyzwwSSjGkqW2cdu+iQNi
kp3vk1PF2JsT+XKC43HQXVLzPk+uGNulo2Tw4nMcaO4Y+Xp0TzFGcrNOPrkW
ByUFzvudvhdhObWPBPjF46G/ZUfTPmIRVq5tKdV5Mx7k+qtbnEcKsXG9hkyD
gHhIcGo/LIQXYtsu8O8cDouHdTqfqHN+IeZyqY9llhQPlHsE+ynnQkza5sQE
b0c89M2O22O/CrC8QB6yuUACTFNl1qgr+djLu858n8UT4NtD3g+ag/kYU+iT
KHe5BDjnkxdwrzofs4i67Rd6OgF+LYucHb+Zjwmlfb5Y6pIA3JHe80qTeVhq
Ob79V0sCDK39PCv/KBdrrxSMDOpLgP1Lvv3yCbnYQo3Pv82DCXBH7rXahEMu
Zth0cF5wJgF+v1w1NxTIxSI+9tnlbEmEJ4e4C/N9crAzP09odCokgqzhMd5W
zWzs8ZbtG7xRiXAv+1HvWDkR87QL91+PSwS3hYc/1cyImHTL+tKn5ETojvBx
8t1ExJJ9vs40ZiZCnAWP3h3TdMxxom3YriIRro9smTj3j4DtfORTU/82Ea6J
X3Xo1UnBXKzeuVjtTwKjWwtPKyZiMPEmwy+6B5Pgalq3p6lSDPZ2V7eNonwS
sCQmnwxIjMZOP60241JJAv/CytfY6ShM4ES8Vs35JJB8055zlRaOtXOfkuT0
SYIx9qXdNdkhmGBd0buK9iTQW09UTjjgjmlyMbGw9SRBVtdXH/73rpinxRXp
K/1J8Kw4u1bP9QbWu4nbh3k4CXpE6YHENHvstqHHNqP5JFiwOBLMr2qGjX5T
PbUokAx/ZjbafX5r4BzqBIdzosnwbRC7lluthyskzceRJZIh9YrcO/VyIzz2
RO6IxqFkcE51vVOkdhVXC2P3TtVIht/+948qLNvh2SIvi467JUNRgf548UdP
vNf9wLMor2QovUs7mfnWC19uD10c80uGwJKnhvrd3ri+syKEhybDzDUN/qU8
X/zfI/LwIDEZHlTs4QtQC8CvX7Dn9mtPhgkpZ8essGBcPHTNo0EgBU6EyDV2
RYTj7+tvF/0SSYF1fk6vhbFwPPPH2oi8RApo8jgeOnosAt9lsa5RLJcCJQTF
2ZWRCHyL8l/+1NMpEJ/wj+nl3ij85/xGvatLClxWMQ1SDY7By6Tuzpd4pEDH
+Lae2O4Y3PnaP/GPvikwS6m34tkei3/s+RdjFpICErzvTCoyY/GhAiaLc2kp
UFfGfCOZFoe3mLGwiLWkwEzfzEWHkgT8TtI9xWtPUqCeZ4di4ccEXKWb5UZ6
bwpsbGjaCWxPxKuPs77ZOpAChRE5RzJ1EvGS7ZuK/nxNAYFwbidyYyKe0Mmm
82ZHKkg/fZ4qH5+E6/29H8SzJxWInr2d+4qTcA4F9iod0VR4ZJM3+QRPwu/l
sgu3SqfCBRVWjiM/knDfwM3zdLVUCB3j/p52Phm3OMqZHOGQCnNS2Z4X15Jx
5dNG4Y4uqfBvfXUuZFsKvtOIHKDtkQqzXzvqfMVS8B4PORuu26mQYnpbuVEz
BVd4aKiQEJ8KJ+HxJB6fgnPJZwym1aRC0InOGXn+VPwTNtV7qyEVmvOUOCSk
UvEWA1ncFE8FrwDv79MKqbjvzeZiwZ5UcHj3Q2rCOBWfLJv0yx5NBV39ysDK
hFS8Tu6gUBErAc6H0/5g/1LxFDVvnggOAviw5xz04ybgbucfszpuJcCUelx+
5B4CLuFqMCuzmwAnnxLGjh0j4PE0r8f0AwTYPo/F4bYE3PZgk2WNIQHEfHVb
OFoJOKbKZpJ2iQDpQ2fql/sIuKCuvtatqwS4s99rrG2QgD93npBXtiOA0R2x
2t8zBFyFsonlsR8B+NwSbn7cmYbzypwv6HhAgM64pJ1brNJw6yP+GjyFBJBM
sXrW75yGVysXTl6hECDDrq7W0zsNv6Tzd9/3agJo8z/ovRKRhmfeoGft6SXA
6c9Ldyqoabh02dZ0tyUCGGhLfnszn4YHPFJWrF8lwJvVptTG5TS8r9lugPUf
Ad7aifhEbKThbs8f7yBxpkH7qBvzi63pePUP18R20TTYb5pdLHcwHYdj/VEC
2mkwLrX1jrVVOp6s+kfaRj8NjsadOdTmkI5PaezvphungT/d9w+XWzoebhLE
rmGRhu4fR6stAtLxpz6HQl290qDk3LUhzuR03LQuPrAtKw3WF4SM6I/TcUpL
g9DW/DTgmq9YfdaWjq91f2q4XILez3Lx/WhXOp49rL46W5kGkTzav568TMc/
/pn32d2dBkafnrf0fUzHb6oZ3HRZSIPvJ67sGdxMxMdFz/RfW0mDBs6YEDoX
EddnUpY7v54Gmu9NzvrxEHHZdvEZOfZ02HyV1fXLLiL+TWvZ/vuedPjro9Fw
QoqI25pkWXieSof8y/suVmJE/M3x5MfWmunQ+C569cVpIq6xO0LYWDcdOOoo
itNnibj4iPvIsYvpcFXyyeK8LhF/b3nm0i/HdMDa1hyjLxNxsxsz5/0S08Fj
/S0/iysR79GboDkS0sFXRbM48iYRVzo0wHUlIx0k1BakN3sS8d0/m3uUC9Lh
YXbqyDdf9H7f5LNrtekQfioo9UIwETe4p6wW9D4dVsWq7lGSiHizzaFMt4/p
8N/EskBNChE/dFZizeJrOth9H5qrIxBxbo6t9dhiOhTA5os0EhHvjZtQYN5M
hDM/rQZO5RLxM6QI2bBDRDCRC/OAciJ+wMtScfwYEeZp9f4cD4n49vMnQEmZ
CFrpmVM9lUR8lOmz8awGEUJMfi0pPSLi3o6at02uEKGtR6KgtwmN97To/TIL
IjCl5XRYNhNxEF6O57AlQuGMC+t3HMXzojCvyY0IWwtTO9faiHjBCbZeyTAi
mAsMCrzsJuLRvGOvg6KIwGq7m6LUS8TdZ6rHhuKJ8LlDcSqjj4iffGD7M5aE
vs/m3mzQj+aHvUPgVxkRLo6KhAW+JuKbBu85PBkmQlWZ4Mufoyi/5WYee98T
4alttB33OBF/EXX0tv9HND6D69Xi74l4ptpkvNx3IiSbxaSd/kDEFQpPPSJs
IoHM8ME9RtNEXPDunpbvnCQwnraX1ftExJmu/OzR5iGB9uwR79OfifhT7tyx
v3tIoLw99pnEV1Q/3kxs9odJIFnIwt04S8R19Ie2tSiQIE+xgYs4R8TlpSsE
BFVIUP5uLM1jnoivv7OU7T9Dgiu0NypCP4h4qgZurGhGgrKy6eFzi0S8gy8o
j/0+Cf7OV0lsXyXiqi8CG85Fk+DDN27jeuTKuNuvIhNIoMZa+9XyDxF/wOHP
wpVBAoJebEDhGhEP2PCy5iknwcOKYOsdG0T8Z6NnwIVqEpRWJ06XIDv6eyQn
1ZPgyLjFuuo/In5pya1tRwcJmiqD/pgxkfAj35zEBYZJoNXyTfkuCwkvKXZU
uTJOgpcaf+1ZWUm4qJ2DUcYUCe7xKBvfR+aesL0nPE8CMq1t6d4mEv5lwHJy
H2sGDF7KqrNnJ+HZrRfzZOQyIPjiQuogJwnnv2vS4Hw0AwiNyyMnt5Dw2JPG
r6gnMuB9GH9YLrJ/7QWWQ6cz4GFczDZ7LhJuQte1Pno5A4imZfmj3CS8z1kn
wOsa+vxhvmjFrST8tLR2crVVBuDZIX/ikQ/na7YpumTABw7JRNVtJHwL6ZS4
akgGUAJGZcN4SHjIJVAJDM+A7ENN7K+Rf+/AjB7HZMB25szCfdtJ+HT8yXtY
WgZMWRbY1CG3hJ2Y1KBmgAHxNDbMS8Jvucvl6Q1kgJb/BYuPO9D4N//yPzaS
AatsrxaEd5LwnKwmQ8H3GdArxFdigtzbq8v85UsGYB9eBLYiC0s5Xw9dR+Ob
dFBK4ifhDxuPKDkzk+HYUO7+dmRNo1UeQ3YyfH2hfn4J+ebdSFx0OxlGCC/O
m+wi4W3DRaINEmSoveblzLWbhF9yd1vOkSZD/fMS5xPIM+yK/RFyZLjtd7Xe
GnmnwpM7F0+QgU/1woVaZIf4qdEfOmTIdv6UbCqA4tfYR/7PkwzB9xva7+xB
8Q9/9tx2iwx6NOZXD5CPu5fr/LpNhnveGiatyBZZ6n/a7pMhr0mxmUUQxb9y
7YoFiQxrgTs97yJrxkseOZtNhpdt0fZZyCOSsxyy+WSoInoPNiBvMrpdt0oj
w45/GSJLyJdopN2EFjL0bQvxsxJC8Z+2+n77CRkGytyrbyMHD0t3WfeSQWPT
VAgBuZS9zlf+DRkWn3wZ70Jevz440PeZDMRLBfh/wiQ8l39HKgtPJpzhcgoe
QKYVPN5lvDMTfNZ3m84g1x1zJOXvyYS+EKt+JhES3m/4OPuMZCYMKM6lHUBe
j3MoDVfOhIm4WS9/5M0ifLJv1TOBu83/UCwyH62p7L8zmeD7zCMiG1mml7e6
Wz8TxD1aVduQL7E3NW+xzQSzs40im0VJuDXB/tRVp0xQKVD23I3sKsnbQXXL
hIW0i/7/IYedtu/R888E2n82JZrID4O2v4mPz4SiL3/pIcjcK7Zf+eoz4bHy
tbIZZIFwHheb5kx4eTjs/QqyBH/DfFV7Jjp/uA2x7iXhKsd4lkz6M+GFx3cp
IWSHm/UbaVOZQJ5T0T+H7LlhE/L5SyY8n5kZM0QOitu2SWk+Ew6MJ2DXkFOp
NpzDvzNhm+HmIHfkts9bdwpty4IS3R1b05Gf+dal3diRBTJdDYY5yENsNnua
BLJAO2DGoRT5u0SdqLlEFjrvfiU3IAtft5Z5oJQFz7+eMn2HfGvokbqETRZw
fuET2r0P1RscCNnjmAUfJLQSRJB7S7LaeVyz4PXFy18kkIX9w7TWfbOgbre/
jjxyyx4jo4HoLDjlwzR8DnnL1Tm7iMos4OIlG3ghH2u/XnKnNgs6OUcv+iFf
O/jmm1dTFmRfkrt6B7l8reHm9c4sENVS2heBbJIZ6a88kgWj+KdBEnL2mETc
DHM2LJXeOduE3HU2/fkH9mzYFL/rQgvyD/oWviGubPj9TNOwA1kj6GdaB382
TJ29qvoU+YsoagEy2XB4MTzwHfKR62bVBobZ0CrAMbGC3DGZ+K4qJxsElQZ1
Doih+T90UDapMBvumubKyCErBTwJdKNkA+ETxiqPTOP9IyJTnQ244+Hi48ip
YHM9uysb5Eu1HwGybfbx6cj5bMhUovJeQt5kNjJvfvIBFJo/TQtCPvNSgoVj
6AHQBidjnyLXuTW4T6XmwO2/U6sh4iQ8SiBoOOBoLkhXkimaEiRc/mVO9rmx
XGC94XRTXhKNd+2B9HJYHkzv/P5eWIqEu+g0UK+J5YPrl/GkReTHxcdifvfm
w8K7JoXn+1H+pLtt9JwKIJnkj8X+R8J/Cikz39tUCJcnxe2OS5PwORHOtVla
IRzQ058bQS7UWJrj0SmCX/Z3De1kSPhRP3U1x6UiEJlLkZlBvv0i/75fSjEY
tNzFzA6Q8LGM6WTnwyUQrtun1IjM7x2+njRUApuTt03tPkjCOWx5AzjflYAD
9ZXkHuR148yV4LES0F7/aCeI/PFY5cLNyRJ47Lo0LYxcvTj25fxsCRSV42Ni
yEZexwc4mUrh3MPttIPICZ4f6SH/lYJpw8d2dWROj9OWHr6lkLFz+JU1stKY
eqWIP/p8otKGDbKjtipb7+1SeEmulbZD7hRToIqHlMIWwo7bDsj3XkmtvI5B
zz3U+F0Y8R3jTFDMLYW5yYN7fZDnl583r/WVwl5+7shwZBGbp7wl/aXgsflP
WgSy3vNuW5OXpfBThLkwEplS3LqFPlgKHN+uNEcjO5hWXbL4UAriC97T8cgT
9WnzLculsGq4kzUd+VWguWi4GAVEiLy3ipB7zVx/S0lSYDL69/Vi5FalO6+e
7KeARtuAdglyxVJmOJssBaZN3QUoyPEuo/NhihQYJ+8opSPrXruKh+pSIPZA
UHo1cofqleshPhQYWYWCVuSmPU4qYn4UOHcj90YbctWK387WAApc2tZ2pB05
r4rYzRRMAQM7xYYO5OCDQ/LB0RR4f7qtsQv5pNBl5rsPKPBdRDT4GXLNH5O8
wB4KlFrmsg4xnp/Vvva9jwIdGm4EhtsS1HZZ91Ng7+Sq1DByv+T+6HOvKXAg
WktjBPmL/ooH3xgFog7nuY0iC+eTTpX8oKD9YzR8ghHPXNya4CIFSNy5rB+Q
ZZTu1cT9osCvqZkghhWfOct4/aGAdusWj0nkCyuqvOqbqHC2RVbjI3KY7vjE
691UcBbdyPyMvCXtVYamIBUKirYzf0FOmug0qRemgmtAmA3D2T7l3dliVFB5
Hi7xFbnuQXCF00Eq5NXWJHxDVv/m7TwqR4Xj+5M/MfxEwUnSQJ4KHj6PVWcY
+ewxJCocp4JP8MoEw7OL4sH/1KkQ/qpu1xyyp/puFc9TKL4XfZYMr0ZyLX3U
oEK3hlAxw+yiSw69WlQovWQvP48c6/hFTE2XCuevmnsyvKNq9F35eSpo5ERU
MrxP64kBwYgKFTUuct+Ri5LrOTkuUuHmjLgjw3Jj9PaAy1TglmXNZVjFM+3E
9WtUcCcqbf2B3NIU/fOVBRXuyEQBw5qb71LPWlGh6/2sB8PGmQ57D9pTIdAp
tp/hnTbPyl45UkHkqe5fhgdljqkH3KDCUHeqzE9k4g/iMzE3KoinWBszbFa7
ca3HnQqeFhUBDAsH2c66e1EBs/B/wPD4md7bAr5U2HhS18pwDpc8V4sfFfb3
OH1g2PoVIcPhNhXkyBEbDEuS1mR4gqgQfXPrngXkT5ZW9Y+CqVDpvyzPcMn+
Li2LUCoIzalpMuw0JzvEFk4Ftb/jpgwfqE52oEdSIXbsjSPDswG/l01iqBDc
KujLcNkpi/D1OCokjFKDGXbn6OAvSKTCYevQSIaXCAkKiwQq/AlYSGD4lsRV
49NkKqQUn4plWOlby+TXLCr8OnsknOE/Ffs9k3KoQA/VucNw061YZuV8KhxN
jfRgOEh9IXGikAqrlE/WDAOb6b7IEir4r1kaMszy9HH5YSoVZOq/n2S4I1kC
e0unQtDuJCmGw69E9QdVUOG7NsbFsNa+7+b7q6iwEPprjjFfWz6bzD2rocLf
32XPGH5Kbwj0qaNCxKg9heE4733cIo1UYLMWCGNYXzWc3PGYCpuPPTZjeDvL
7AGXFio8+yt7iOFX3YYNO9qpwCRgtMHIf2pCrXbjEzR+Nqk+hi9dEhm27qZC
gE52KsMCIqGOW/pQPTs/MmM4k6IfceUFFcr0CkcZ9WjhUb2L+TUVbuxyJTK8
T0mwqGSACtBXc4Hh/CfTHSsjVFhnoz1i1LttrK7JgzEq9KXo2DK83/jhlOYE
yp+w3jaGKROBLGnT6PcOmV1mrCeX4skktS9UiMQvL88iH3LTEpv+RgWzqxlJ
DD9c2wEKP6gw2/aiibFePdv8n79bQONJq9FjWCHqvUXoLyo0h7UOMdZ73S7q
nVd/0PpqkZ9m9IeAse1bA/5SYZT/vh3DJwt8M8WYaJBJmPzA6CctR043urPR
YEqC3M/oP116w7+3baeB8jf5W9OM+QmWcIzio4ENofUDo185Vrm+ZeWnwe6V
Ui2GtwiyPPq9hwakECeuKcZ+8/mA16QEDe4fj7dm9McsQZ/Ja/tpULvpTNl7
xn51Hjd8K02DC0cnfo0z9stqY/mncjTQKi3xG2PkLyRwruYEer7lvi6j/0rU
dF6TV0Hff+Hnw+jP3l+2P6WcpEHpMjeZ0b/5DQopD07RoMVqcWgQ2VS43yFK
lwZ4Xbvoa8b6fbR38polDdajent7kQ9/czJ8a0UDVTMKpYexf4hUtxja0sAg
Nvt+N7JYmNYDTScaqB/Mku1k5NPQ45q8Fw2612NUGftTTVhjH8WHBgOq9T9x
Rj+sY1OV8qMBIdAqrxm5WDRjj+AdGnjZ/lxoRP420zbIGkGDcN8qg0fIqnu3
agZF0YDbxXyIsf/FGl2u+R1Dg2dSe69WMfph/UzKXCINdM7V6Vcw1nf4TsO3
GTRgm5meLUVe3mffRymjQei68R8yMk9ne6vAQxrI/dghnYEsfUOsLryKBnMs
jgZERn+rGS2wrqPBNoFb0anIuLZxkGAbDXI+cZTFIkd6wpHoARpUKeaRbyPn
7s7+7/dbGkzWPLzsj9zQtCZiP4LiYeflvsXoR+y1W06/p8FQwx1zT2RDstzH
1S80uPv6bK4jsmCHYLrTOqqHLo1sY+RjTn5xbzdo0Clc/PYCoz62DYaeZaZD
SLsJhz6jv5gmuYux08H8v50GWshTs5t1hnno8EZlxuUkMo3/17qWBB1qWigD
4oz9rMFo8ZEUHbrE9H32MvJrWfFVUpoOznzxWxjnM17KjUEmOTrM2MTw8yP7
qk+W1ynSIYyPj8qOjDk8t5bWoUMrdzz+GZ0HUyOzD/Xp0UEpS99kCvlLqesf
VwM6PKl8ODKOnDjLlVxlQodG4Z7GAeRJD61WdUs6eNfv62tDDg9s3XvRmw4t
wUl/ScgjWYkzK750EFwZzUhFPoxb1mb402HTQ4//EpCHmDf0J4LoIP5gYmsY
8oEIlaAbUXRoCt+/xRW5P6lqNCSbDpFVNZGqyOJV90okc+lQ6azHfBz51htD
7658OtjcHbc7hLxv9w+uraV0mJA9urAP2TNTVpVYRQehqLN8bMi7igtJZd10
uPO5Q6MHnY+du73tDPvoIF1kYtOKjH/VOLL0DI3PiPtGPbKj7GS38ms6PDy6
cqQUueGh6O+OMfQ+5YG0CGSLpvRL7xbooNEceh9DPq2jy2L4C+Xr0HG6IrLU
0Aa9c4UOO2rrmuRkGOcLO7bKdToYCTglCyH7H1SojmQvg8rBEd5ldJ5PzXjB
qyhYBg/Nr+4qQvaTDntMFS4Dr3rFDDLy1UcnnMT2loHYeAhzErL4q+wWbklk
IWv/28gVnK43p+TKoCNJcrMBcp8f57PEU2XwKLnd9Ae6T5SxP/ZjP1MGj9VG
f0whJ6e6SwZqlsEYwdzhLbJpxdvbDrpl4CFgOP8Y+dPnwgPqF8uAdemPWRQy
y+XTkTOOZSDDrOqwB1np+G0NzcQyaNCUiRBC95fB26cPsKWUgVGFwlEOZJ82
Tt4OQhkMxx8oWEL3nUoD4vgpchkU10SOPEWWda7xVysqgym9U34ByPsefC9X
aCqD7zG5Qz3o/tQ8/ShtsbkMbJRmMiqRzWWD7lS2lgEIdwmQkTPquXXlu8rA
ReXumRvIO9/IfDr4CsUnRNLkQObktBWW+ILmI7p1rwK6n5UYHGSd/FYG+jR9
RQFkzbSFrzlzZXBy79CfNXSfC5MIqRVdLINFUmx0G/KGWraR4EYZ9JxToOsi
L3gORfLuLIfagEyB8+g+mFj/4OaLXeXQ/zoh8yDyYSaHSwl7yuHvbE4zJ7JL
3C+JrXvLQYBDZJhx3/1UzIdzHCiHDSUuTUXksPnhwi7Zcqj8uJbBiyxxPDc2
/HA54FIFYbPovn+97bDZpuPlcCH7Om8u8gbHCrSfKAdOj92VAchZBs3/3VMp
h/s8fZPGyCfT7m87pVYOVl16ebLII6N6v/5h5XDik+v3Tcj/A5LPtrM=
          "]]}, Annotation[#, "Charting`Private`Tag$68787#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XnzV
          "]]}, Annotation[#, "Charting`Private`Tag$68787#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dhnR4ZnUpIEZ4f8DlAOmPQ==
          "]]}, Annotation[#, "Charting`Private`Tag$68787#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OlycqBXxWtzEg953JpPzwMULPflX95L+H+vbd5Y=
          "]]}, Annotation[#, "Charting`Private`Tag$68787#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KkXpPx3ZVNI9740mFqAU5xP6DepI/w8+RYI6
          "]]}, Annotation[#, "Charting`Private`Tag$68787#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
F69cBA==
          "]]}, Annotation[#, "Charting`Private`Tag$68787#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EmhmeXv45L951a819xeVwNd+zRkx7P8B1GdQtA==
          "]]}, Annotation[#, "Charting`Private`Tag$68787#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
AyRpVec=
          "]]}, Annotation[#, "Charting`Private`Tag$68787#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[Alpha]", HoldForm], TraditionalForm], 
       FormBox["\"Overlap\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Student-student overlap Q\"", TraditionalForm], 
     PlotRange -> {{0, 4000}, {-0.2, 1.2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SubscriptBox["Q", 
        RowBox[{"1", ",", "1"}]], 
       SubscriptBox["Q", 
        RowBox[{"1", ",", "2"}]], 
       SubscriptBox["Q", 
        RowBox[{"1", ",", "3"}]], 
       SubscriptBox["Q", 
        RowBox[{"1", ",", "4"}]], 
       SubscriptBox["Q", 
        RowBox[{"2", ",", "2"}]], 
       SubscriptBox["Q", 
        RowBox[{"2", ",", "3"}]], 
       SubscriptBox["Q", 
        RowBox[{"2", ",", "4"}]], 
       SubscriptBox["Q", 
        RowBox[{"3", ",", "3"}]], 
       SubscriptBox["Q", 
        RowBox[{"3", ",", "4"}]], 
       SubscriptBox["Q", 
        RowBox[{"4", ",", "4"}]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 14, 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756123955374552*^9, 3.756125630480309*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"c7a940c4-ebd1-4b9e-8296-18b8d647ebdb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
97O1Ty0e/abbcHIOsC5iZByH/h/2KF34
       "]]},
     Annotation[#, "Charting`Private`Tag$68940#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], 
    FormBox[
     RowBox[{
       SubscriptBox["\[Epsilon]", "g"], "(", 
       TagBox["\[Alpha]", HoldForm], ")"}], TraditionalForm]},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Generalization error\"", TraditionalForm],
  PlotRange->{{0, 4000}, {0., 0.03258891836716038}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.756123955374552*^9, 3.7561256305975037`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"ea6d819c-f2eb-43b5-a8cf-69d530b90d38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["r", 
   RowBox[{"1", ",", "1"}]], "[", "4000", "]"}]], "Input",
 CellChangeTimes->{{3.756125453012196*^9, 3.7561254784082623`*^9}, {
  3.7561255324710083`*^9, 3.756125535964072*^9}, {3.7561257009701357`*^9, 
  3.7561257273890057`*^9}, {3.756125812531764*^9, 3.756125817709743*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"4d68dd39-bfa3-4e82-84f9-b4c8881f4842"],

Cell[BoxData["0.9971519393582141`"], "Output",
 CellChangeTimes->{{3.756125453669387*^9, 3.756125479317842*^9}, {
  3.756125511481608*^9, 3.7561255367127857`*^9}, {3.756125702072383*^9, 
  3.756125727915346*^9}, {3.7561258136171722`*^9, 3.75612581807894*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"c26fb022-fc3e-46cf-bd97-046f8b33c912"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7561255636799507`*^9},
 NumberMarks->False,ExpressionUUID->"fdcacb41-da11-47d4-8bd7-959615462d97"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.75612556025149*^9, 
  3.756125560271826*^9}},ExpressionUUID->"da5b4aea-3a14-4a0b-84ac-\
79843138a402"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7561255860216303`*^9, 
  3.756125595870153*^9}},ExpressionUUID->"518eea0b-f7c0-4ef8-af57-\
5f7b52c91f30"]
},
WindowSize->{1680, 1001},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 98937, 2432, 4323, "Input",ExpressionUUID->"79a0b15f-563c-4433-a51c-12e5182b8e9d"],
Cell[CellGroupData[{
Cell[99362, 2449, 10954, 286, 626, "Input",ExpressionUUID->"54ef461b-8990-4310-abc8-1f127de3f3aa"],
Cell[110319, 2737, 138418, 2424, 500, "Output",ExpressionUUID->"c24cc1b5-38ec-42c9-9dc9-f96a7930e16f"],
Cell[248740, 5163, 138248, 2455, 441, "Output",ExpressionUUID->"c7a940c4-ebd1-4b9e-8296-18b8d647ebdb"],
Cell[386991, 7620, 10786, 198, 348, "Output",ExpressionUUID->"ea6d819c-f2eb-43b5-a8cf-69d530b90d38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397814, 7823, 400, 7, 34, "Input",ExpressionUUID->"4d68dd39-bfa3-4e82-84f9-b4c8881f4842"],
Cell[398217, 7832, 338, 4, 35, "Output",ExpressionUUID->"c26fb022-fc3e-46cf-bd97-046f8b33c912"]
}, Open  ]],
Cell[398570, 7839, 146, 2, 31, "Input",ExpressionUUID->"fdcacb41-da11-47d4-8bd7-959615462d97"],
Cell[398719, 7843, 151, 3, 31, InheritFromParent,ExpressionUUID->"da5b4aea-3a14-4a0b-84ac-79843138a402"],
Cell[398873, 7848, 154, 3, 31, "Input",ExpressionUUID->"518eea0b-f7c0-4ef8-af57-5f7b52c91f30"]
}
]
*)

